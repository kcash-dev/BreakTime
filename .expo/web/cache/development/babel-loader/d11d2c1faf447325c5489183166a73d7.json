{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"repeats\"],\n    _excluded2 = [\"channelId\"],\n    _excluded3 = [\"channelId\"],\n    _excluded4 = [\"channelId\"],\n    _excluded5 = [\"channelId\"],\n    _excluded6 = [\"channelId\"];\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Platform, UnavailabilityError } from '@unimodules/core';\nimport { v4 as uuidv4 } from 'uuid';\nimport NotificationScheduler from \"./NotificationScheduler\";\nexport default function scheduleNotificationAsync(request) {\n  var _request$identifier;\n\n  return _regeneratorRuntime.async(function scheduleNotificationAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (NotificationScheduler.scheduleNotificationAsync) {\n            _context.next = 2;\n            break;\n          }\n\n          throw new UnavailabilityError('Notifications', 'scheduleNotificationAsync');\n\n        case 2:\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(NotificationScheduler.scheduleNotificationAsync((_request$identifier = request.identifier) != null ? _request$identifier : uuidv4(), request.content, parseTrigger(request.trigger)));\n\n        case 4:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nvar DAILY_TRIGGER_EXPECTED_DATE_COMPONENTS = ['hour', 'minute'];\nvar WEEKLY_TRIGGER_EXPECTED_DATE_COMPONENTS = ['weekday', 'hour', 'minute'];\nvar YEARLY_TRIGGER_EXPECTED_DATE_COMPONENTS = ['day', 'month', 'hour', 'minute'];\nexport function parseTrigger(userFacingTrigger) {\n  if (userFacingTrigger === null) {\n    return null;\n  }\n\n  if (userFacingTrigger === undefined) {\n    throw new TypeError('Encountered an `undefined` notification trigger. If you want to trigger the notification immediately, pass in an explicit `null` value.');\n  }\n\n  if (isDateTrigger(userFacingTrigger)) {\n    return parseDateTrigger(userFacingTrigger);\n  } else if (isDailyTriggerInput(userFacingTrigger)) {\n    validateDateComponentsInTrigger(userFacingTrigger, DAILY_TRIGGER_EXPECTED_DATE_COMPONENTS);\n    return {\n      type: 'daily',\n      channelId: userFacingTrigger.channelId,\n      hour: userFacingTrigger.hour,\n      minute: userFacingTrigger.minute\n    };\n  } else if (isWeeklyTriggerInput(userFacingTrigger)) {\n    validateDateComponentsInTrigger(userFacingTrigger, WEEKLY_TRIGGER_EXPECTED_DATE_COMPONENTS);\n    return {\n      type: 'weekly',\n      channelId: userFacingTrigger.channelId,\n      weekday: userFacingTrigger.weekday,\n      hour: userFacingTrigger.hour,\n      minute: userFacingTrigger.minute\n    };\n  } else if (isYearlyTriggerInput(userFacingTrigger)) {\n    validateDateComponentsInTrigger(userFacingTrigger, YEARLY_TRIGGER_EXPECTED_DATE_COMPONENTS);\n    return {\n      type: 'yearly',\n      channelId: userFacingTrigger.channelId,\n      day: userFacingTrigger.day,\n      month: userFacingTrigger.month,\n      hour: userFacingTrigger.hour,\n      minute: userFacingTrigger.minute\n    };\n  } else if (isSecondsPropertyMisusedInCalendarTriggerInput(userFacingTrigger)) {\n    throw new TypeError('Could not have inferred the notification trigger type: if you want to use a time interval trigger, pass in only `seconds` with or without `repeats` property; if you want to use calendar-based trigger, pass in `second`.');\n  } else if ('seconds' in userFacingTrigger) {\n    var _userFacingTrigger$re;\n\n    return {\n      type: 'timeInterval',\n      channelId: userFacingTrigger.channelId,\n      seconds: userFacingTrigger.seconds,\n      repeats: (_userFacingTrigger$re = userFacingTrigger.repeats) != null ? _userFacingTrigger$re : false\n    };\n  } else if (isCalendarTrigger(userFacingTrigger)) {\n    var repeats = userFacingTrigger.repeats,\n        calendarTrigger = _objectWithoutProperties(userFacingTrigger, _excluded);\n\n    return {\n      type: 'calendar',\n      value: calendarTrigger,\n      repeats: repeats\n    };\n  } else {\n    return Platform.select({\n      default: null,\n      android: {\n        type: 'channel',\n        channelId: userFacingTrigger.channelId\n      }\n    });\n  }\n}\n\nfunction isCalendarTrigger(trigger) {\n  var channelId = trigger.channelId,\n      triggerWithoutChannelId = _objectWithoutProperties(trigger, _excluded2);\n\n  return Object.keys(triggerWithoutChannelId).length > 0;\n}\n\nfunction isDateTrigger(trigger) {\n  return trigger instanceof Date || typeof trigger === 'number' || typeof trigger === 'object' && 'date' in trigger;\n}\n\nfunction parseDateTrigger(trigger) {\n  if (trigger instanceof Date || typeof trigger === 'number') {\n    return {\n      type: 'date',\n      timestamp: toTimestamp(trigger)\n    };\n  }\n\n  return {\n    type: 'date',\n    timestamp: toTimestamp(trigger.date),\n    channelId: trigger.channelId\n  };\n}\n\nfunction toTimestamp(date) {\n  if (date instanceof Date) {\n    return date.getTime();\n  }\n\n  return date;\n}\n\nfunction isDailyTriggerInput(trigger) {\n  if (typeof trigger !== 'object') return false;\n\n  var channelId = trigger.channelId,\n      triggerWithoutChannelId = _objectWithoutProperties(trigger, _excluded3);\n\n  return Object.keys(triggerWithoutChannelId).length === DAILY_TRIGGER_EXPECTED_DATE_COMPONENTS.length + 1 && DAILY_TRIGGER_EXPECTED_DATE_COMPONENTS.every(function (component) {\n    return component in triggerWithoutChannelId;\n  }) && 'repeats' in triggerWithoutChannelId && triggerWithoutChannelId.repeats === true;\n}\n\nfunction isWeeklyTriggerInput(trigger) {\n  if (typeof trigger !== 'object') return false;\n\n  var channelId = trigger.channelId,\n      triggerWithoutChannelId = _objectWithoutProperties(trigger, _excluded4);\n\n  return Object.keys(triggerWithoutChannelId).length === WEEKLY_TRIGGER_EXPECTED_DATE_COMPONENTS.length + 1 && WEEKLY_TRIGGER_EXPECTED_DATE_COMPONENTS.every(function (component) {\n    return component in triggerWithoutChannelId;\n  }) && 'repeats' in triggerWithoutChannelId && triggerWithoutChannelId.repeats === true;\n}\n\nfunction isYearlyTriggerInput(trigger) {\n  if (typeof trigger !== 'object') return false;\n\n  var channelId = trigger.channelId,\n      triggerWithoutChannelId = _objectWithoutProperties(trigger, _excluded5);\n\n  return Object.keys(triggerWithoutChannelId).length === YEARLY_TRIGGER_EXPECTED_DATE_COMPONENTS.length + 1 && YEARLY_TRIGGER_EXPECTED_DATE_COMPONENTS.every(function (component) {\n    return component in triggerWithoutChannelId;\n  }) && 'repeats' in triggerWithoutChannelId && triggerWithoutChannelId.repeats === true;\n}\n\nfunction isSecondsPropertyMisusedInCalendarTriggerInput(trigger) {\n  var channelId = trigger.channelId,\n      triggerWithoutChannelId = _objectWithoutProperties(trigger, _excluded6);\n\n  return 'seconds' in triggerWithoutChannelId && 'repeats' in triggerWithoutChannelId && Object.keys(triggerWithoutChannelId).length > 2 || 'seconds' in triggerWithoutChannelId && !('repeats' in triggerWithoutChannelId) && Object.keys(triggerWithoutChannelId).length > 1;\n}\n\nfunction validateDateComponentsInTrigger(trigger, components) {\n  var anyTriggerType = trigger;\n  components.forEach(function (component) {\n    if (!(component in anyTriggerType)) {\n      throw new TypeError(\"The \" + component + \" parameter needs to be present\");\n    }\n\n    if (typeof anyTriggerType[component] !== 'number') {\n      throw new TypeError(\"The \" + component + \" parameter should be a number\");\n    }\n\n    switch (component) {\n      case 'month':\n        {\n          var month = anyTriggerType.month;\n\n          if (month < 0 || month > 11) {\n            throw new RangeError(\"The month parameter needs to be between 0 and 11. Found: \" + month);\n          }\n\n          break;\n        }\n\n      case 'day':\n        {\n          var day = anyTriggerType.day,\n              _month = anyTriggerType.month;\n          var daysInGivenMonth = daysInMonth(_month);\n\n          if (day < 1 || day > daysInGivenMonth) {\n            throw new RangeError(\"The day parameter for month \" + _month + \" must be between 1 and \" + daysInGivenMonth + \". Found: \" + day);\n          }\n\n          break;\n        }\n\n      case 'weekday':\n        {\n          var weekday = anyTriggerType.weekday;\n\n          if (weekday < 1 || weekday > 7) {\n            throw new RangeError(\"The weekday parameter needs to be between 1 and 7. Found: \" + weekday);\n          }\n\n          break;\n        }\n\n      case 'hour':\n        {\n          var hour = anyTriggerType.hour;\n\n          if (hour < 0 || hour > 23) {\n            throw new RangeError(\"The hour parameter needs to be between 0 and 23. Found: \" + hour);\n          }\n\n          break;\n        }\n\n      case 'minute':\n        {\n          var minute = anyTriggerType.minute;\n\n          if (minute < 0 || minute > 59) {\n            throw new RangeError(\"The minute parameter needs to be between 0 and 59. Found: \" + minute);\n          }\n\n          break;\n        }\n    }\n  });\n}\n\nfunction daysInMonth() {\n  var month = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var year = arguments.length > 1 ? arguments[1] : undefined;\n  return new Date(year != null ? year : 2000, month + 1, 0).getDate();\n}","map":{"version":3,"sources":["../src/scheduleNotificationAsync.ts"],"names":[],"mappings":"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","sourcesContent":["import { Platform, UnavailabilityError } from '@unimodules/core';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport NotificationScheduler from './NotificationScheduler';\nimport { NotificationTriggerInput as NativeNotificationTriggerInput } from './NotificationScheduler.types';\nimport {\n  NotificationRequestInput,\n  NotificationTriggerInput,\n  DailyTriggerInput,\n  WeeklyTriggerInput,\n  YearlyTriggerInput,\n  CalendarTriggerInput,\n  TimeIntervalTriggerInput,\n  DateTriggerInput,\n  ChannelAwareTriggerInput,\n  SchedulableNotificationTriggerInput,\n} from './Notifications.types';\n\nexport default async function scheduleNotificationAsync(\n  request: NotificationRequestInput\n): Promise<string> {\n  if (!NotificationScheduler.scheduleNotificationAsync) {\n    throw new UnavailabilityError('Notifications', 'scheduleNotificationAsync');\n  }\n\n  return await NotificationScheduler.scheduleNotificationAsync(\n    request.identifier ?? uuidv4(),\n    request.content,\n    parseTrigger(request.trigger)\n  );\n}\n\ntype ValidTriggerDateComponents = 'month' | 'day' | 'weekday' | 'hour' | 'minute';\n\nconst DAILY_TRIGGER_EXPECTED_DATE_COMPONENTS: readonly ValidTriggerDateComponents[] = [\n  'hour',\n  'minute',\n];\nconst WEEKLY_TRIGGER_EXPECTED_DATE_COMPONENTS: readonly ValidTriggerDateComponents[] = [\n  'weekday',\n  'hour',\n  'minute',\n];\nconst YEARLY_TRIGGER_EXPECTED_DATE_COMPONENTS: readonly ValidTriggerDateComponents[] = [\n  'day',\n  'month',\n  'hour',\n  'minute',\n];\n\nexport function parseTrigger(\n  userFacingTrigger: NotificationTriggerInput\n): NativeNotificationTriggerInput {\n  if (userFacingTrigger === null) {\n    return null;\n  }\n\n  if (userFacingTrigger === undefined) {\n    throw new TypeError(\n      'Encountered an `undefined` notification trigger. If you want to trigger the notification immediately, pass in an explicit `null` value.'\n    );\n  }\n\n  if (isDateTrigger(userFacingTrigger)) {\n    return parseDateTrigger(userFacingTrigger);\n  } else if (isDailyTriggerInput(userFacingTrigger)) {\n    validateDateComponentsInTrigger(userFacingTrigger, DAILY_TRIGGER_EXPECTED_DATE_COMPONENTS);\n    return {\n      type: 'daily',\n      channelId: userFacingTrigger.channelId,\n      hour: userFacingTrigger.hour,\n      minute: userFacingTrigger.minute,\n    };\n  } else if (isWeeklyTriggerInput(userFacingTrigger)) {\n    validateDateComponentsInTrigger(userFacingTrigger, WEEKLY_TRIGGER_EXPECTED_DATE_COMPONENTS);\n    return {\n      type: 'weekly',\n      channelId: userFacingTrigger.channelId,\n      weekday: userFacingTrigger.weekday,\n      hour: userFacingTrigger.hour,\n      minute: userFacingTrigger.minute,\n    };\n  } else if (isYearlyTriggerInput(userFacingTrigger)) {\n    validateDateComponentsInTrigger(userFacingTrigger, YEARLY_TRIGGER_EXPECTED_DATE_COMPONENTS);\n    return {\n      type: 'yearly',\n      channelId: userFacingTrigger.channelId,\n      day: userFacingTrigger.day,\n      month: userFacingTrigger.month,\n      hour: userFacingTrigger.hour,\n      minute: userFacingTrigger.minute,\n    };\n  } else if (isSecondsPropertyMisusedInCalendarTriggerInput(userFacingTrigger)) {\n    throw new TypeError(\n      'Could not have inferred the notification trigger type: if you want to use a time interval trigger, pass in only `seconds` with or without `repeats` property; if you want to use calendar-based trigger, pass in `second`.'\n    );\n  } else if ('seconds' in userFacingTrigger) {\n    return {\n      type: 'timeInterval',\n      channelId: userFacingTrigger.channelId,\n      seconds: userFacingTrigger.seconds,\n      repeats: userFacingTrigger.repeats ?? false,\n    };\n  } else if (isCalendarTrigger(userFacingTrigger)) {\n    const { repeats, ...calendarTrigger } = userFacingTrigger;\n    return { type: 'calendar', value: calendarTrigger, repeats };\n  } else {\n    return Platform.select({\n      default: null, // There's no notion of channels on platforms other than Android.\n      android: { type: 'channel', channelId: userFacingTrigger.channelId },\n    });\n  }\n}\n\nfunction isCalendarTrigger(\n  trigger: CalendarTriggerInput | ChannelAwareTriggerInput\n): trigger is CalendarTriggerInput {\n  const { channelId, ...triggerWithoutChannelId } = trigger;\n  return Object.keys(triggerWithoutChannelId).length > 0;\n}\n\nfunction isDateTrigger(\n  trigger:\n    | DateTriggerInput\n    | WeeklyTriggerInput\n    | DailyTriggerInput\n    | CalendarTriggerInput\n    | TimeIntervalTriggerInput\n): trigger is DateTriggerInput {\n  return (\n    trigger instanceof Date ||\n    typeof trigger === 'number' ||\n    (typeof trigger === 'object' && 'date' in trigger)\n  );\n}\n\nfunction parseDateTrigger(trigger: DateTriggerInput): NativeNotificationTriggerInput {\n  if (trigger instanceof Date || typeof trigger === 'number') {\n    return { type: 'date', timestamp: toTimestamp(trigger) };\n  }\n  return { type: 'date', timestamp: toTimestamp(trigger.date), channelId: trigger.channelId };\n}\n\nfunction toTimestamp(date: number | Date) {\n  if (date instanceof Date) {\n    return date.getTime();\n  }\n  return date;\n}\n\nfunction isDailyTriggerInput(\n  trigger: SchedulableNotificationTriggerInput\n): trigger is DailyTriggerInput {\n  if (typeof trigger !== 'object') return false;\n  const { channelId, ...triggerWithoutChannelId } = trigger as DailyTriggerInput;\n  return (\n    Object.keys(triggerWithoutChannelId).length ===\n      DAILY_TRIGGER_EXPECTED_DATE_COMPONENTS.length + 1 &&\n    DAILY_TRIGGER_EXPECTED_DATE_COMPONENTS.every(\n      component => component in triggerWithoutChannelId\n    ) &&\n    'repeats' in triggerWithoutChannelId &&\n    triggerWithoutChannelId.repeats === true\n  );\n}\n\nfunction isWeeklyTriggerInput(\n  trigger: SchedulableNotificationTriggerInput\n): trigger is WeeklyTriggerInput {\n  if (typeof trigger !== 'object') return false;\n  const { channelId, ...triggerWithoutChannelId } = trigger as WeeklyTriggerInput;\n  return (\n    Object.keys(triggerWithoutChannelId).length ===\n      WEEKLY_TRIGGER_EXPECTED_DATE_COMPONENTS.length + 1 &&\n    WEEKLY_TRIGGER_EXPECTED_DATE_COMPONENTS.every(\n      component => component in triggerWithoutChannelId\n    ) &&\n    'repeats' in triggerWithoutChannelId &&\n    triggerWithoutChannelId.repeats === true\n  );\n}\n\nfunction isYearlyTriggerInput(\n  trigger: SchedulableNotificationTriggerInput\n): trigger is YearlyTriggerInput {\n  if (typeof trigger !== 'object') return false;\n  const { channelId, ...triggerWithoutChannelId } = trigger as YearlyTriggerInput;\n  return (\n    Object.keys(triggerWithoutChannelId).length ===\n      YEARLY_TRIGGER_EXPECTED_DATE_COMPONENTS.length + 1 &&\n    YEARLY_TRIGGER_EXPECTED_DATE_COMPONENTS.every(\n      component => component in triggerWithoutChannelId\n    ) &&\n    'repeats' in triggerWithoutChannelId &&\n    triggerWithoutChannelId.repeats === true\n  );\n}\n\nfunction isSecondsPropertyMisusedInCalendarTriggerInput(\n  trigger: TimeIntervalTriggerInput | CalendarTriggerInput\n) {\n  const { channelId, ...triggerWithoutChannelId } = trigger;\n  return (\n    // eg. { seconds: ..., repeats: ..., hour: ... }\n    ('seconds' in triggerWithoutChannelId &&\n      'repeats' in triggerWithoutChannelId &&\n      Object.keys(triggerWithoutChannelId).length > 2) ||\n    // eg. { seconds: ..., hour: ... }\n    ('seconds' in triggerWithoutChannelId &&\n      !('repeats' in triggerWithoutChannelId) &&\n      Object.keys(triggerWithoutChannelId).length > 1)\n  );\n}\n\nfunction validateDateComponentsInTrigger(\n  trigger: NonNullable<NotificationTriggerInput>,\n  components: readonly ValidTriggerDateComponents[]\n) {\n  const anyTriggerType = trigger as any;\n  components.forEach(component => {\n    if (!(component in anyTriggerType)) {\n      throw new TypeError(`The ${component} parameter needs to be present`);\n    }\n    if (typeof anyTriggerType[component] !== 'number') {\n      throw new TypeError(`The ${component} parameter should be a number`);\n    }\n    switch (component) {\n      case 'month': {\n        const { month } = anyTriggerType;\n        if (month < 0 || month > 11) {\n          throw new RangeError(`The month parameter needs to be between 0 and 11. Found: ${month}`);\n        }\n        break;\n      }\n      case 'day': {\n        const { day, month } = anyTriggerType;\n        const daysInGivenMonth = daysInMonth(month);\n        if (day < 1 || day > daysInGivenMonth) {\n          throw new RangeError(\n            `The day parameter for month ${month} must be between 1 and ${daysInGivenMonth}. Found: ${day}`\n          );\n        }\n        break;\n      }\n      case 'weekday': {\n        const { weekday } = anyTriggerType;\n        if (weekday < 1 || weekday > 7) {\n          throw new RangeError(\n            `The weekday parameter needs to be between 1 and 7. Found: ${weekday}`\n          );\n        }\n        break;\n      }\n      case 'hour': {\n        const { hour } = anyTriggerType;\n        if (hour < 0 || hour > 23) {\n          throw new RangeError(`The hour parameter needs to be between 0 and 23. Found: ${hour}`);\n        }\n        break;\n      }\n      case 'minute': {\n        const { minute } = anyTriggerType;\n        if (minute < 0 || minute > 59) {\n          throw new RangeError(\n            `The minute parameter needs to be between 0 and 59. Found: ${minute}`\n          );\n        }\n        break;\n      }\n    }\n  });\n}\n\n/**\n * Determines the number of days in the given month (or January if omitted).\n * If year is specified, it will include leap year logic, else it will always assume a leap year\n */\nfunction daysInMonth(month: number = 0, year?: number) {\n  return new Date(year ?? 2000, month + 1, 0).getDate();\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}