{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { UnavailabilityError } from '@unimodules/core';\nimport NotificationScheduler from \"./NotificationScheduler\";\nexport default function cancelScheduledNotificationAsync(identifier) {\n  return _regeneratorRuntime.async(function cancelScheduledNotificationAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (NotificationScheduler.cancelScheduledNotificationAsync) {\n            _context.next = 2;\n            break;\n          }\n\n          throw new UnavailabilityError('Notifications', 'cancelScheduledNotificationAsync');\n\n        case 2:\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(NotificationScheduler.cancelScheduledNotificationAsync(identifier));\n\n        case 4:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["../src/cancelScheduledNotificationAsync.ts"],"names":[],"mappings":";AAAA,SAAS,mBAAT,QAAoC,kBAApC;AAEA,OAAO,qBAAP;AAEA,eAAe,SAAe,gCAAf,CAAgD,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,cACR,qBAAqB,CAAC,gCADd;AAAA;AAAA;AAAA;;AAAA,gBAEL,IAAI,mBAAJ,CAAwB,eAAxB,EAAyC,kCAAzC,CAFK;;AAAA;AAAA;AAAA,2CAKA,qBAAqB,CAAC,gCAAtB,CAAuD,UAAvD,CALA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { UnavailabilityError } from '@unimodules/core';\n\nimport NotificationScheduler from './NotificationScheduler';\n\nexport default async function cancelScheduledNotificationAsync(identifier: string): Promise<void> {\n  if (!NotificationScheduler.cancelScheduledNotificationAsync) {\n    throw new UnavailabilityError('Notifications', 'cancelScheduledNotificationAsync');\n  }\n\n  return await NotificationScheduler.cancelScheduledNotificationAsync(identifier);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}