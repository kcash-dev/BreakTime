{"ast":null,"code":"var _jsxFileName = \"/Users/kylecash/Documents/GitHub/BreakTime/App.js\";\nimport * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { StackNav } from \"./src/navigators/StackNav\";\nimport { ProfileScreen } from \"./src/screens/ProfileScreen\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { colors } from \"./src/utils/Colors\";\nimport store from \"./src/store/store\";\nimport { Provider } from 'react-redux';\nimport { ProfileNav } from \"./src/navigators/ProfileNav\";\nvar Tab = createBottomTabNavigator();\n\nfunction App() {\n  var _this = this;\n\n  return React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === 'Home') {\n            iconName = focused ? 'ios-home' : 'ios-home-outline';\n          } else if (route.name === 'Profile') {\n            iconName = focused ? 'person-circle' : 'person-circle-outline';\n          }\n\n          return React.createElement(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 22\n            }\n          });\n        },\n        tabBarActiveTintColor: colors.secondary,\n        tabBarInactiveTintColor: 'gray',\n        headerShown: false\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: StackNav,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Profile\",\n    component: ProfileNav,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kylecash/Documents/GitHub/BreakTime/App.js"],"names":["React","NavigationContainer","createBottomTabNavigator","StackNav","ProfileScreen","Ionicons","colors","store","Provider","ProfileNav","Tab","App","route","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","secondary","tabBarInactiveTintColor","headerShown"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AAEA,SAASC,QAAT;AACA,SAASC,aAAT;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,MAAT;AAEA,OAAOC,KAAP;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,UAAT;AAEA,IAAMC,GAAG,GAAGR,wBAAwB,EAApC;;AAEA,SAASS,GAAT,GAAe;AAAA;;AACb,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEJ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD,CAAK,SAAL;AACE,IAAA,aAAa,EAAE;AAAA,UAAGK,KAAH,QAAGA,KAAH;AAAA,aAAgB;AAC7BC,QAAAA,UAAU,EAAE,2BAA8B;AAAA,cAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,cAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,cAAXC,IAAW,SAAXA,IAAW;AACxC,cAAIC,QAAJ;;AAEA,cAAIL,KAAK,CAACM,IAAN,KAAe,MAAnB,EAA2B;AACzBD,YAAAA,QAAQ,GAAGH,OAAO,GACd,UADc,GAEd,kBAFJ;AAGD,WAJD,MAIO,IAAIF,KAAK,CAACM,IAAN,KAAe,SAAnB,EAA8B;AACnCD,YAAAA,QAAQ,GAAGH,OAAO,GAAG,eAAH,GAAqB,uBAAvC;AACD;;AAGD,iBAAO,oBAAC,QAAD;AAAU,YAAA,IAAI,EAAEG,QAAhB;AAA0B,YAAA,IAAI,EAAED,IAAhC;AAAsC,YAAA,KAAK,EAAED,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,SAd4B;AAe7BI,QAAAA,qBAAqB,EAAEb,MAAM,CAACc,SAfD;AAgB7BC,QAAAA,uBAAuB,EAAE,MAhBI;AAiB7BC,QAAAA,WAAW,EAAE;AAjBgB,OAAhB;AAAA,KADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAqBE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,MAAjB;AAAwB,IAAA,SAAS,EAAGnB,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,EAsBE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,SAAjB;AAA2B,IAAA,SAAS,EAAGM,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBF,CADF,CADF,CADF;AA8BD;;AAED,eAAeE,GAAf","sourcesContent":["import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n\nimport { StackNav } from './src/navigators/StackNav';\nimport { ProfileScreen } from './src/screens/ProfileScreen';\n\nimport { Ionicons } from '@expo/vector-icons';\nimport { colors } from './src/utils/Colors';\n\nimport store from './src/store/store'\nimport { Provider } from 'react-redux'\nimport { ProfileNav } from './src/navigators/ProfileNav';\n\nconst Tab = createBottomTabNavigator();\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <NavigationContainer>\n        <Tab.Navigator\n          screenOptions={({ route }) => ({\n            tabBarIcon: ({ focused, color, size }) => {\n              let iconName;\n\n              if (route.name === 'Home') {\n                iconName = focused\n                  ? 'ios-home'\n                  : 'ios-home-outline';\n              } else if (route.name === 'Profile') {\n                iconName = focused ? 'person-circle' : 'person-circle-outline';\n              }\n\n              // You can return any component that you like here!\n              return <Ionicons name={iconName} size={size} color={color} />;\n            },\n            tabBarActiveTintColor: colors.secondary,\n            tabBarInactiveTintColor: 'gray',\n            headerShown: false\n          })}\n        >\n          <Tab.Screen name=\"Home\" component={ StackNav } />\n          <Tab.Screen name=\"Profile\" component={ ProfileNav } />\n        </Tab.Navigator>\n      </NavigationContainer>\n    </Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}