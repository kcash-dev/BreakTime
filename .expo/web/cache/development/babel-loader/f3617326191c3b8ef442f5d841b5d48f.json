{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/kylecash/Documents/GitHub/BreakTime/src/screens/UserDataScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { logout } from \"../store/taskAction\";\nimport { ButtonComp } from \"../components/Button\";\nimport { useNavigation } from '@react-navigation/native';\nimport { colors } from \"../utils/Colors\";\nimport { fontSizes } from \"../utils/Sizes\";\nimport { auth, currentUserUID, db } from \"../api/Firebase\";\nimport { useEffect } from 'react';\n\nvar UserDataScreen = function UserDataScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var dispatch = useDispatch();\n\n  var clearStateLogout = function clearStateLogout() {\n    return dispatch(logout());\n  };\n\n  useEffect(function () {\n    function getUserInfo() {\n      var doc, dataObj;\n      return _regeneratorRuntime.async(function getUserInfo$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(db.collection('users').doc(currentUserUID).get());\n\n            case 2:\n              doc = _context.sent;\n\n              if (!doc.exists) {\n                Alert.alert('No user data found!');\n              } else {\n                dataObj = doc.data();\n                setUsername(dataObj.firstName);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    getUserInfo();\n  }, []);\n  var navigation = useNavigation();\n\n  var navigateDoneTasks = function navigateDoneTasks() {\n    return navigation.navigate('TasksDone');\n  };\n\n  var tasks = useSelector(function (state) {\n    return state.tasks;\n  });\n\n  var handleSignOut = function handleSignOut() {\n    clearStateLogout();\n    auth.signOut().then(function () {\n      navigation.navigate('Login');\n    }).catch(function (err) {\n      return alert(err.message);\n    });\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.textContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.welcomeText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, username, \", here's what you focused on today.\"), React.createElement(Image, {\n    style: styles.profileImage,\n    source: {\n      uri: 'https://i.imgur.com/MfVj0pW.png'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.dataContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    data: tasks,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.itemContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }\n      }, React.createElement(Pressable, {\n        style: function style(_ref2) {\n          var pressed = _ref2.pressed;\n          return [{\n            opacity: pressed ? 0.5 : 1.0\n          }];\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.itemText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 33\n        }\n      }, item.task)), !tasks ? null : React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 33\n        }\n      }, item.finished === true ? React.createElement(Text, {\n        style: styles.finishedText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 41\n        }\n      }, \"Finished\") : React.createElement(Text, {\n        style: styles.unfinishedText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 41\n        }\n      }, \"Unfinished\")));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, React.createElement(ButtonComp, {\n    name: \"Task History\",\n    callback: navigateDoneTasks,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: [styles.buttonContainer, {\n      marginTop: 40\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, React.createElement(ButtonComp, {\n    name: \"Sign Out\",\n    callback: handleSignOut,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default UserDataScreen;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: colors.primary,\n    flex: 1\n  },\n  textContainer: {\n    alignItems: 'center',\n    marginTop: 40,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    borderBottomWidth: 1,\n    width: '100%'\n  },\n  dataContainer: {\n    alignContent: 'center',\n    height: '60%'\n  },\n  profileImage: {\n    height: 50,\n    width: 50,\n    right: 10\n  },\n  welcomeText: {\n    left: 10,\n    fontWeight: 'bold'\n  },\n  itemContainer: {\n    borderWidth: 1,\n    backgroundColor: colors.white,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    alignItems: 'center',\n    marginVertical: 10\n  },\n  itemText: {\n    fontSize: fontSizes.xl,\n    left: 10\n  },\n  icon: {\n    right: 10\n  },\n  finishedText: {\n    color: colors.green\n  },\n  unfinishedText: {\n    color: colors.red\n  },\n  buttonContainer: {\n    width: '100%',\n    alignItems: 'center',\n    alignContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/kylecash/Documents/GitHub/BreakTime/src/screens/UserDataScreen.js"],"names":["React","useState","useSelector","useDispatch","logout","ButtonComp","useNavigation","colors","fontSizes","auth","currentUserUID","db","useEffect","UserDataScreen","username","setUsername","dispatch","clearStateLogout","getUserInfo","collection","doc","get","exists","Alert","alert","dataObj","data","firstName","navigation","navigateDoneTasks","navigate","tasks","state","handleSignOut","signOut","then","catch","err","message","styles","container","textContainer","welcomeText","profileImage","uri","dataContainer","item","id","itemContainer","pressed","opacity","itemText","task","finished","finishedText","unfinishedText","buttonContainer","marginTop","StyleSheet","create","backgroundColor","primary","flex","alignItems","flexDirection","justifyContent","borderBottomWidth","width","alignContent","height","right","left","fontWeight","borderWidth","white","marginVertical","fontSize","xl","icon","color","green","red"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, View, Image, Pressable, FlatList, SafeAreaView, Alert } from 'react-native';\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport { logout } from '../store/taskAction';\nimport { ButtonComp } from '../components/Button';\nimport { useNavigation } from '@react-navigation/native';\nimport { colors } from '../utils/Colors';\nimport { fontSizes } from '../utils/Sizes';\nimport { auth, currentUserUID, db } from '../api/Firebase'\nimport { useEffect } from 'react';\n\nconst UserDataScreen = () => {\n    const [ username, setUsername ] = useState('')\n    const dispatch = useDispatch();\n    const clearStateLogout = () => dispatch(logout())\n\n    useEffect(() => {\n        async function getUserInfo() {\n            let doc = await db\n            .collection('users')\n            .doc(currentUserUID)\n            .get();\n\n            if(!doc.exists) {\n                Alert.alert('No user data found!')\n            } else {\n                let dataObj = doc.data();\n                setUsername(dataObj.firstName)\n            }\n        }\n\n        getUserInfo();\n    }, [])\n\n    const navigation = useNavigation();\n    const navigateDoneTasks = () => navigation.navigate('TasksDone');\n\n    const tasks = useSelector(state => state.tasks);\n\n    const handleSignOut = () => {\n        clearStateLogout();\n        auth\n        .signOut()\n        .then(() => {\n            navigation.navigate('Login')\n        })\n        .catch(err => alert(err.message))\n    }\n\n    return (\n        <SafeAreaView style={ styles.container }>\n            <View style={ styles.textContainer }>\n                <Text style={ styles.welcomeText }>\n                  { username }, here's what you focused on today.\n                </Text>\n                <Image \n                    style={ styles.profileImage }\n                    source={{ uri: 'https://i.imgur.com/MfVj0pW.png' }}\n                />\n            </View>\n            <View style={ styles.dataContainer }>\n                <FlatList\n                    data={ tasks }\n                    keyExtractor={item => item.id}\n                    renderItem={({ item }) => (\n                        <View style={ styles.itemContainer }>\n                            <Pressable\n                                style={({ pressed }) => [{\n                                    opacity: pressed ?\n                                        0.5\n                                        :\n                                        1.0\n                                }]}\n                                // onPress={() => }\n                            >\n                                <Text style={ styles.itemText }>{item.task}</Text>\n                            </Pressable>\n                            { !tasks ? \n                                null\n                                :\n                                <View>\n                                    { item.finished === true ? \n                                        <Text style={ styles.finishedText }>Finished</Text>\n                                        :\n                                        <Text style={ styles.unfinishedText }>Unfinished</Text>\n                                    }\n                                </View>\n                            }\n                        </View>\n                    )}\n                />\n            </View>\n            <View style={ styles.buttonContainer }>\n                <ButtonComp name=\"Task History\" callback={ navigateDoneTasks } />\n            </View>\n            <View style={[ styles.buttonContainer, { marginTop: 40 } ]}>\n                <ButtonComp name=\"Sign Out\" callback={ handleSignOut }/>\n            </View>\n        </SafeAreaView>\n    )\n}\n\nexport default UserDataScreen\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: colors.primary,\n        flex: 1\n    },\n    textContainer: {\n        alignItems: 'center',\n        marginTop: 40,\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        borderBottomWidth: 1,\n        width: '100%'\n    },\n    dataContainer: {\n        alignContent: 'center',\n        height: '60%'\n    },\n    profileImage: {\n        height: 50,\n        width: 50,\n        right: 10\n    },\n    welcomeText: {\n        left: 10,\n        fontWeight: 'bold'\n    },\n    itemContainer: {\n        borderWidth: 1,\n        backgroundColor: colors.white,\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        width: '100%',\n        alignItems: 'center',\n        marginVertical: 10\n    },\n    itemText: {\n        fontSize: fontSizes.xl,\n        left: 10\n    },\n    icon: {\n        right: 10\n    },\n    finishedText: {\n        color: colors.green\n    },\n    unfinishedText: {\n        color: colors.red\n    },\n    buttonContainer: {\n        width: '100%',\n        alignItems: 'center',\n        alignContent: 'center'\n    }\n})\n"]},"metadata":{},"sourceType":"module"}