{"ast":null,"code":"var accessibilityRoleToWebRole = {\n  adjustable: 'slider',\n  button: 'button',\n  header: 'heading',\n  image: 'img',\n  imagebutton: null,\n  keyboardkey: null,\n  label: null,\n  link: 'link',\n  none: 'presentation',\n  search: 'search',\n  summary: 'region',\n  text: null\n};\n\nvar propsToAriaRole = function propsToAriaRole(_ref) {\n  var accessibilityRole = _ref.accessibilityRole;\n\n  if (accessibilityRole) {\n    var inferredRole = accessibilityRoleToWebRole[accessibilityRole];\n\n    if (inferredRole !== null) {\n      return inferredRole || accessibilityRole;\n    }\n  }\n};\n\nexport default propsToAriaRole;","map":{"version":3,"sources":["/Users/kylecash/Documents/GitHub/BreakTime/node_modules/react-native-web/src/modules/AccessibilityUtil/propsToAriaRole.js"],"names":["accessibilityRoleToWebRole","adjustable","button","header","image","imagebutton","keyboardkey","label","link","none","search","summary","text","propsToAriaRole","accessibilityRole","inferredRole"],"mappings":"AASA,IAAMA,0BAA0B,GAAG;AACjCC,EAAAA,UAAU,EAAE,QADqB;AAEjCC,EAAAA,MAAM,EAAE,QAFyB;AAGjCC,EAAAA,MAAM,EAAE,SAHyB;AAIjCC,EAAAA,KAAK,EAAE,KAJ0B;AAKjCC,EAAAA,WAAW,EAAE,IALoB;AAMjCC,EAAAA,WAAW,EAAE,IANoB;AAOjCC,EAAAA,KAAK,EAAE,IAP0B;AAQjCC,EAAAA,IAAI,EAAE,MAR2B;AASjCC,EAAAA,IAAI,EAAE,cAT2B;AAUjCC,EAAAA,MAAM,EAAE,QAVyB;AAWjCC,EAAAA,OAAO,EAAE,QAXwB;AAYjCC,EAAAA,IAAI,EAAE;AAZ2B,CAAnC;;AAeA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAmC;AAAA,MAAhCC,iBAAgC,QAAhCA,iBAAgC;;AACzD,MAAIA,iBAAJ,EAAuB;AACrB,QAAMC,YAAY,GAAGf,0BAA0B,CAACc,iBAAD,CAA/C;;AACA,QAAIC,YAAY,KAAK,IAArB,EAA2B;AAEzB,aAAOA,YAAY,IAAID,iBAAvB;AACD;AACF;AACF,CARD;;AAUA,eAAeD,eAAf","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst accessibilityRoleToWebRole = {\n  adjustable: 'slider',\n  button: 'button',\n  header: 'heading',\n  image: 'img',\n  imagebutton: null,\n  keyboardkey: null,\n  label: null,\n  link: 'link',\n  none: 'presentation',\n  search: 'search',\n  summary: 'region',\n  text: null\n};\n\nconst propsToAriaRole = ({ accessibilityRole }: Object) => {\n  if (accessibilityRole) {\n    const inferredRole = accessibilityRoleToWebRole[accessibilityRole];\n    if (inferredRole !== null) {\n      // ignore roles that don't map to web\n      return inferredRole || accessibilityRole;\n    }\n  }\n};\n\nexport default propsToAriaRole;\n"]},"metadata":{},"sourceType":"module"}