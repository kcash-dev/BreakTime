{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nvar emptyObject = {};\nvar objects = {};\nvar prefix = 'r';\nvar uniqueID = 1;\n\nvar createKey = function createKey(id) {\n  return prefix + \"-\" + id;\n};\n\nvar ReactNativePropRegistry = function () {\n  function ReactNativePropRegistry() {\n    _classCallCheck(this, ReactNativePropRegistry);\n  }\n\n  _createClass(ReactNativePropRegistry, null, [{\n    key: \"register\",\n    value: function register(object) {\n      var id = uniqueID++;\n\n      if (process.env.NODE_ENV !== 'production') {\n        Object.freeze(object);\n      }\n\n      var key = createKey(id);\n      objects[key] = object;\n      return id;\n    }\n  }, {\n    key: \"getByID\",\n    value: function getByID(id) {\n      if (!id) {\n        return emptyObject;\n      }\n\n      var key = createKey(id);\n      var object = objects[key];\n\n      if (!object) {\n        console.warn('Invalid style with id `' + id + '`. Skipping ...');\n        return emptyObject;\n      }\n\n      return object;\n    }\n  }]);\n\n  return ReactNativePropRegistry;\n}();\n\nexport { ReactNativePropRegistry as default };","map":{"version":3,"sources":["/Users/kylecash/Documents/GitHub/BreakTime/node_modules/react-native-web/src/exports/StyleSheet/ReactNativePropRegistry.js"],"names":["emptyObject","objects","prefix","uniqueID","createKey","id","ReactNativePropRegistry","object","process","env","NODE_ENV","Object","freeze","key","console","warn"],"mappings":";;AAUA,IAAMA,WAAW,GAAG,EAApB;AACA,IAAMC,OAAO,GAAG,EAAhB;AACA,IAAMC,MAAM,GAAG,GAAf;AACA,IAAIC,QAAQ,GAAG,CAAf;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,EAAE;AAAA,SAAOH,MAAP,SAAiBG,EAAjB;AAAA,CAApB;;IAEqBC,uB;;;;;;;WACnB,kBAAgBC,MAAhB,EAAwC;AACtC,UAAMF,EAAE,GAAGF,QAAQ,EAAnB;;AACA,UAAIK,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCC,QAAAA,MAAM,CAACC,MAAP,CAAcL,MAAd;AACD;;AACD,UAAMM,GAAG,GAAGT,SAAS,CAACC,EAAD,CAArB;AACAJ,MAAAA,OAAO,CAACY,GAAD,CAAP,GAAeN,MAAf;AACA,aAAOF,EAAP;AACD;;;WAED,iBAAeA,EAAf,EAAmC;AACjC,UAAI,CAACA,EAAL,EAAS;AAGP,eAAOL,WAAP;AACD;;AACD,UAAMa,GAAG,GAAGT,SAAS,CAACC,EAAD,CAArB;AACA,UAAME,MAAM,GAAGN,OAAO,CAACY,GAAD,CAAtB;;AACA,UAAI,CAACN,MAAL,EAAa;AACXO,QAAAA,OAAO,CAACC,IAAR,CAAa,4BAA4BV,EAA5B,GAAiC,iBAA9C;AACA,eAAOL,WAAP;AACD;;AACD,aAAOO,MAAP;AACD;;;;;;SAxBkBD,uB","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst emptyObject = {};\nconst objects = {};\nconst prefix = 'r';\nlet uniqueID = 1;\n\nconst createKey = id => `${prefix}-${id}`;\n\nexport default class ReactNativePropRegistry {\n  static register(object: Object): number {\n    const id = uniqueID++;\n    if (process.env.NODE_ENV !== 'production') {\n      Object.freeze(object);\n    }\n    const key = createKey(id);\n    objects[key] = object;\n    return id;\n  }\n\n  static getByID(id: number): Object {\n    if (!id) {\n      // Used in the style={[condition && id]} pattern,\n      // we want it to be a no-op when the value is false or null\n      return emptyObject;\n    }\n    const key = createKey(id);\n    const object = objects[key];\n    if (!object) {\n      console.warn('Invalid style with id `' + id + '`. Skipping ...');\n      return emptyObject;\n    }\n    return object;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}