{"ast":null,"code":"import _extends2 from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"initialRouteName\", \"backBehavior\", \"children\", \"screenListeners\", \"screenOptions\", \"sceneContainerStyle\"],\n    _excluded2 = [\"lazy\", \"tabBarOptions\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { createNavigatorFactory, TabRouter, useNavigationBuilder } from '@react-navigation/native';\nimport * as React from 'react';\nimport warnOnce from 'warn-once';\nimport BottomTabView from \"../views/BottomTabView\";\n\nfunction BottomTabNavigator(_ref) {\n  var initialRouteName = _ref.initialRouteName,\n      backBehavior = _ref.backBehavior,\n      children = _ref.children,\n      screenListeners = _ref.screenListeners,\n      screenOptions = _ref.screenOptions,\n      sceneContainerStyle = _ref.sceneContainerStyle,\n      restWithDeprecated = _objectWithoutProperties(_ref, _excluded);\n\n  var lazy = restWithDeprecated.lazy,\n      tabBarOptions = restWithDeprecated.tabBarOptions,\n      rest = _objectWithoutProperties(restWithDeprecated, _excluded2);\n\n  var defaultScreenOptions = {};\n\n  if (tabBarOptions) {\n    var _tabBarOptions$labelP;\n\n    _extends2(defaultScreenOptions, {\n      tabBarHideOnKeyboard: tabBarOptions.keyboardHidesTabBar,\n      tabBarActiveTintColor: tabBarOptions.activeTintColor,\n      tabBarInactiveTintColor: tabBarOptions.inactiveTintColor,\n      tabBarActiveBackgroundColor: tabBarOptions.activeBackgroundColor,\n      tabBarInactiveBackgroundColor: tabBarOptions.inactiveBackgroundColor,\n      tabBarAllowFontScaling: tabBarOptions.allowFontScaling,\n      tabBarShowLabel: tabBarOptions.showLabel,\n      tabBarLabelStyle: tabBarOptions.labelStyle,\n      tabBarIconStyle: tabBarOptions.iconStyle,\n      tabBarItemStyle: tabBarOptions.tabStyle,\n      tabBarLabelPosition: (_tabBarOptions$labelP = tabBarOptions.labelPosition) !== null && _tabBarOptions$labelP !== void 0 ? _tabBarOptions$labelP : tabBarOptions.adaptive === false ? 'below-icon' : undefined,\n      tabBarStyle: [{\n        display: tabBarOptions.tabBarVisible ? 'none' : 'flex'\n      }, defaultScreenOptions.tabBarStyle]\n    });\n\n    Object.keys(defaultScreenOptions).forEach(function (key) {\n      if (defaultScreenOptions[key] === undefined) {\n        delete defaultScreenOptions[key];\n      }\n    });\n    warnOnce(tabBarOptions, \"Bottom Tab Navigator: 'tabBarOptions' is deprecated. Migrate the options to 'screenOptions' instead.\\n\\nPlace the following in 'screenOptions' in your code to keep current behavior:\\n\\n\" + JSON.stringify(defaultScreenOptions, null, 2) + \"\\n\\nSee https://reactnavigation.org/docs/bottom-tab-navigator#options for more details.\");\n  }\n\n  if (typeof lazy === 'boolean') {\n    defaultScreenOptions.lazy = lazy;\n    warnOnce(true, \"Bottom Tab Navigator: 'lazy' in props is deprecated. Move it to 'screenOptions' instead.\\n\\nSee https://reactnavigation.org/docs/bottom-tab-navigator/#lazy for more details.\");\n  }\n\n  var _useNavigationBuilder = useNavigationBuilder(TabRouter, {\n    initialRouteName: initialRouteName,\n    backBehavior: backBehavior,\n    children: children,\n    screenListeners: screenListeners,\n    screenOptions: screenOptions,\n    defaultScreenOptions: defaultScreenOptions\n  }),\n      state = _useNavigationBuilder.state,\n      descriptors = _useNavigationBuilder.descriptors,\n      navigation = _useNavigationBuilder.navigation,\n      NavigationContent = _useNavigationBuilder.NavigationContent;\n\n  return React.createElement(NavigationContent, null, React.createElement(BottomTabView, _extends({}, rest, {\n    state: state,\n    navigation: navigation,\n    descriptors: descriptors,\n    sceneContainerStyle: sceneContainerStyle\n  })));\n}\n\nexport default createNavigatorFactory(BottomTabNavigator);","map":{"version":3,"sources":["createBottomTabNavigator.tsx"],"names":["restWithDeprecated","rest","defaultScreenOptions","Object","tabBarHideOnKeyboard","tabBarOptions","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarActiveBackgroundColor","tabBarInactiveBackgroundColor","tabBarAllowFontScaling","tabBarShowLabel","tabBarLabelStyle","tabBarIconStyle","tabBarItemStyle","tabBarLabelPosition","tabBarStyle","display","key","warnOnce","JSON","NavigationContent","useNavigationBuilder","initialRouteName","backBehavior","children","screenListeners","screenOptions","sceneContainerStyle","createNavigatorFactory"],"mappings":"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","sourcesContent":["import {\n  createNavigatorFactory,\n  DefaultNavigatorOptions,\n  ParamListBase,\n  TabActionHelpers,\n  TabNavigationState,\n  TabRouter,\n  TabRouterOptions,\n  useNavigationBuilder,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport warnOnce from 'warn-once';\n\nimport type {\n  BottomTabNavigationConfig,\n  BottomTabNavigationEventMap,\n  BottomTabNavigationOptions,\n} from '../types';\nimport BottomTabView from '../views/BottomTabView';\n\ntype Props = DefaultNavigatorOptions<\n  ParamListBase,\n  TabNavigationState<ParamListBase>,\n  BottomTabNavigationOptions,\n  BottomTabNavigationEventMap\n> &\n  TabRouterOptions &\n  BottomTabNavigationConfig;\n\nfunction BottomTabNavigator({\n  initialRouteName,\n  backBehavior,\n  children,\n  screenListeners,\n  screenOptions,\n  sceneContainerStyle,\n  ...restWithDeprecated\n}: Props) {\n  const {\n    // @ts-expect-error: lazy is deprecated\n    lazy,\n    // @ts-expect-error: tabBarOptions is deprecated\n    tabBarOptions,\n    ...rest\n  } = restWithDeprecated;\n\n  let defaultScreenOptions: BottomTabNavigationOptions = {};\n\n  if (tabBarOptions) {\n    Object.assign(defaultScreenOptions, {\n      tabBarHideOnKeyboard: tabBarOptions.keyboardHidesTabBar,\n      tabBarActiveTintColor: tabBarOptions.activeTintColor,\n      tabBarInactiveTintColor: tabBarOptions.inactiveTintColor,\n      tabBarActiveBackgroundColor: tabBarOptions.activeBackgroundColor,\n      tabBarInactiveBackgroundColor: tabBarOptions.inactiveBackgroundColor,\n      tabBarAllowFontScaling: tabBarOptions.allowFontScaling,\n      tabBarShowLabel: tabBarOptions.showLabel,\n      tabBarLabelStyle: tabBarOptions.labelStyle,\n      tabBarIconStyle: tabBarOptions.iconStyle,\n      tabBarItemStyle: tabBarOptions.tabStyle,\n      tabBarLabelPosition:\n        tabBarOptions.labelPosition ??\n        (tabBarOptions.adaptive === false ? 'below-icon' : undefined),\n      tabBarStyle: [\n        { display: tabBarOptions.tabBarVisible ? 'none' : 'flex' },\n        defaultScreenOptions.tabBarStyle,\n      ],\n    });\n\n    (\n      Object.keys(defaultScreenOptions) as (keyof BottomTabNavigationOptions)[]\n    ).forEach((key) => {\n      if (defaultScreenOptions[key] === undefined) {\n        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n        delete defaultScreenOptions[key];\n      }\n    });\n\n    warnOnce(\n      tabBarOptions,\n      `Bottom Tab Navigator: 'tabBarOptions' is deprecated. Migrate the options to 'screenOptions' instead.\\n\\nPlace the following in 'screenOptions' in your code to keep current behavior:\\n\\n${JSON.stringify(\n        defaultScreenOptions,\n        null,\n        2\n      )}\\n\\nSee https://reactnavigation.org/docs/bottom-tab-navigator#options for more details.`\n    );\n  }\n\n  if (typeof lazy === 'boolean') {\n    defaultScreenOptions.lazy = lazy;\n\n    warnOnce(\n      true,\n      `Bottom Tab Navigator: 'lazy' in props is deprecated. Move it to 'screenOptions' instead.\\n\\nSee https://reactnavigation.org/docs/bottom-tab-navigator/#lazy for more details.`\n    );\n  }\n\n  const { state, descriptors, navigation, NavigationContent } =\n    useNavigationBuilder<\n      TabNavigationState<ParamListBase>,\n      TabRouterOptions,\n      TabActionHelpers<ParamListBase>,\n      BottomTabNavigationOptions,\n      BottomTabNavigationEventMap\n    >(TabRouter, {\n      initialRouteName,\n      backBehavior,\n      children,\n      screenListeners,\n      screenOptions,\n      defaultScreenOptions,\n    });\n\n  return (\n    <NavigationContent>\n      <BottomTabView\n        {...rest}\n        state={state}\n        navigation={navigation}\n        descriptors={descriptors}\n        sceneContainerStyle={sceneContainerStyle}\n      />\n    </NavigationContent>\n  );\n}\n\nexport default createNavigatorFactory<\n  TabNavigationState<ParamListBase>,\n  BottomTabNavigationOptions,\n  BottomTabNavigationEventMap,\n  typeof BottomTabNavigator\n>(BottomTabNavigator);\n"]},"metadata":{},"sourceType":"module"}