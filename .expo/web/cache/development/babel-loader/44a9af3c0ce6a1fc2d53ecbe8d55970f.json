{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"enabled\", \"onValueChange\", \"selectedValue\", \"itemStyle\", \"mode\", \"prompt\", \"dropdownIconColor\"];\n\nvar _this = this,\n    _jsxFileName = \"/Users/kylecash/Documents/GitHub/BreakTime/node_modules/react-native-picker-select/node_modules/@react-native-picker/picker/js/Picker.web.js\";\n\nimport * as React from 'react';\nimport { forwardRef, useRef } from 'react';\nimport createElement from \"react-native-web/dist/exports/createElement\";\nimport unstable_createElement from \"react-native-web/dist/exports/createElement\";\nimport PickerItem from \"./PickerItem\";\nvar myCreateElement = createElement || unstable_createElement;\nvar Select = forwardRef(function (props, forwardedRef) {\n  return myCreateElement('select', props);\n});\nvar Picker = forwardRef(function (props, forwardedRef) {\n  var enabled = props.enabled,\n      onValueChange = props.onValueChange,\n      selectedValue = props.selectedValue,\n      itemStyle = props.itemStyle,\n      mode = props.mode,\n      prompt = props.prompt,\n      dropdownIconColor = props.dropdownIconColor,\n      other = _objectWithoutProperties(props, _excluded);\n\n  var hostRef = useRef(null);\n  var handleChange = React.useCallback(function (e) {\n    var _e$target = e.target,\n        selectedIndex = _e$target.selectedIndex,\n        value = _e$target.value;\n\n    if (onValueChange) {\n      onValueChange(value, selectedIndex);\n    }\n  }, [onValueChange]);\n  return React.createElement(Select, _extends({\n    disabled: enabled === false ? true : undefined,\n    onChange: handleChange,\n    ref: hostRef,\n    value: selectedValue\n  }, other, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }));\n});\nPicker.Item = PickerItem;\nexport default Picker;","map":{"version":3,"sources":["/Users/kylecash/Documents/GitHub/BreakTime/node_modules/react-native-picker-select/node_modules/@react-native-picker/picker/js/Picker.web.js"],"names":["React","forwardRef","useRef","PickerItem","myCreateElement","createElement","unstable_createElement","Select","props","forwardedRef","Picker","enabled","onValueChange","selectedValue","itemStyle","mode","prompt","dropdownIconColor","other","hostRef","handleChange","useCallback","e","target","selectedIndex","value","undefined","Item"],"mappings":";;;;;;;AAOA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,UAAR,EAAoBC,MAApB,QAAiC,OAAjC;;;AAMA,OAAOC,UAAP;AAmBA,IAAMC,eAAe,GAAGC,aAAa,IAAIC,sBAAzC;AAEA,IAAMC,MAAM,GAAGN,UAAU,CAAC,UAACO,KAAD,EAAaC,YAAb;AAAA,SACxBL,eAAe,CAAC,QAAD,EAAWI,KAAX,CADS;AAAA,CAAD,CAAzB;AAIA,IAAME,MAAmD,GAAGT,UAAU,CAGpE,UAACO,KAAD,EAAQC,YAAR,EAAyB;AACzB,MACEE,OADF,GASIH,KATJ,CACEG,OADF;AAAA,MAEEC,aAFF,GASIJ,KATJ,CAEEI,aAFF;AAAA,MAGEC,aAHF,GASIL,KATJ,CAGEK,aAHF;AAAA,MAIEC,SAJF,GASIN,KATJ,CAIEM,SAJF;AAAA,MAKEC,IALF,GASIP,KATJ,CAKEO,IALF;AAAA,MAMEC,MANF,GASIR,KATJ,CAMEQ,MANF;AAAA,MAOEC,iBAPF,GASIT,KATJ,CAOES,iBAPF;AAAA,MAQKC,KARL,4BASIV,KATJ;;AAWA,MAAMW,OAAO,GAAGjB,MAAM,CAAC,IAAD,CAAtB;AAEA,MAAMkB,YAAY,GAAGpB,KAAK,CAACqB,WAAN,CACnB,UAACC,CAAD,EAAe;AACb,oBAA+BA,CAAC,CAACC,MAAjC;AAAA,QAAOC,aAAP,aAAOA,aAAP;AAAA,QAAsBC,KAAtB,aAAsBA,KAAtB;;AACA,QAAIb,aAAJ,EAAmB;AACjBA,MAAAA,aAAa,CAACa,KAAD,EAAQD,aAAR,CAAb;AACD;AACF,GANkB,EAOnB,CAACZ,aAAD,CAPmB,CAArB;AAUA,SAEE,oBAAC,MAAD;AACE,IAAA,QAAQ,EAAED,OAAO,KAAK,KAAZ,GAAoB,IAApB,GAA2Be,SADvC;AAEE,IAAA,QAAQ,EAAEN,YAFZ;AAGE,IAAA,GAAG,EAAED,OAHP;AAIE,IAAA,KAAK,EAAEN;AAJT,KAKMK,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF;AAUD,CArCqE,CAAtE;AAwCAR,MAAM,CAACiB,IAAP,GAAcxB,UAAd;AAEA,eAAeO,MAAf","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * @flow\n *\n */\n\nimport * as React from 'react';\nimport {forwardRef, useRef} from 'react';\nimport type {ViewProps} from 'react-native-web/src/exports/View/types';\nimport type {GenericStyleProp} from 'react-native-web/src/types';\nimport type {TextStyle} from 'react-native-web/src/exports/Text/types';\n// $FlowFixMe fallback for older react-native-web versions\nimport {createElement, unstable_createElement} from 'react-native';\nimport PickerItem from './PickerItem';\n\ntype PickerProps = {\n  ...ViewProps,\n  children?: typeof PickerItem | Array<typeof PickerItem>,\n  enabled?: boolean,\n  onValueChange?: (number | string, number) => void,\n  selectedValue?: number | string,\n  /**\n   * dropdownIconColor\n   * Not used for Web.\n   */\n  dropdownIconColor?: string,\n  /* compat */\n  itemStyle?: GenericStyleProp<TextStyle>,\n  mode?: string,\n  prompt?: string,\n};\n\nconst myCreateElement = createElement || unstable_createElement;\n\nconst Select = forwardRef((props: any, forwardedRef) =>\n  myCreateElement('select', props),\n);\n\nconst Picker: React$AbstractComponent<PickerProps, empty> = forwardRef<\n  PickerProps,\n  *,\n>((props, forwardedRef) => {\n  const {\n    enabled,\n    onValueChange,\n    selectedValue,\n    itemStyle,\n    mode,\n    prompt,\n    dropdownIconColor,\n    ...other\n  } = props;\n\n  const hostRef = useRef(null);\n\n  const handleChange = React.useCallback<any>(\n    (e: Object) => {\n      const {selectedIndex, value} = e.target;\n      if (onValueChange) {\n        onValueChange(value, selectedIndex);\n      }\n    },\n    [onValueChange],\n  );\n\n  return (\n    // $FlowFixMe\n    <Select\n      disabled={enabled === false ? true : undefined}\n      onChange={handleChange}\n      ref={hostRef}\n      value={selectedValue}\n      {...other}\n    />\n  );\n});\n\n// $FlowFixMe\nPicker.Item = PickerItem;\n\nexport default Picker;\n"]},"metadata":{},"sourceType":"module"}