{"ast":null,"code":"import normalizeColor from \"../../modules/normalizeColor\";\nimport normalizeValueWithProperty from \"./normalizeValueWithProperty\";\nvar defaultOffset = {\n  height: 0,\n  width: 0\n};\n\nvar resolveShadowValue = function resolveShadowValue(style) {\n  var shadowColor = style.shadowColor,\n      shadowOffset = style.shadowOffset,\n      shadowOpacity = style.shadowOpacity,\n      shadowRadius = style.shadowRadius;\n\n  var _ref = shadowOffset || defaultOffset,\n      height = _ref.height,\n      width = _ref.width;\n\n  var offsetX = normalizeValueWithProperty(width);\n  var offsetY = normalizeValueWithProperty(height);\n  var blurRadius = normalizeValueWithProperty(shadowRadius || 0);\n  var color = normalizeColor(shadowColor || 'black', shadowOpacity);\n\n  if (color != null && offsetX != null && offsetY != null && blurRadius != null) {\n    return offsetX + \" \" + offsetY + \" \" + blurRadius + \" \" + color;\n  }\n};\n\nexport default resolveShadowValue;","map":{"version":3,"sources":["/Users/kylecash/Documents/GitHub/BreakTime/node_modules/react-native-web/src/exports/StyleSheet/resolveShadowValue.js"],"names":["normalizeColor","normalizeValueWithProperty","defaultOffset","height","width","resolveShadowValue","style","shadowColor","shadowOffset","shadowOpacity","shadowRadius","offsetX","offsetY","blurRadius","color"],"mappings":"AASA,OAAOA,cAAP;AACA,OAAOC,0BAAP;AAEA,IAAMC,aAAa,GAAG;AAAEC,EAAAA,MAAM,EAAE,CAAV;AAAaC,EAAAA,KAAK,EAAE;AAApB,CAAtB;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAmB;AAC5C,MAAQC,WAAR,GAAmED,KAAnE,CAAQC,WAAR;AAAA,MAAqBC,YAArB,GAAmEF,KAAnE,CAAqBE,YAArB;AAAA,MAAmCC,aAAnC,GAAmEH,KAAnE,CAAmCG,aAAnC;AAAA,MAAkDC,YAAlD,GAAmEJ,KAAnE,CAAkDI,YAAlD;;AACA,aAA0BF,YAAY,IAAIN,aAA1C;AAAA,MAAQC,MAAR,QAAQA,MAAR;AAAA,MAAgBC,KAAhB,QAAgBA,KAAhB;;AACA,MAAMO,OAAO,GAAGV,0BAA0B,CAACG,KAAD,CAA1C;AACA,MAAMQ,OAAO,GAAGX,0BAA0B,CAACE,MAAD,CAA1C;AACA,MAAMU,UAAU,GAAGZ,0BAA0B,CAACS,YAAY,IAAI,CAAjB,CAA7C;AACA,MAAMI,KAAK,GAAGd,cAAc,CAACO,WAAW,IAAI,OAAhB,EAAyBE,aAAzB,CAA5B;;AACA,MAAIK,KAAK,IAAI,IAAT,IAAiBH,OAAO,IAAI,IAA5B,IAAoCC,OAAO,IAAI,IAA/C,IAAuDC,UAAU,IAAI,IAAzE,EAA+E;AAC7E,WAAUF,OAAV,SAAqBC,OAArB,SAAgCC,UAAhC,SAA8CC,KAA9C;AACD;AACF,CAVD;;AAYA,eAAeT,kBAAf","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport normalizeColor from '../../modules/normalizeColor';\nimport normalizeValueWithProperty from './normalizeValueWithProperty';\n\nconst defaultOffset = { height: 0, width: 0 };\n\nconst resolveShadowValue = (style: Object) => {\n  const { shadowColor, shadowOffset, shadowOpacity, shadowRadius } = style;\n  const { height, width } = shadowOffset || defaultOffset;\n  const offsetX = normalizeValueWithProperty(width);\n  const offsetY = normalizeValueWithProperty(height);\n  const blurRadius = normalizeValueWithProperty(shadowRadius || 0);\n  const color = normalizeColor(shadowColor || 'black', shadowOpacity);\n  if (color != null && offsetX != null && offsetY != null && blurRadius != null) {\n    return `${offsetX} ${offsetY} ${blurRadius} ${color}`;\n  }\n};\n\nexport default resolveShadowValue;\n"]},"metadata":{},"sourceType":"module"}