{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/kylecash/Documents/GitHub/BreakTime/src/components/FocusItem.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { colors } from \"../utils/Colors\";\nimport RNPickerSelect from 'react-native-picker-select';\nimport { ButtonComp } from \"./Button\";\nimport { fontSizes, spacing } from \"../utils/Sizes\";\nexport var FocusItem = function FocusItem(_ref) {\n  var setTask = _ref.setTask,\n      setWorkTime = _ref.setWorkTime,\n      setIsFocusItem = _ref.setIsFocusItem;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      focus = _useState2[0],\n      setFocus = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      work = _useState4[0],\n      setWork = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      item = _useState6[0],\n      setItem = _useState6[1];\n\n  var handleSetters = function handleSetters() {\n    setTask(focus);\n    setWorkTime(work);\n    setIsFocusItem(true);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, item ? React.createElement(View, {\n    style: styles.pickerContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.pickerText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, \"How long would you like to focus?\"), React.createElement(RNPickerSelect, {\n    style: pickerSelectStyles,\n    onValueChange: function onValueChange(value) {\n      return setWork(value);\n    },\n    items: [{\n      label: '25/5',\n      value: {\n        work: .25,\n        break: .1\n      }\n    }, {\n      label: '50/10',\n      value: {\n        work: .5,\n        break: .2\n      }\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, React.createElement(ButtonComp, {\n    name: \"Submit\",\n    callback: function callback() {\n      return handleSetters();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }))) : React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Hello\"), React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"What would you like to focus on?\"), React.createElement(TextInput, {\n    onChangeText: setFocus,\n    style: styles.textInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, React.createElement(ButtonComp, {\n    name: \"Submit\",\n    callback: function callback() {\n      return setItem(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }))));\n};\nvar styles = StyleSheet.create({\n  textInput: {\n    backgroundColor: colors.white,\n    width: '100%',\n    padding: spacing.md,\n    borderRadius: 8,\n    fontSize: fontSizes.md\n  },\n  container: {\n    width: '75%',\n    shadowColor: colors.black,\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    shadowOpacity: 0.34,\n    shadowRadius: 6.27,\n    elevation: 10\n  },\n  buttonContainer: {\n    width: '100%',\n    marginTop: spacing.lg\n  },\n  text: {\n    color: colors.dark,\n    textAlign: 'center',\n    fontSize: fontSizes.md,\n    fontWeight: 'bold',\n    marginBottom: spacing.sm\n  },\n  pickerText: {\n    color: colors.black,\n    textAlign: 'center',\n    fontSize: fontSizes.md,\n    fontWeight: 'bold',\n    marginVertical: spacing.md\n  }\n});\nvar pickerSelectStyles = StyleSheet.create({\n  inputIOS: {\n    fontSize: fontSizes.md,\n    paddingVertical: spacing.sm,\n    paddingLeft: spacing.sm,\n    borderColor: colors.neonGreen,\n    borderBottomWidth: 1,\n    borderRadius: 4,\n    color: 'black',\n    color: colors.dark,\n    backgroundColor: colors.white\n  },\n  inputAndroid: {\n    fontSize: fontSizes.md,\n    paddingVertical: spacing.sm,\n    paddingLeft: spacing.sm,\n    borderColor: colors.neonGreen,\n    borderBottomWidth: 1,\n    borderRadius: 4,\n    color: 'black',\n    color: colors.dark,\n    backgroundColor: colors.white\n  }\n});","map":{"version":3,"sources":["/Users/kylecash/Documents/GitHub/BreakTime/src/components/FocusItem.js"],"names":["React","useEffect","useState","useDispatch","useSelector","colors","RNPickerSelect","ButtonComp","fontSizes","spacing","FocusItem","setTask","setWorkTime","setIsFocusItem","focus","setFocus","work","setWork","item","setItem","handleSetters","styles","container","pickerContainer","pickerText","pickerSelectStyles","value","label","break","buttonContainer","text","textInput","StyleSheet","create","backgroundColor","white","width","padding","md","borderRadius","fontSize","shadowColor","black","shadowOffset","height","shadowOpacity","shadowRadius","elevation","marginTop","lg","color","dark","textAlign","fontWeight","marginBottom","sm","marginVertical","inputIOS","paddingVertical","paddingLeft","borderColor","neonGreen","borderBottomWidth","inputAndroid"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { StyleSheet, Text, View, TextInput } from 'react-native';\nimport { colors } from '../utils/Colors';\n\nimport RNPickerSelect from 'react-native-picker-select';\nimport { ButtonComp } from './Button';\nimport { fontSizes, spacing } from '../utils/Sizes';\n\nexport const FocusItem = ({\n    setTask,\n    setWorkTime,\n    setIsFocusItem\n}) => {\n    const [ focus, setFocus ] = useState(null);\n    const [ work, setWork ] = useState(0);\n    const [ item, setItem ] = useState(false);\n\n    const handleSetters = () => {\n        setTask(focus)\n        setWorkTime(work)\n        setIsFocusItem(true)\n    }\n\n    return (\n        <View style={ styles.container }>\n            { item ?\n            <View style={ styles.pickerContainer }>\n                <Text style={ styles.pickerText }>How long would you like to focus?</Text>\n                <RNPickerSelect\n                    style={ pickerSelectStyles }\n                    onValueChange={(value) => setWork(value)}\n                    items={[\n                        { label: '25/5', value: { work: .25, break: .1 } },\n                        { label: '50/10', value: { work: .5, break: .2 } }\n                    ]}\n                />\n                <View\n                    style={ styles.buttonContainer }\n                >\n                    <ButtonComp \n                        name=\"Submit\"\n                        callback={ () => handleSetters() }\n                    />\n                </View>\n            </View>\n            :\n            <View> \n            <Text style={ styles.text }>Hello</Text>\n            <Text style={ styles.text }>What would you like to focus on?</Text>\n                <TextInput \n                    onChangeText={ setFocus }\n                    style={ styles.textInput }\n                />\n                <View\n                    style={ styles.buttonContainer }\n                >\n                    <ButtonComp \n                        name=\"Submit\"\n                        callback={ () => setItem(true) }\n                    />\n                </View>\n            </View>\n            }\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    textInput: {\n        backgroundColor: colors.white,\n        width: '100%',\n        padding: spacing.md,\n        borderRadius: 8,\n        fontSize: fontSizes.md\n    },\n    container: {\n        width: '75%',\n        shadowColor: colors.black,\n        shadowOffset: {\n            width: 0,\n            height: 5,\n        },\n        shadowOpacity: 0.34,\n        shadowRadius: 6.27,\n\n        elevation: 10,\n    },\n    buttonContainer: {\n        width: '100%',\n        marginTop: spacing.lg\n    },\n    text: {\n        color: colors.dark,\n        textAlign: 'center',\n        fontSize: fontSizes.md,\n        fontWeight: 'bold',\n        marginBottom: spacing.sm\n    },\n    pickerText: {\n        color: colors.black,\n        textAlign: 'center',\n        fontSize: fontSizes.md,\n        fontWeight: 'bold',\n        marginVertical: spacing.md\n    }\n})\n\nconst pickerSelectStyles = StyleSheet.create({\n    inputIOS: {\n      fontSize: fontSizes.md,\n      paddingVertical: spacing.sm,\n      paddingLeft: spacing.sm,\n      borderColor: colors.neonGreen,\n      borderBottomWidth: 1,\n      borderRadius: 4,\n      color: 'black',\n      color: colors.dark,\n      backgroundColor: colors.white\n    },\n    inputAndroid: {\n        fontSize: fontSizes.md,\n        paddingVertical: spacing.sm,\n        paddingLeft: spacing.sm,\n        borderColor: colors.neonGreen,\n        borderBottomWidth: 1,\n        borderRadius: 4,\n        color: 'black',\n        color: colors.dark,\n        backgroundColor: colors.white\n    },\n  });"]},"metadata":{},"sourceType":"module"}