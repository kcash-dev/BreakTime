{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/kylecash/Documents/GitHub/BreakTime/node_modules/react-native-chart-kit/dist/contribution-graph/ContributionGraph.js\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport _ from \"lodash\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { G, Rect, Svg, Text } from \"react-native-svg\";\nimport AbstractChart from \"../AbstractChart\";\nimport { mapValue } from \"../Utils\";\nimport { convertToDate, getBeginningTimeForDate, shiftDate } from \"./DateHelpers\";\nimport { DAYS_IN_WEEK, MILLISECONDS_IN_ONE_DAY, MONTH_LABELS } from \"./constants\";\nvar SQUARE_SIZE = 20;\nvar MONTH_LABEL_GUTTER_SIZE = 8;\nvar paddingLeft = 32;\n\nvar ContributionGraph = function (_super) {\n  __extends(ContributionGraph, _super);\n\n  function ContributionGraph(props) {\n    var _this = _super.call(this, props) || this;\n\n    var _a = _this.getValueCache(props.values),\n        maxValue = _a.maxValue,\n        minValue = _a.minValue,\n        valueCache = _a.valueCache;\n\n    _this.state = {\n      maxValue: maxValue,\n      minValue: minValue,\n      valueCache: valueCache\n    };\n    return _this;\n  }\n\n  ContributionGraph.prototype.UNSAFE_componentWillReceiveProps = function (nextProps) {\n    var _a = this.getValueCache(nextProps.values),\n        maxValue = _a.maxValue,\n        minValue = _a.minValue,\n        valueCache = _a.valueCache;\n\n    this.setState({\n      maxValue: maxValue,\n      minValue: minValue,\n      valueCache: valueCache\n    });\n  };\n\n  ContributionGraph.prototype.getSquareSizeWithGutter = function () {\n    return (this.props.squareSize || SQUARE_SIZE) + this.props.gutterSize;\n  };\n\n  ContributionGraph.prototype.getMonthLabelSize = function () {\n    var _a = this.props.squareSize,\n        squareSize = _a === void 0 ? SQUARE_SIZE : _a;\n\n    if (!this.props.showMonthLabels) {\n      return 0;\n    }\n\n    if (this.props.horizontal) {\n      return squareSize + MONTH_LABEL_GUTTER_SIZE;\n    }\n\n    return 2 * (squareSize + MONTH_LABEL_GUTTER_SIZE);\n  };\n\n  ContributionGraph.prototype.getStartDate = function () {\n    return shiftDate(this.getEndDate(), -this.props.numDays + 1);\n  };\n\n  ContributionGraph.prototype.getEndDate = function () {\n    return getBeginningTimeForDate(convertToDate(this.props.endDate));\n  };\n\n  ContributionGraph.prototype.getStartDateWithEmptyDays = function () {\n    return shiftDate(this.getStartDate(), -this.getNumEmptyDaysAtStart());\n  };\n\n  ContributionGraph.prototype.getNumEmptyDaysAtStart = function () {\n    return this.getStartDate().getDay();\n  };\n\n  ContributionGraph.prototype.getNumEmptyDaysAtEnd = function () {\n    return DAYS_IN_WEEK - 1 - this.getEndDate().getDay();\n  };\n\n  ContributionGraph.prototype.getWeekCount = function () {\n    var numDaysRoundedToWeek = this.props.numDays + this.getNumEmptyDaysAtStart() + this.getNumEmptyDaysAtEnd();\n    return Math.ceil(numDaysRoundedToWeek / DAYS_IN_WEEK);\n  };\n\n  ContributionGraph.prototype.getWeekWidth = function () {\n    return DAYS_IN_WEEK * this.getSquareSizeWithGutter();\n  };\n\n  ContributionGraph.prototype.getWidth = function () {\n    return this.getWeekCount() * this.getSquareSizeWithGutter() - this.props.gutterSize;\n  };\n\n  ContributionGraph.prototype.getHeight = function () {\n    return this.getWeekWidth() + (this.getMonthLabelSize() - this.props.gutterSize);\n  };\n\n  ContributionGraph.prototype.getValueCache = function (values) {\n    var _this = this;\n\n    var minValue = Infinity,\n        maxValue = -Infinity;\n    return {\n      valueCache: values.reduce(function (memo, value) {\n        var date = convertToDate(value.date);\n        var index = Math.floor((date.valueOf() - _this.getStartDateWithEmptyDays().valueOf()) / MILLISECONDS_IN_ONE_DAY);\n        minValue = Math.min(value[_this.props.accessor], minValue);\n        maxValue = Math.max(value[_this.props.accessor], maxValue);\n        memo[index] = {\n          value: value,\n          title: _this.props.titleForValue ? _this.props.titleForValue(value) : null,\n          tooltipDataAttrs: _this.getTooltipDataAttrsForValue(value)\n        };\n        return memo;\n      }, {}),\n      minValue: minValue,\n      maxValue: maxValue\n    };\n  };\n\n  ContributionGraph.prototype.getValueForIndex = function (index) {\n    if (this.state.valueCache[index]) {\n      return this.state.valueCache[index].value;\n    }\n\n    return null;\n  };\n\n  ContributionGraph.prototype.getClassNameForIndex = function (index) {\n    if (this.state.valueCache[index]) {\n      if (this.state.valueCache[index].value) {\n        var count = this.state.valueCache[index].value[this.props.accessor];\n\n        if (count) {\n          var opacity = mapValue(count, this.state.minValue, this.state.maxValue, 0.15 + 0.05, 1);\n          return this.props.chartConfig.color(opacity);\n        }\n      }\n    }\n\n    return this.props.chartConfig.color(0.15);\n  };\n\n  ContributionGraph.prototype.getTitleForIndex = function (index) {\n    if (this.state.valueCache[index]) {\n      return this.state.valueCache[index].title;\n    }\n\n    return this.props.titleForValue ? this.props.titleForValue(null) : null;\n  };\n\n  ContributionGraph.prototype.getTooltipDataAttrsForIndex = function (index) {\n    var _a;\n\n    if (this.state.valueCache[index]) {\n      return this.state.valueCache[index].tooltipDataAttrs;\n    }\n\n    return this.getTooltipDataAttrsForValue((_a = {\n      date: null\n    }, _a[this.props.accessor] = null, _a));\n  };\n\n  ContributionGraph.prototype.getTooltipDataAttrsForValue = function (value) {\n    var tooltipDataAttrs = this.props.tooltipDataAttrs;\n\n    if (typeof tooltipDataAttrs === \"function\") {\n      return tooltipDataAttrs(value);\n    }\n\n    return tooltipDataAttrs;\n  };\n\n  ContributionGraph.prototype.getTransformForWeek = function (weekIndex) {\n    if (this.props.horizontal) {\n      return [weekIndex * this.getSquareSizeWithGutter(), 50];\n    }\n\n    return [10, weekIndex * this.getSquareSizeWithGutter()];\n  };\n\n  ContributionGraph.prototype.getTransformForMonthLabels = function () {\n    if (this.props.horizontal) {\n      return null;\n    }\n\n    return this.getWeekWidth() + MONTH_LABEL_GUTTER_SIZE + \", 0\";\n  };\n\n  ContributionGraph.prototype.getTransformForAllWeeks = function () {\n    if (this.props.horizontal) {\n      return \"0, \" + (this.getMonthLabelSize() - 100);\n    }\n\n    return null;\n  };\n\n  ContributionGraph.prototype.getViewBox = function () {\n    if (this.props.horizontal) {\n      return this.getWidth() + \" \" + this.getHeight();\n    }\n\n    return this.getHeight() + \" \" + this.getWidth();\n  };\n\n  ContributionGraph.prototype.getSquareCoordinates = function (dayIndex) {\n    if (this.props.horizontal) {\n      return [0, dayIndex * this.getSquareSizeWithGutter()];\n    }\n\n    return [dayIndex * this.getSquareSizeWithGutter(), 0];\n  };\n\n  ContributionGraph.prototype.getMonthLabelCoordinates = function (weekIndex) {\n    if (this.props.horizontal) {\n      return [weekIndex * this.getSquareSizeWithGutter(), this.getMonthLabelSize() - MONTH_LABEL_GUTTER_SIZE];\n    }\n\n    var verticalOffset = -2;\n    return [0, (weekIndex + 1) * this.getSquareSizeWithGutter() + verticalOffset];\n  };\n\n  ContributionGraph.prototype.renderSquare = function (dayIndex, index) {\n    var _this = this;\n\n    var indexOutOfRange = index < this.getNumEmptyDaysAtStart() || index >= this.getNumEmptyDaysAtStart() + this.props.numDays;\n\n    if (indexOutOfRange && !this.props.showOutOfRangeDays) {\n      return null;\n    }\n\n    var _a = this.getSquareCoordinates(dayIndex),\n        x = _a[0],\n        y = _a[1];\n\n    var _b = this.props.squareSize,\n        squareSize = _b === void 0 ? SQUARE_SIZE : _b;\n    return React.createElement(Rect, _extends({\n      key: index,\n      width: squareSize,\n      height: squareSize,\n      x: x + paddingLeft,\n      y: y,\n      title: this.getTitleForIndex(index),\n      fill: this.getClassNameForIndex(index),\n      onPress: function onPress() {\n        _this.handleDayPress(index);\n      }\n    }, this.getTooltipDataAttrsForIndex(index), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  ContributionGraph.prototype.handleDayPress = function (index) {\n    var _a;\n\n    if (!this.props.onDayPress) {\n      return;\n    }\n\n    this.props.onDayPress(this.state.valueCache[index] && this.state.valueCache[index].value ? this.state.valueCache[index].value : (_a = {}, _a[this.props.accessor] = 0, _a.date = new Date(this.getStartDate().valueOf() + index * MILLISECONDS_IN_ONE_DAY), _a));\n  };\n\n  ContributionGraph.prototype.renderWeek = function (weekIndex) {\n    var _this = this;\n\n    var _a = this.getTransformForWeek(weekIndex),\n        x = _a[0],\n        y = _a[1];\n\n    return React.createElement(G, {\n      key: weekIndex,\n      x: x,\n      y: y,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }\n    }, _.range(DAYS_IN_WEEK).map(function (dayIndex) {\n      return _this.renderSquare(dayIndex, weekIndex * DAYS_IN_WEEK + dayIndex);\n    }));\n  };\n\n  ContributionGraph.prototype.renderAllWeeks = function () {\n    var _this = this;\n\n    return _.range(this.getWeekCount()).map(function (weekIndex) {\n      return _this.renderWeek(weekIndex);\n    });\n  };\n\n  ContributionGraph.prototype.renderMonthLabels = function () {\n    var _this = this;\n\n    if (!this.props.showMonthLabels) {\n      return null;\n    }\n\n    var weekRange = _.range(this.getWeekCount() - 1);\n\n    return weekRange.map(function (weekIndex) {\n      var endOfWeek = shiftDate(_this.getStartDateWithEmptyDays(), (weekIndex + 1) * DAYS_IN_WEEK);\n\n      var _a = _this.getMonthLabelCoordinates(weekIndex),\n          x = _a[0],\n          y = _a[1];\n\n      return endOfWeek.getDate() >= 1 && endOfWeek.getDate() <= DAYS_IN_WEEK ? React.createElement(Text, _extends({\n        key: weekIndex,\n        x: x + paddingLeft,\n        y: y + 8\n      }, _this.getPropsForLabels(), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 87\n        }\n      }), _this.props.getMonthLabel ? _this.props.getMonthLabel(endOfWeek.getMonth()) : MONTH_LABELS[endOfWeek.getMonth()]) : null;\n    });\n  };\n\n  ContributionGraph.prototype.render = function () {\n    var style = this.props.style;\n    var _a = style.borderRadius,\n        borderRadius = _a === void 0 ? 0 : _a;\n\n    if (!borderRadius && this.props.chartConfig.style) {\n      var stupidXo = this.props.chartConfig.style.borderRadius;\n      borderRadius = stupidXo;\n    }\n\n    return React.createElement(View, {\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }\n    }, React.createElement(Svg, {\n      height: this.props.height,\n      width: this.props.width,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }\n    }, this.renderDefs(__assign({\n      width: this.props.width,\n      height: this.props.height\n    }, this.props.chartConfig)), React.createElement(Rect, {\n      width: \"100%\",\n      height: this.props.height,\n      rx: borderRadius,\n      ry: borderRadius,\n      fill: \"url(#backgroundGradient)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }\n    }), React.createElement(G, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }\n    }, this.renderMonthLabels()), React.createElement(G, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }\n    }, this.renderAllWeeks())));\n  };\n\n  ContributionGraph.defaultProps = {\n    numDays: 200,\n    endDate: new Date(),\n    gutterSize: 1,\n    squareSize: SQUARE_SIZE,\n    horizontal: true,\n    showMonthLabels: true,\n    showOutOfRangeDays: false,\n    accessor: \"count\",\n    classForValue: function classForValue(value) {\n      return value ? \"black\" : \"#8cc665\";\n    },\n    style: {}\n  };\n  return ContributionGraph;\n}(AbstractChart);\n\nexport default ContributionGraph;","map":{"version":3,"sources":["../../src/contribution-graph/ContributionGraph.tsx"],"names":[],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport React from \"react\";\nimport { View } from \"react-native\";\nimport { G, Rect, RectProps, Svg, Text } from \"react-native-svg\";\n\nimport AbstractChart from \"../AbstractChart\";\nimport { mapValue } from \"../Utils\";\nimport {\n  convertToDate,\n  getBeginningTimeForDate,\n  shiftDate\n} from \"./DateHelpers\";\nimport {\n  DAYS_IN_WEEK,\n  MILLISECONDS_IN_ONE_DAY,\n  MONTH_LABELS\n} from \"./constants\";\nimport { ContributionGraphProps, ContributionGraphState } from \".\";\n\nconst SQUARE_SIZE = 20;\nconst MONTH_LABEL_GUTTER_SIZE = 8;\nconst paddingLeft = 32;\n\nexport type ContributionChartValue = {\n  value: number;\n  title: string;\n  tooltipDataAttrs: TooltipDataAttrs;\n  date: Date;\n};\n\nexport type TooltipDataAttrs = (\n  value: ContributionChartValue\n) => Partial<RectProps> | Partial<RectProps>;\n\nclass ContributionGraph extends AbstractChart<\n  ContributionGraphProps,\n  ContributionGraphState\n> {\n  constructor(props: ContributionGraphProps) {\n    super(props);\n\n    let { maxValue, minValue, valueCache } = this.getValueCache(props.values);\n\n    this.state = {\n      maxValue,\n      minValue,\n      valueCache\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: ContributionGraphProps) {\n    let { maxValue, minValue, valueCache } = this.getValueCache(\n      nextProps.values\n    );\n\n    this.setState({\n      maxValue,\n      minValue,\n      valueCache\n    });\n  }\n\n  getSquareSizeWithGutter() {\n    return (this.props.squareSize || SQUARE_SIZE) + this.props.gutterSize;\n  }\n\n  getMonthLabelSize() {\n    let { squareSize = SQUARE_SIZE } = this.props;\n    if (!this.props.showMonthLabels) {\n      return 0;\n    }\n    if (this.props.horizontal) {\n      return squareSize + MONTH_LABEL_GUTTER_SIZE;\n    }\n    return 2 * (squareSize + MONTH_LABEL_GUTTER_SIZE);\n  }\n\n  getStartDate() {\n    return shiftDate(this.getEndDate(), -this.props.numDays + 1); // +1 because endDate is inclusive\n  }\n\n  getEndDate() {\n    return getBeginningTimeForDate(convertToDate(this.props.endDate));\n  }\n\n  getStartDateWithEmptyDays() {\n    return shiftDate(this.getStartDate(), -this.getNumEmptyDaysAtStart());\n  }\n\n  getNumEmptyDaysAtStart() {\n    return this.getStartDate().getDay();\n  }\n\n  getNumEmptyDaysAtEnd() {\n    return DAYS_IN_WEEK - 1 - this.getEndDate().getDay();\n  }\n\n  getWeekCount() {\n    const numDaysRoundedToWeek =\n      this.props.numDays +\n      this.getNumEmptyDaysAtStart() +\n      this.getNumEmptyDaysAtEnd();\n    return Math.ceil(numDaysRoundedToWeek / DAYS_IN_WEEK);\n  }\n\n  getWeekWidth() {\n    return DAYS_IN_WEEK * this.getSquareSizeWithGutter();\n  }\n\n  getWidth() {\n    return (\n      this.getWeekCount() * this.getSquareSizeWithGutter() -\n      this.props.gutterSize\n    );\n  }\n\n  getHeight() {\n    return (\n      this.getWeekWidth() + (this.getMonthLabelSize() - this.props.gutterSize)\n    );\n  }\n\n  getValueCache(values: ContributionChartValue[]) {\n    let minValue = Infinity,\n      maxValue = -Infinity;\n\n    return {\n      valueCache: values.reduce((memo, value) => {\n        const date = convertToDate(value.date);\n\n        const index = Math.floor(\n          (date.valueOf() - this.getStartDateWithEmptyDays().valueOf()) /\n            MILLISECONDS_IN_ONE_DAY\n        );\n\n        minValue = Math.min(value[this.props.accessor], minValue);\n        maxValue = Math.max(value[this.props.accessor], maxValue);\n\n        memo[index] = {\n          value,\n          title: this.props.titleForValue\n            ? this.props.titleForValue(value)\n            : null,\n          tooltipDataAttrs: this.getTooltipDataAttrsForValue(value)\n        };\n\n        return memo;\n      }, {}),\n      minValue,\n      maxValue\n    };\n  }\n\n  getValueForIndex(index: number) {\n    if (this.state.valueCache[index]) {\n      return this.state.valueCache[index].value;\n    }\n    return null;\n  }\n\n  getClassNameForIndex(index: number) {\n    if (this.state.valueCache[index]) {\n      if (this.state.valueCache[index].value) {\n        const count = this.state.valueCache[index].value[this.props.accessor];\n\n        if (count) {\n          const opacity = mapValue(\n            count,\n            this.state.minValue,\n            this.state.maxValue,\n            0.15 + 0.05, // + 0.05 to make smaller values a bit more visible\n            1\n          );\n\n          return this.props.chartConfig.color(opacity);\n        }\n      }\n    }\n\n    return this.props.chartConfig.color(0.15);\n  }\n\n  getTitleForIndex(index: number) {\n    if (this.state.valueCache[index]) {\n      return this.state.valueCache[index].title;\n    }\n\n    return this.props.titleForValue ? this.props.titleForValue(null) : null;\n  }\n\n  getTooltipDataAttrsForIndex(index: number) {\n    if (this.state.valueCache[index]) {\n      return this.state.valueCache[index].tooltipDataAttrs;\n    }\n\n    return this.getTooltipDataAttrsForValue({\n      date: null,\n      [this.props.accessor]: null\n    } as ContributionChartValue);\n  }\n\n  getTooltipDataAttrsForValue(value: ContributionChartValue) {\n    const { tooltipDataAttrs } = this.props;\n\n    if (typeof tooltipDataAttrs === \"function\") {\n      return tooltipDataAttrs(value);\n    }\n\n    return tooltipDataAttrs;\n  }\n\n  getTransformForWeek(weekIndex: number) {\n    if (this.props.horizontal) {\n      return [weekIndex * this.getSquareSizeWithGutter(), 50];\n    }\n    return [10, weekIndex * this.getSquareSizeWithGutter()];\n  }\n\n  getTransformForMonthLabels() {\n    if (this.props.horizontal) {\n      return null;\n    }\n    return `${this.getWeekWidth() + MONTH_LABEL_GUTTER_SIZE}, 0`;\n  }\n\n  getTransformForAllWeeks() {\n    if (this.props.horizontal) {\n      return `0, ${this.getMonthLabelSize() - 100}`;\n    }\n    return null;\n  }\n\n  getViewBox() {\n    if (this.props.horizontal) {\n      return `${this.getWidth()} ${this.getHeight()}`;\n    }\n    return `${this.getHeight()} ${this.getWidth()}`;\n  }\n\n  getSquareCoordinates(dayIndex: number) {\n    if (this.props.horizontal) {\n      return [0, dayIndex * this.getSquareSizeWithGutter()];\n    }\n    return [dayIndex * this.getSquareSizeWithGutter(), 0];\n  }\n\n  getMonthLabelCoordinates(weekIndex: number) {\n    if (this.props.horizontal) {\n      return [\n        weekIndex * this.getSquareSizeWithGutter(),\n        this.getMonthLabelSize() - MONTH_LABEL_GUTTER_SIZE\n      ];\n    }\n    const verticalOffset = -2;\n    return [\n      0,\n      (weekIndex + 1) * this.getSquareSizeWithGutter() + verticalOffset\n    ];\n  }\n\n  renderSquare(dayIndex: number, index: number) {\n    const indexOutOfRange =\n      index < this.getNumEmptyDaysAtStart() ||\n      index >= this.getNumEmptyDaysAtStart() + this.props.numDays;\n\n    if (indexOutOfRange && !this.props.showOutOfRangeDays) {\n      return null;\n    }\n\n    const [x, y] = this.getSquareCoordinates(dayIndex);\n    const { squareSize = SQUARE_SIZE } = this.props;\n\n    return (\n      <Rect\n        key={index}\n        width={squareSize}\n        height={squareSize}\n        x={x + paddingLeft}\n        y={y}\n        title={this.getTitleForIndex(index)}\n        fill={this.getClassNameForIndex(index)}\n        onPress={() => {\n          this.handleDayPress(index);\n        }}\n        {...this.getTooltipDataAttrsForIndex(index)}\n      />\n    );\n  }\n\n  handleDayPress(index: number) {\n    if (!this.props.onDayPress) {\n      return;\n    }\n\n    this.props.onDayPress(\n      this.state.valueCache[index] && this.state.valueCache[index].value\n        ? this.state.valueCache[index].value\n        : {\n            [this.props.accessor]: 0,\n            date: new Date(\n              this.getStartDate().valueOf() + index * MILLISECONDS_IN_ONE_DAY\n            )\n          }\n    );\n  }\n\n  renderWeek(weekIndex: number) {\n    const [x, y] = this.getTransformForWeek(weekIndex);\n    return (\n      <G key={weekIndex} x={x} y={y}>\n        {_.range(DAYS_IN_WEEK).map(dayIndex =>\n          this.renderSquare(dayIndex, weekIndex * DAYS_IN_WEEK + dayIndex)\n        )}\n      </G>\n    );\n  }\n\n  renderAllWeeks() {\n    return _.range(this.getWeekCount()).map(weekIndex =>\n      this.renderWeek(weekIndex)\n    );\n  }\n\n  renderMonthLabels() {\n    if (!this.props.showMonthLabels) {\n      return null;\n    }\n\n    const weekRange = _.range(this.getWeekCount() - 1); // don't render for last week, because label will be cut off\n\n    return weekRange.map(weekIndex => {\n      const endOfWeek = shiftDate(\n        this.getStartDateWithEmptyDays(),\n        (weekIndex + 1) * DAYS_IN_WEEK\n      );\n\n      const [x, y] = this.getMonthLabelCoordinates(weekIndex);\n\n      return endOfWeek.getDate() >= 1 && endOfWeek.getDate() <= DAYS_IN_WEEK ? (\n        <Text\n          key={weekIndex}\n          x={x + paddingLeft}\n          y={y + 8}\n          {...this.getPropsForLabels()}\n        >\n          {this.props.getMonthLabel\n            ? this.props.getMonthLabel(endOfWeek.getMonth())\n            : MONTH_LABELS[endOfWeek.getMonth()]}\n        </Text>\n      ) : null;\n    });\n  }\n\n  public static defaultProps = {\n    numDays: 200,\n    endDate: new Date(),\n    gutterSize: 1,\n    squareSize: SQUARE_SIZE,\n    horizontal: true,\n    showMonthLabels: true,\n    showOutOfRangeDays: false,\n    accessor: \"count\",\n    classForValue: value => (value ? \"black\" : \"#8cc665\"),\n    style: {}\n  };\n\n  render() {\n    const { style } = this.props;\n\n    let { borderRadius = 0 } = style;\n\n    if (!borderRadius && this.props.chartConfig.style) {\n      const stupidXo = this.props.chartConfig.style.borderRadius;\n      borderRadius = stupidXo;\n    }\n\n    return (\n      <View style={style}>\n        <Svg height={this.props.height} width={this.props.width}>\n          {this.renderDefs({\n            width: this.props.width,\n            height: this.props.height,\n            ...this.props.chartConfig\n          })}\n          <Rect\n            width=\"100%\"\n            height={this.props.height}\n            rx={borderRadius}\n            ry={borderRadius}\n            fill=\"url(#backgroundGradient)\"\n          />\n          <G>{this.renderMonthLabels()}</G>\n          <G>{this.renderAllWeeks()}</G>\n        </Svg>\n      </View>\n    );\n  }\n}\n\nexport default ContributionGraph;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}