{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/kylecash/Documents/GitHub/BreakTime/src/screens/SurveyScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { ButtonComp } from \"../components/Button\";\nimport { colors } from \"../utils/Colors\";\nimport { useNavigation } from '@react-navigation/native';\nimport { fontSizes } from \"../utils/Sizes\";\nimport { db, currentUserUID } from \"../api/Firebase\";\nimport * as firebase from 'firebase';\nexport var SurveyScreen = function SurveyScreen() {\n  var navigation = useNavigation();\n  var incrementFocusType = firebase.firestore.FieldValue.increment(1);\n\n  function noFocusFunc() {\n    return _regeneratorRuntime.async(function noFocusFunc$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(db.collection('users').doc(currentUserUID).update({\n              notFocused: incrementFocusType\n            }).then(function () {\n              return console.log('Update sent! No focus!');\n            }));\n\n          case 2:\n            navigation.pop();\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function someFocusFunc() {\n    return _regeneratorRuntime.async(function someFocusFunc$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(db.collection('users').doc(currentUserUID).update({\n              somewhatFocused: incrementFocusType\n            }).then(function () {\n              return console.log('Update sent! Some focus!');\n            }));\n\n          case 2:\n            navigation.pop();\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function vFocusFunc() {\n    return _regeneratorRuntime.async(function vFocusFunc$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(db.collection('users').doc(currentUserUID).update({\n              veryFocused: incrementFocusType\n            }).then(function () {\n              return console.log('Update sent! Very focus!');\n            }));\n\n          case 2:\n            navigation.pop();\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"How focused were you during that focus time?\"), React.createElement(View, {\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, React.createElement(ButtonComp, {\n    name: \"Not focused\",\n    callback: noFocusFunc,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, React.createElement(ButtonComp, {\n    name: \"Somewhat focused\",\n    callback: someFocusFunc,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, React.createElement(ButtonComp, {\n    name: \"Very focused\",\n    callback: vFocusFunc,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  })));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: colors.primary\n  },\n  text: {\n    fontSize: fontSizes.lg\n  },\n  button: {\n    marginVertical: 10,\n    width: '70%'\n  }\n});","map":{"version":3,"sources":["/Users/kylecash/Documents/GitHub/BreakTime/src/screens/SurveyScreen.js"],"names":["React","useState","ButtonComp","colors","useNavigation","fontSizes","db","currentUserUID","firebase","SurveyScreen","navigation","incrementFocusType","firestore","FieldValue","increment","noFocusFunc","collection","doc","update","notFocused","then","console","log","pop","someFocusFunc","somewhatFocused","vFocusFunc","veryFocused","styles","container","button","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","primary","text","fontSize","lg","marginVertical","width"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, View, Text } from 'react-native';\nimport { ButtonComp } from '../components/Button';\nimport { colors } from '../utils/Colors';\n\nimport { useNavigation } from '@react-navigation/native';\nimport { fontSizes } from '../utils/Sizes';\nimport { db, currentUserUID } from '../api/Firebase';\nimport * as firebase from 'firebase';\n\nexport const SurveyScreen = () => {\n    const navigation = useNavigation();\n    const incrementFocusType = firebase.firestore.FieldValue.increment(1)\n    \n    async function noFocusFunc() {\n        await db\n            .collection('users')\n            .doc(currentUserUID)\n            .update({\n                notFocused: incrementFocusType,\n            })\n            .then(() => console.log('Update sent! No focus!'))\n        \n        navigation.pop()\n    }\n    \n    async function someFocusFunc() {\n        await db\n            .collection('users')\n            .doc(currentUserUID)\n            .update({\n                somewhatFocused: incrementFocusType,\n            })\n            .then(() => console.log('Update sent! Some focus!'))\n        \n        navigation.pop()\n    }\n    \n    async function vFocusFunc () {\n        await db\n            .collection('users')\n            .doc(currentUserUID)\n            .update({\n                veryFocused: incrementFocusType,\n            })\n            .then(() => console.log('Update sent! Very focus!'))\n        \n        navigation.pop()\n    }\n\n    return (\n        <View style={ styles.container }>\n            <Text>How focused were you during that focus time?</Text>\n            <View style={ styles.button }>\n                <ButtonComp name='Not focused' callback={ noFocusFunc }/>\n            </View>\n            <View style={ styles.button }>\n                <ButtonComp name='Somewhat focused' callback={ someFocusFunc }/>\n            </View>\n            <View style={ styles.button }>\n                <ButtonComp name='Very focused' callback={ vFocusFunc }/>\n            </View>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: colors.primary\n    },\n    text: {\n        fontSize: fontSizes.lg\n    },\n    button: {\n        marginVertical: 10,\n        width: '70%'\n    }\n})"]},"metadata":{},"sourceType":"module"}