{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/kylecash/Documents/GitHub/BreakTime/node_modules/react-native-picker-select/src/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PropTypes from 'prop-types';\nimport isEqual from 'lodash.isequal';\nimport { Picker } from '@react-native-picker/picker';\nimport { defaultStyles } from \"./styles\";\n\nvar RNPickerSelect = function (_PureComponent) {\n  _inherits(RNPickerSelect, _PureComponent);\n\n  var _super = _createSuper(RNPickerSelect);\n\n  function RNPickerSelect(props) {\n    var _this;\n\n    _classCallCheck(this, RNPickerSelect);\n\n    _this = _super.call(this, props);\n\n    _this.componentDidUpdate = function (prevProps, prevState) {\n      var items = RNPickerSelect.handlePlaceholder({\n        placeholder: _this.props.placeholder\n      }).concat(_this.props.items);\n      var itemsChanged = !isEqual(prevState.items, items);\n\n      var _RNPickerSelect$getSe = RNPickerSelect.getSelectedItem({\n        items: items,\n        key: _this.props.itemKey,\n        value: _this.props.value\n      }),\n          selectedItem = _RNPickerSelect$getSe.selectedItem,\n          idx = _RNPickerSelect$getSe.idx;\n\n      var selectedItemChanged = !isEqual(_this.props.value, undefined) && !isEqual(prevState.selectedItem, selectedItem);\n\n      if (itemsChanged || selectedItemChanged) {\n        _this.props.onValueChange(selectedItem.value, idx);\n\n        _this.setState(_objectSpread(_objectSpread({}, itemsChanged ? {\n          items: items\n        } : {}), selectedItemChanged ? {\n          selectedItem: selectedItem\n        } : {}));\n      }\n    };\n\n    var _items = RNPickerSelect.handlePlaceholder({\n      placeholder: props.placeholder\n    }).concat(props.items);\n\n    var _RNPickerSelect$getSe2 = RNPickerSelect.getSelectedItem({\n      items: _items,\n      key: props.itemKey,\n      value: props.value\n    }),\n        _selectedItem = _RNPickerSelect$getSe2.selectedItem;\n\n    _this.state = {\n      items: _items,\n      selectedItem: _selectedItem,\n      showPicker: false,\n      animationType: undefined,\n      orientation: 'portrait',\n      doneDepressed: false\n    };\n    _this.onUpArrow = _this.onUpArrow.bind(_assertThisInitialized(_this));\n    _this.onDownArrow = _this.onDownArrow.bind(_assertThisInitialized(_this));\n    _this.onValueChange = _this.onValueChange.bind(_assertThisInitialized(_this));\n    _this.onOrientationChange = _this.onOrientationChange.bind(_assertThisInitialized(_this));\n    _this.setInputRef = _this.setInputRef.bind(_assertThisInitialized(_this));\n    _this.togglePicker = _this.togglePicker.bind(_assertThisInitialized(_this));\n    _this.renderInputAccessoryView = _this.renderInputAccessoryView.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(RNPickerSelect, [{\n    key: \"onUpArrow\",\n    value: function onUpArrow() {\n      var onUpArrow = this.props.onUpArrow;\n      this.togglePicker(false, onUpArrow);\n    }\n  }, {\n    key: \"onDownArrow\",\n    value: function onDownArrow() {\n      var onDownArrow = this.props.onDownArrow;\n      this.togglePicker(false, onDownArrow);\n    }\n  }, {\n    key: \"onValueChange\",\n    value: function onValueChange(value, index) {\n      var onValueChange = this.props.onValueChange;\n      onValueChange(value, index);\n      this.setState(function (prevState) {\n        return {\n          selectedItem: prevState.items[index]\n        };\n      });\n    }\n  }, {\n    key: \"onOrientationChange\",\n    value: function onOrientationChange(_ref) {\n      var nativeEvent = _ref.nativeEvent;\n      this.setState({\n        orientation: nativeEvent.orientation\n      });\n    }\n  }, {\n    key: \"setInputRef\",\n    value: function setInputRef(ref) {\n      this.inputRef = ref;\n    }\n  }, {\n    key: \"getPlaceholderStyle\",\n    value: function getPlaceholderStyle() {\n      var _this$props = this.props,\n          placeholder = _this$props.placeholder,\n          style = _this$props.style;\n      var selectedItem = this.state.selectedItem;\n\n      if (!isEqual(placeholder, {}) && selectedItem.label === placeholder.label) {\n        return _objectSpread(_objectSpread({}, defaultStyles.placeholder), style.placeholder);\n      }\n\n      return {};\n    }\n  }, {\n    key: \"triggerOpenCloseCallbacks\",\n    value: function triggerOpenCloseCallbacks() {\n      var _this$props2 = this.props,\n          onOpen = _this$props2.onOpen,\n          onClose = _this$props2.onClose;\n      var showPicker = this.state.showPicker;\n\n      if (!showPicker && onOpen) {\n        onOpen();\n      }\n\n      if (showPicker && onClose) {\n        onClose();\n      }\n    }\n  }, {\n    key: \"togglePicker\",\n    value: function togglePicker() {\n      var animate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var postToggleCallback = arguments.length > 1 ? arguments[1] : undefined;\n      var _this$props3 = this.props,\n          modalProps = _this$props3.modalProps,\n          disabled = _this$props3.disabled;\n      var showPicker = this.state.showPicker;\n\n      if (disabled) {\n        return;\n      }\n\n      if (!showPicker) {\n        Keyboard.dismiss();\n      }\n\n      var animationType = modalProps && modalProps.animationType ? modalProps.animationType : 'slide';\n      this.triggerOpenCloseCallbacks();\n      this.setState(function (prevState) {\n        return {\n          animationType: animate ? animationType : undefined,\n          showPicker: !prevState.showPicker\n        };\n      }, function () {\n        if (postToggleCallback) {\n          postToggleCallback();\n        }\n      });\n    }\n  }, {\n    key: \"renderPickerItems\",\n    value: function renderPickerItems() {\n      var _this2 = this;\n\n      var items = this.state.items;\n      return items.map(function (item) {\n        return React.createElement(Picker.Item, {\n          label: item.label,\n          value: item.value,\n          key: item.key || item.label,\n          color: item.color,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }\n        });\n      });\n    }\n  }, {\n    key: \"renderInputAccessoryView\",\n    value: function renderInputAccessoryView() {\n      var _this3 = this;\n\n      var _this$props4 = this.props,\n          InputAccessoryView = _this$props4.InputAccessoryView,\n          doneText = _this$props4.doneText,\n          onUpArrow = _this$props4.onUpArrow,\n          onDownArrow = _this$props4.onDownArrow,\n          onDonePress = _this$props4.onDonePress,\n          style = _this$props4.style,\n          touchableDoneProps = _this$props4.touchableDoneProps;\n      var doneDepressed = this.state.doneDepressed;\n\n      if (InputAccessoryView) {\n        return React.createElement(InputAccessoryView, {\n          testID: \"custom_input_accessory_view\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 20\n          }\n        });\n      }\n\n      return React.createElement(View, {\n        style: [defaultStyles.modalViewMiddle, style.modalViewMiddle],\n        testID: \"input_accessory_view\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: [defaultStyles.chevronContainer, style.chevronContainer],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        activeOpacity: onUpArrow ? 0.5 : 1,\n        onPress: onUpArrow ? this.onUpArrow : null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: [defaultStyles.chevron, style.chevron, defaultStyles.chevronUp, style.chevronUp, onUpArrow ? [defaultStyles.chevronActive, style.chevronActive] : {}],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 25\n        }\n      })), React.createElement(TouchableOpacity, {\n        activeOpacity: onDownArrow ? 0.5 : 1,\n        onPress: onDownArrow ? this.onDownArrow : null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: [defaultStyles.chevron, style.chevron, defaultStyles.chevronDown, style.chevronDown, onDownArrow ? [defaultStyles.chevronActive, style.chevronActive] : {}],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 25\n        }\n      }))), React.createElement(TouchableOpacity, _extends({\n        testID: \"done_button\",\n        onPress: function onPress() {\n          _this3.togglePicker(true, onDonePress);\n        },\n        onPressIn: function onPressIn() {\n          _this3.setState({\n            doneDepressed: true\n          });\n        },\n        onPressOut: function onPressOut() {\n          _this3.setState({\n            doneDepressed: false\n          });\n        },\n        hitSlop: {\n          top: 4,\n          right: 4,\n          bottom: 4,\n          left: 4\n        }\n      }, touchableDoneProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        testID: \"needed_for_touchable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        testID: \"done_text\",\n        allowFontScaling: false,\n        style: [defaultStyles.done, style.done, doneDepressed ? [defaultStyles.doneDepressed, style.doneDepressed] : {}],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 25\n        }\n      }, doneText))));\n    }\n  }, {\n    key: \"renderIcon\",\n    value: function renderIcon() {\n      var _this$props5 = this.props,\n          style = _this$props5.style,\n          Icon = _this$props5.Icon;\n\n      if (!Icon) {\n        return null;\n      }\n\n      return React.createElement(View, {\n        testID: \"icon_container\",\n        style: [defaultStyles.iconContainer, style.iconContainer],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }\n      }, React.createElement(Icon, {\n        testID: \"icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 17\n        }\n      }));\n    }\n  }, {\n    key: \"renderTextInputOrChildren\",\n    value: function renderTextInputOrChildren() {\n      var _this$props6 = this.props,\n          children = _this$props6.children,\n          style = _this$props6.style,\n          textInputProps = _this$props6.textInputProps;\n      var selectedItem = this.state.selectedItem;\n      var containerStyle = Platform.OS === 'ios' ? style.inputIOSContainer : style.inputAndroidContainer;\n\n      if (children) {\n        return React.createElement(View, {\n          pointerEvents: \"box-only\",\n          style: containerStyle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 17\n          }\n        }, children);\n      }\n\n      return React.createElement(View, {\n        pointerEvents: \"box-only\",\n        style: containerStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 13\n        }\n      }, React.createElement(TextInput, _extends({\n        testID: \"text_input\",\n        style: [Platform.OS === 'ios' ? style.inputIOS : style.inputAndroid, this.getPlaceholderStyle()],\n        value: selectedItem.inputLabel ? selectedItem.inputLabel : selectedItem.label,\n        ref: this.setInputRef,\n        editable: false\n      }, textInputProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 17\n        }\n      })), this.renderIcon());\n    }\n  }, {\n    key: \"renderIOS\",\n    value: function renderIOS() {\n      var _this4 = this;\n\n      var _this$props7 = this.props,\n          style = _this$props7.style,\n          modalProps = _this$props7.modalProps,\n          pickerProps = _this$props7.pickerProps,\n          touchableWrapperProps = _this$props7.touchableWrapperProps;\n      var _this$state = this.state,\n          animationType = _this$state.animationType,\n          orientation = _this$state.orientation,\n          selectedItem = _this$state.selectedItem,\n          showPicker = _this$state.showPicker;\n      return React.createElement(View, {\n        style: [defaultStyles.viewContainer, style.viewContainer],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableOpacity, _extends({\n        testID: \"ios_touchable_wrapper\",\n        onPress: function onPress() {\n          _this4.togglePicker(true);\n        },\n        activeOpacity: 1\n      }, touchableWrapperProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 17\n        }\n      }), this.renderTextInputOrChildren()), React.createElement(Modal, _extends({\n        testID: \"ios_modal\",\n        visible: showPicker,\n        transparent: true,\n        animationType: animationType,\n        supportedOrientations: ['portrait', 'landscape'],\n        onOrientationChange: this.onOrientationChange\n      }, modalProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 17\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: [defaultStyles.modalViewTop, style.modalViewTop],\n        testID: \"ios_modal_top\",\n        onPress: function onPress() {\n          _this4.togglePicker(true);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 21\n        }\n      }), this.renderInputAccessoryView(), React.createElement(View, {\n        style: [defaultStyles.modalViewBottom, {\n          height: orientation === 'portrait' ? 215 : 162\n        }, style.modalViewBottom],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 21\n        }\n      }, React.createElement(Picker, _extends({\n        testID: \"ios_picker\",\n        onValueChange: this.onValueChange,\n        selectedValue: selectedItem.value\n      }, pickerProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 25\n        }\n      }), this.renderPickerItems()))));\n    }\n  }, {\n    key: \"renderAndroidHeadless\",\n    value: function renderAndroidHeadless() {\n      var _this$props8 = this.props,\n          disabled = _this$props8.disabled,\n          Icon = _this$props8.Icon,\n          style = _this$props8.style,\n          pickerProps = _this$props8.pickerProps,\n          onOpen = _this$props8.onOpen,\n          touchableWrapperProps = _this$props8.touchableWrapperProps,\n          fixAndroidTouchableBug = _this$props8.fixAndroidTouchableBug;\n      var selectedItem = this.state.selectedItem;\n      var Component = fixAndroidTouchableBug ? View : TouchableOpacity;\n      return React.createElement(Component, _extends({\n        testID: \"android_touchable_wrapper\",\n        onPress: onOpen,\n        activeOpacity: 1\n      }, touchableWrapperProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 13\n        }\n      }), React.createElement(View, {\n        style: style.headlessAndroidContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 17\n        }\n      }, this.renderTextInputOrChildren(), React.createElement(Picker, _extends({\n        style: [Icon ? {\n          backgroundColor: 'transparent'\n        } : {}, defaultStyles.headlessAndroidPicker, style.headlessAndroidPicker],\n        testID: \"android_picker_headless\",\n        enabled: !disabled,\n        onValueChange: this.onValueChange,\n        selectedValue: selectedItem.value\n      }, pickerProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 21\n        }\n      }), this.renderPickerItems())));\n    }\n  }, {\n    key: \"renderAndroidNativePickerStyle\",\n    value: function renderAndroidNativePickerStyle() {\n      var _this$props9 = this.props,\n          disabled = _this$props9.disabled,\n          Icon = _this$props9.Icon,\n          style = _this$props9.style,\n          pickerProps = _this$props9.pickerProps;\n      var selectedItem = this.state.selectedItem;\n      return React.createElement(View, {\n        style: [defaultStyles.viewContainer, style.viewContainer],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 13\n        }\n      }, React.createElement(Picker, _extends({\n        style: [Icon ? {\n          backgroundColor: 'transparent'\n        } : {}, style.inputAndroid, this.getPlaceholderStyle()],\n        testID: \"android_picker\",\n        enabled: !disabled,\n        onValueChange: this.onValueChange,\n        selectedValue: selectedItem.value\n      }, pickerProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 17\n        }\n      }), this.renderPickerItems()), this.renderIcon());\n    }\n  }, {\n    key: \"renderWeb\",\n    value: function renderWeb() {\n      var _this$props10 = this.props,\n          disabled = _this$props10.disabled,\n          style = _this$props10.style,\n          pickerProps = _this$props10.pickerProps;\n      var selectedItem = this.state.selectedItem;\n      return React.createElement(View, {\n        style: [defaultStyles.viewContainer, style.viewContainer],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 13\n        }\n      }, React.createElement(Picker, _extends({\n        style: [style.inputWeb],\n        testID: \"web_picker\",\n        enabled: !disabled,\n        onValueChange: this.onValueChange,\n        selectedValue: selectedItem.value\n      }, pickerProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 17\n        }\n      }), this.renderPickerItems()), this.renderIcon());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props11 = this.props,\n          children = _this$props11.children,\n          useNativeAndroidPickerStyle = _this$props11.useNativeAndroidPickerStyle;\n\n      if (Platform.OS === 'ios') {\n        return this.renderIOS();\n      }\n\n      if (Platform.OS === 'web') {\n        return this.renderWeb();\n      }\n\n      if (children || !useNativeAndroidPickerStyle) {\n        return this.renderAndroidHeadless();\n      }\n\n      return this.renderAndroidNativePickerStyle();\n    }\n  }], [{\n    key: \"handlePlaceholder\",\n    value: function handlePlaceholder(_ref2) {\n      var placeholder = _ref2.placeholder;\n\n      if (isEqual(placeholder, {})) {\n        return [];\n      }\n\n      return [placeholder];\n    }\n  }, {\n    key: \"getSelectedItem\",\n    value: function getSelectedItem(_ref3) {\n      var items = _ref3.items,\n          key = _ref3.key,\n          value = _ref3.value;\n      var idx = items.findIndex(function (item) {\n        if (item.key && key) {\n          return isEqual(item.key, key);\n        }\n\n        return isEqual(item.value, value);\n      });\n\n      if (idx === -1) {\n        idx = 0;\n      }\n\n      return {\n        selectedItem: items[idx] || {},\n        idx: idx\n      };\n    }\n  }]);\n\n  return RNPickerSelect;\n}(PureComponent);\n\nRNPickerSelect.propTypes = {\n  onValueChange: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.any.isRequired,\n    inputLabel: PropTypes.string,\n    key: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    color: PropTypes.string\n  })).isRequired,\n  value: PropTypes.any,\n  placeholder: PropTypes.shape({\n    label: PropTypes.string,\n    value: PropTypes.any,\n    key: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    color: PropTypes.string\n  }),\n  disabled: PropTypes.bool,\n  itemKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  style: PropTypes.shape({}),\n  children: PropTypes.any,\n  onOpen: PropTypes.func,\n  useNativeAndroidPickerStyle: PropTypes.bool,\n  fixAndroidTouchableBug: PropTypes.bool,\n  doneText: PropTypes.string,\n  onDonePress: PropTypes.func,\n  onUpArrow: PropTypes.func,\n  onDownArrow: PropTypes.func,\n  onClose: PropTypes.func,\n  modalProps: PropTypes.shape({}),\n  textInputProps: PropTypes.shape({}),\n  pickerProps: PropTypes.shape({}),\n  touchableDoneProps: PropTypes.shape({}),\n  touchableWrapperProps: PropTypes.shape({}),\n  Icon: PropTypes.func,\n  InputAccessoryView: PropTypes.func\n};\nRNPickerSelect.defaultProps = {\n  value: undefined,\n  placeholder: {\n    label: 'Select an item...',\n    value: null,\n    color: '#9EA0A4'\n  },\n  disabled: false,\n  itemKey: null,\n  style: {},\n  children: null,\n  useNativeAndroidPickerStyle: true,\n  fixAndroidTouchableBug: false,\n  doneText: 'Done',\n  onDonePress: null,\n  onUpArrow: null,\n  onDownArrow: null,\n  onOpen: null,\n  onClose: null,\n  modalProps: {},\n  textInputProps: {},\n  pickerProps: {},\n  touchableDoneProps: {},\n  touchableWrapperProps: {},\n  Icon: null,\n  InputAccessoryView: null\n};\nexport { RNPickerSelect as default };\nexport { defaultStyles };","map":{"version":3,"sources":["/Users/kylecash/Documents/GitHub/BreakTime/node_modules/react-native-picker-select/src/index.js"],"names":["React","PureComponent","PropTypes","isEqual","Picker","defaultStyles","RNPickerSelect","props","componentDidUpdate","prevProps","prevState","items","handlePlaceholder","placeholder","concat","itemsChanged","getSelectedItem","key","itemKey","value","selectedItem","idx","selectedItemChanged","undefined","onValueChange","setState","state","showPicker","animationType","orientation","doneDepressed","onUpArrow","bind","onDownArrow","onOrientationChange","setInputRef","togglePicker","renderInputAccessoryView","index","nativeEvent","ref","inputRef","style","label","onOpen","onClose","animate","postToggleCallback","modalProps","disabled","Keyboard","dismiss","triggerOpenCloseCallbacks","map","item","color","InputAccessoryView","doneText","onDonePress","touchableDoneProps","modalViewMiddle","chevronContainer","chevron","chevronUp","chevronActive","chevronDown","top","right","bottom","left","done","Icon","iconContainer","children","textInputProps","containerStyle","Platform","OS","inputIOSContainer","inputAndroidContainer","inputIOS","inputAndroid","getPlaceholderStyle","inputLabel","renderIcon","pickerProps","touchableWrapperProps","viewContainer","renderTextInputOrChildren","modalViewTop","modalViewBottom","height","renderPickerItems","fixAndroidTouchableBug","Component","View","TouchableOpacity","headlessAndroidContainer","backgroundColor","headlessAndroidPicker","inputWeb","useNativeAndroidPickerStyle","renderIOS","renderWeb","renderAndroidHeadless","renderAndroidNativePickerStyle","findIndex","propTypes","func","isRequired","arrayOf","shape","string","any","oneOfType","number","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { Keyboard, Modal, Platform, Text, TextInput, TouchableOpacity, View } from 'react-native';\nimport PropTypes from 'prop-types';\nimport isEqual from 'lodash.isequal';\nimport { Picker } from '@react-native-picker/picker';\nimport { defaultStyles } from './styles';\n\nexport default class RNPickerSelect extends PureComponent {\n    static propTypes = {\n        onValueChange: PropTypes.func.isRequired,\n        items: PropTypes.arrayOf(\n            PropTypes.shape({\n                label: PropTypes.string.isRequired,\n                value: PropTypes.any.isRequired,\n                inputLabel: PropTypes.string,\n                key: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n                color: PropTypes.string,\n            })\n        ).isRequired,\n        value: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n        placeholder: PropTypes.shape({\n            label: PropTypes.string,\n            value: PropTypes.any,\n            key: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            color: PropTypes.string,\n        }),\n        disabled: PropTypes.bool,\n        itemKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        style: PropTypes.shape({}),\n        children: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n        onOpen: PropTypes.func,\n        useNativeAndroidPickerStyle: PropTypes.bool,\n        fixAndroidTouchableBug: PropTypes.bool,\n\n        // Custom Modal props (iOS only)\n        doneText: PropTypes.string,\n        onDonePress: PropTypes.func,\n        onUpArrow: PropTypes.func,\n        onDownArrow: PropTypes.func,\n        onClose: PropTypes.func,\n\n        // Modal props (iOS only)\n        modalProps: PropTypes.shape({}),\n\n        // TextInput props\n        textInputProps: PropTypes.shape({}),\n\n        // Picker props\n        pickerProps: PropTypes.shape({}),\n\n        // Touchable Done props (iOS only)\n        touchableDoneProps: PropTypes.shape({}),\n\n        // Touchable wrapper props\n        touchableWrapperProps: PropTypes.shape({}),\n\n        // Custom Icon\n        Icon: PropTypes.func,\n        InputAccessoryView: PropTypes.func,\n    };\n\n    static defaultProps = {\n        value: undefined,\n        placeholder: {\n            label: 'Select an item...',\n            value: null,\n            color: '#9EA0A4',\n        },\n        disabled: false,\n        itemKey: null,\n        style: {},\n        children: null,\n        useNativeAndroidPickerStyle: true,\n        fixAndroidTouchableBug: false,\n        doneText: 'Done',\n        onDonePress: null,\n        onUpArrow: null,\n        onDownArrow: null,\n        onOpen: null,\n        onClose: null,\n        modalProps: {},\n        textInputProps: {},\n        pickerProps: {},\n        touchableDoneProps: {},\n        touchableWrapperProps: {},\n        Icon: null,\n        InputAccessoryView: null,\n    };\n\n    static handlePlaceholder({ placeholder }) {\n        if (isEqual(placeholder, {})) {\n            return [];\n        }\n        return [placeholder];\n    }\n\n    static getSelectedItem({ items, key, value }) {\n        let idx = items.findIndex((item) => {\n            if (item.key && key) {\n                return isEqual(item.key, key);\n            }\n            return isEqual(item.value, value);\n        });\n        if (idx === -1) {\n            idx = 0;\n        }\n        return {\n            selectedItem: items[idx] || {},\n            idx,\n        };\n    }\n\n    constructor(props) {\n        super(props);\n\n        const items = RNPickerSelect.handlePlaceholder({\n            placeholder: props.placeholder,\n        }).concat(props.items);\n\n        const { selectedItem } = RNPickerSelect.getSelectedItem({\n            items,\n            key: props.itemKey,\n            value: props.value,\n        });\n\n        this.state = {\n            items,\n            selectedItem,\n            showPicker: false,\n            animationType: undefined,\n            orientation: 'portrait',\n            doneDepressed: false,\n        };\n\n        this.onUpArrow = this.onUpArrow.bind(this);\n        this.onDownArrow = this.onDownArrow.bind(this);\n        this.onValueChange = this.onValueChange.bind(this);\n        this.onOrientationChange = this.onOrientationChange.bind(this);\n        this.setInputRef = this.setInputRef.bind(this);\n        this.togglePicker = this.togglePicker.bind(this);\n        this.renderInputAccessoryView = this.renderInputAccessoryView.bind(this);\n    }\n\n    componentDidUpdate = (prevProps, prevState) => {\n        // update items if items or placeholder prop changes\n        const items = RNPickerSelect.handlePlaceholder({\n            placeholder: this.props.placeholder,\n        }).concat(this.props.items);\n        const itemsChanged = !isEqual(prevState.items, items);\n\n        // update selectedItem if value prop is defined and differs from currently selected item\n        const { selectedItem, idx } = RNPickerSelect.getSelectedItem({\n            items,\n            key: this.props.itemKey,\n            value: this.props.value,\n        });\n        const selectedItemChanged =\n            !isEqual(this.props.value, undefined) && !isEqual(prevState.selectedItem, selectedItem);\n\n        if (itemsChanged || selectedItemChanged) {\n            this.props.onValueChange(selectedItem.value, idx);\n\n            this.setState({\n                ...(itemsChanged ? { items } : {}),\n                ...(selectedItemChanged ? { selectedItem } : {}),\n            });\n        }\n    };\n\n    onUpArrow() {\n        const { onUpArrow } = this.props;\n\n        this.togglePicker(false, onUpArrow);\n    }\n\n    onDownArrow() {\n        const { onDownArrow } = this.props;\n\n        this.togglePicker(false, onDownArrow);\n    }\n\n    onValueChange(value, index) {\n        const { onValueChange } = this.props;\n\n        onValueChange(value, index);\n\n        this.setState((prevState) => {\n            return {\n                selectedItem: prevState.items[index],\n            };\n        });\n    }\n\n    onOrientationChange({ nativeEvent }) {\n        this.setState({\n            orientation: nativeEvent.orientation,\n        });\n    }\n\n    setInputRef(ref) {\n        this.inputRef = ref;\n    }\n\n    getPlaceholderStyle() {\n        const { placeholder, style } = this.props;\n        const { selectedItem } = this.state;\n\n        if (!isEqual(placeholder, {}) && selectedItem.label === placeholder.label) {\n            return {\n                ...defaultStyles.placeholder,\n                ...style.placeholder,\n            };\n        }\n        return {};\n    }\n\n    triggerOpenCloseCallbacks() {\n        const { onOpen, onClose } = this.props;\n        const { showPicker } = this.state;\n\n        if (!showPicker && onOpen) {\n            onOpen();\n        }\n\n        if (showPicker && onClose) {\n            onClose();\n        }\n    }\n\n    togglePicker(animate = false, postToggleCallback) {\n        const { modalProps, disabled } = this.props;\n        const { showPicker } = this.state;\n\n        if (disabled) {\n            return;\n        }\n\n        if (!showPicker) {\n            Keyboard.dismiss();\n        }\n\n        const animationType =\n            modalProps && modalProps.animationType ? modalProps.animationType : 'slide';\n\n        this.triggerOpenCloseCallbacks();\n\n        this.setState(\n            (prevState) => {\n                return {\n                    animationType: animate ? animationType : undefined,\n                    showPicker: !prevState.showPicker,\n                };\n            },\n            () => {\n                if (postToggleCallback) {\n                    postToggleCallback();\n                }\n            }\n        );\n    }\n\n    renderPickerItems() {\n        const { items } = this.state;\n\n        return items.map((item) => {\n            return (\n                <Picker.Item\n                    label={item.label}\n                    value={item.value}\n                    key={item.key || item.label}\n                    color={item.color}\n                />\n            );\n        });\n    }\n\n    renderInputAccessoryView() {\n        const {\n            InputAccessoryView,\n            doneText,\n            onUpArrow,\n            onDownArrow,\n            onDonePress,\n            style,\n            touchableDoneProps,\n        } = this.props;\n\n        const { doneDepressed } = this.state;\n\n        if (InputAccessoryView) {\n            return <InputAccessoryView testID=\"custom_input_accessory_view\" />;\n        }\n\n        return (\n            <View\n                style={[defaultStyles.modalViewMiddle, style.modalViewMiddle]}\n                testID=\"input_accessory_view\"\n            >\n                <View style={[defaultStyles.chevronContainer, style.chevronContainer]}>\n                    <TouchableOpacity\n                        activeOpacity={onUpArrow ? 0.5 : 1}\n                        onPress={onUpArrow ? this.onUpArrow : null}\n                    >\n                        <View\n                            style={[\n                                defaultStyles.chevron,\n                                style.chevron,\n                                defaultStyles.chevronUp,\n                                style.chevronUp,\n                                onUpArrow ? [defaultStyles.chevronActive, style.chevronActive] : {},\n                            ]}\n                        />\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                        activeOpacity={onDownArrow ? 0.5 : 1}\n                        onPress={onDownArrow ? this.onDownArrow : null}\n                    >\n                        <View\n                            style={[\n                                defaultStyles.chevron,\n                                style.chevron,\n                                defaultStyles.chevronDown,\n                                style.chevronDown,\n                                onDownArrow\n                                    ? [defaultStyles.chevronActive, style.chevronActive]\n                                    : {},\n                            ]}\n                        />\n                    </TouchableOpacity>\n                </View>\n                <TouchableOpacity\n                    testID=\"done_button\"\n                    onPress={() => {\n                        this.togglePicker(true, onDonePress);\n                    }}\n                    onPressIn={() => {\n                        this.setState({ doneDepressed: true });\n                    }}\n                    onPressOut={() => {\n                        this.setState({ doneDepressed: false });\n                    }}\n                    hitSlop={{ top: 4, right: 4, bottom: 4, left: 4 }}\n                    {...touchableDoneProps}\n                >\n                    <View testID=\"needed_for_touchable\">\n                        <Text\n                            testID=\"done_text\"\n                            allowFontScaling={false}\n                            style={[\n                                defaultStyles.done,\n                                style.done,\n                                doneDepressed\n                                    ? [defaultStyles.doneDepressed, style.doneDepressed]\n                                    : {},\n                            ]}\n                        >\n                            {doneText}\n                        </Text>\n                    </View>\n                </TouchableOpacity>\n            </View>\n        );\n    }\n\n    renderIcon() {\n        const { style, Icon } = this.props;\n\n        if (!Icon) {\n            return null;\n        }\n\n        return (\n            <View\n                testID=\"icon_container\"\n                style={[defaultStyles.iconContainer, style.iconContainer]}\n            >\n                <Icon testID=\"icon\" />\n            </View>\n        );\n    }\n\n    renderTextInputOrChildren() {\n        const { children, style, textInputProps } = this.props;\n        const { selectedItem } = this.state;\n\n        const containerStyle =\n            Platform.OS === 'ios' ? style.inputIOSContainer : style.inputAndroidContainer;\n\n        if (children) {\n            return (\n                <View pointerEvents=\"box-only\" style={containerStyle}>\n                    {children}\n                </View>\n            );\n        }\n\n        return (\n            <View pointerEvents=\"box-only\" style={containerStyle}>\n                <TextInput\n                    testID=\"text_input\"\n                    style={[\n                        Platform.OS === 'ios' ? style.inputIOS : style.inputAndroid,\n                        this.getPlaceholderStyle(),\n                    ]}\n                    value={selectedItem.inputLabel ? selectedItem.inputLabel : selectedItem.label}\n                    ref={this.setInputRef}\n                    editable={false}\n                    {...textInputProps}\n                />\n                {this.renderIcon()}\n            </View>\n        );\n    }\n\n    renderIOS() {\n        const { style, modalProps, pickerProps, touchableWrapperProps } = this.props;\n        const { animationType, orientation, selectedItem, showPicker } = this.state;\n\n        return (\n            <View style={[defaultStyles.viewContainer, style.viewContainer]}>\n                <TouchableOpacity\n                    testID=\"ios_touchable_wrapper\"\n                    onPress={() => {\n                        this.togglePicker(true);\n                    }}\n                    activeOpacity={1}\n                    {...touchableWrapperProps}\n                >\n                    {this.renderTextInputOrChildren()}\n                </TouchableOpacity>\n                <Modal\n                    testID=\"ios_modal\"\n                    visible={showPicker}\n                    transparent\n                    animationType={animationType}\n                    supportedOrientations={['portrait', 'landscape']}\n                    onOrientationChange={this.onOrientationChange}\n                    {...modalProps}\n                >\n                    <TouchableOpacity\n                        style={[defaultStyles.modalViewTop, style.modalViewTop]}\n                        testID=\"ios_modal_top\"\n                        onPress={() => {\n                            this.togglePicker(true);\n                        }}\n                    />\n                    {this.renderInputAccessoryView()}\n                    <View\n                        style={[\n                            defaultStyles.modalViewBottom,\n                            { height: orientation === 'portrait' ? 215 : 162 },\n                            style.modalViewBottom,\n                        ]}\n                    >\n                        <Picker\n                            testID=\"ios_picker\"\n                            onValueChange={this.onValueChange}\n                            selectedValue={selectedItem.value}\n                            {...pickerProps}\n                        >\n                            {this.renderPickerItems()}\n                        </Picker>\n                    </View>\n                </Modal>\n            </View>\n        );\n    }\n\n    renderAndroidHeadless() {\n        const {\n            disabled,\n            Icon,\n            style,\n            pickerProps,\n            onOpen,\n            touchableWrapperProps,\n            fixAndroidTouchableBug,\n        } = this.props;\n        const { selectedItem } = this.state;\n\n        const Component = fixAndroidTouchableBug ? View : TouchableOpacity;\n        return (\n            <Component\n                testID=\"android_touchable_wrapper\"\n                onPress={onOpen}\n                activeOpacity={1}\n                {...touchableWrapperProps}\n            >\n                <View style={style.headlessAndroidContainer}>\n                    {this.renderTextInputOrChildren()}\n                    <Picker\n                        style={[\n                            Icon ? { backgroundColor: 'transparent' } : {}, // to hide native icon\n                            defaultStyles.headlessAndroidPicker,\n                            style.headlessAndroidPicker,\n                        ]}\n                        testID=\"android_picker_headless\"\n                        enabled={!disabled}\n                        onValueChange={this.onValueChange}\n                        selectedValue={selectedItem.value}\n                        {...pickerProps}\n                    >\n                        {this.renderPickerItems()}\n                    </Picker>\n                </View>\n            </Component>\n        );\n    }\n\n    renderAndroidNativePickerStyle() {\n        const { disabled, Icon, style, pickerProps } = this.props;\n        const { selectedItem } = this.state;\n\n        return (\n            <View style={[defaultStyles.viewContainer, style.viewContainer]}>\n                <Picker\n                    style={[\n                        Icon ? { backgroundColor: 'transparent' } : {}, // to hide native icon\n                        style.inputAndroid,\n                        this.getPlaceholderStyle(),\n                    ]}\n                    testID=\"android_picker\"\n                    enabled={!disabled}\n                    onValueChange={this.onValueChange}\n                    selectedValue={selectedItem.value}\n                    {...pickerProps}\n                >\n                    {this.renderPickerItems()}\n                </Picker>\n                {this.renderIcon()}\n            </View>\n        );\n    }\n\n    renderWeb() {\n        const { disabled, style, pickerProps } = this.props;\n        const { selectedItem } = this.state;\n\n        return (\n            <View style={[defaultStyles.viewContainer, style.viewContainer]}>\n                <Picker\n                    style={[style.inputWeb]}\n                    testID=\"web_picker\"\n                    enabled={!disabled}\n                    onValueChange={this.onValueChange}\n                    selectedValue={selectedItem.value}\n                    {...pickerProps}\n                >\n                    {this.renderPickerItems()}\n                </Picker>\n                {this.renderIcon()}\n            </View>\n        );\n    }\n\n    render() {\n        const { children, useNativeAndroidPickerStyle } = this.props;\n\n        if (Platform.OS === 'ios') {\n            return this.renderIOS();\n        }\n\n        if (Platform.OS === 'web') {\n            return this.renderWeb();\n        }\n\n        if (children || !useNativeAndroidPickerStyle) {\n            return this.renderAndroidHeadless();\n        }\n\n        return this.renderAndroidNativePickerStyle();\n    }\n}\n\nexport { defaultStyles };\n"]},"metadata":{},"sourceType":"module"}