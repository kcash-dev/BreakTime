{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_TASK, DELETE_TASK, DID_TASK, LOG_OUT, REMOVE_TASK, UPDATE_TASK } from \"./taskTypes\";\nvar initialState = {\n  tasks: []\n};\n\nvar taskReducer = function taskReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TASK:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tasks: [].concat(_toConsumableArray(state.tasks), [{\n          task: action.payload,\n          done: false,\n          finished: false,\n          id: Math.random().toString(),\n          focusTime: 0\n        }])\n      });\n\n    case DELETE_TASK:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tasks: state.tasks.filter(function (item) {\n          return item.id != action.payload;\n        })\n      });\n\n    case DID_TASK:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tasks: state.tasks.map(function (item) {\n          if (item.id != action.payload) {\n            return item;\n          }\n\n          return _objectSpread(_objectSpread({}, item), {}, {\n            done: true,\n            finished: true\n          });\n        })\n      });\n\n    case REMOVE_TASK:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tasks: state.tasks.map(function (item) {\n          if (item.id != action.payload) {\n            return item;\n          }\n\n          return _objectSpread(_objectSpread({}, item), {}, {\n            done: true\n          });\n        })\n      });\n\n    case UPDATE_TASK:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tasks: state.tasks.map(function (item) {\n          if (item.id != action.payload.id) {\n            return item;\n          }\n\n          return _objectSpread(_objectSpread({}, item), {}, {\n            focusTime: action.payload.totalFocusTime\n          });\n        })\n      });\n\n    case LOG_OUT:\n      return {\n        tasks: initialState\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default taskReducer;","map":{"version":3,"sources":["/Users/kylecash/Documents/GitHub/BreakTime/src/store/taskReducer.js"],"names":["ADD_TASK","DELETE_TASK","DID_TASK","LOG_OUT","REMOVE_TASK","UPDATE_TASK","initialState","tasks","taskReducer","state","action","type","task","payload","done","finished","id","Math","random","toString","focusTime","filter","item","map","totalFocusTime"],"mappings":";;;;;;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,QAAhC,EAA0CC,OAA1C,EAAmDC,WAAnD,EAAgEC,WAAhE;AACA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,QAAL;AACA,6CACOS,KADP;AAEIF,QAAAA,KAAK,+BAAME,KAAK,CAACF,KAAZ,IAAmB;AAChBK,UAAAA,IAAI,EAAEF,MAAM,CAACG,OADG;AACMC,UAAAA,IAAI,EAAE,KADZ;AACmBC,UAAAA,QAAQ,EAAE,KAD7B;AACoCC,UAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,EADxC;AACkEC,UAAAA,SAAS,EAAE;AAD7E,SAAnB;AAFT;;AAOA,SAAKnB,WAAL;AACI,6CACOQ,KADP;AAEIF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYc,MAAZ,CAAmB,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACN,EAAL,IAAWN,MAAM,CAACG,OAAtB;AAAA,SAAvB;AAFX;;AAIJ,SAAKX,QAAL;AACI,6CACOO,KADP;AAEIF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYgB,GAAZ,CAAgB,UAACD,IAAD,EAAU;AAC7B,cAAIA,IAAI,CAACN,EAAL,IAAWN,MAAM,CAACG,OAAtB,EAA+B;AAC3B,mBAAOS,IAAP;AACH;;AACD,iDACOA,IADP;AAEIR,YAAAA,IAAI,EAAE,IAFV;AAGIC,YAAAA,QAAQ,EAAE;AAHd;AAKH,SATM;AAFX;;AAaJ,SAAKX,WAAL;AACI,6CACOK,KADP;AAEIF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYgB,GAAZ,CAAgB,UAACD,IAAD,EAAU;AAC7B,cAAIA,IAAI,CAACN,EAAL,IAAWN,MAAM,CAACG,OAAtB,EAA+B;AAC3B,mBAAOS,IAAP;AACH;;AACD,iDACOA,IADP;AAEIR,YAAAA,IAAI,EAAE;AAFV;AAIH,SARM;AAFX;;AAYJ,SAAKT,WAAL;AACI,6CACOI,KADP;AAEIF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYgB,GAAZ,CAAgB,UAACD,IAAD,EAAU;AAC7B,cAAIA,IAAI,CAACN,EAAL,IAAWN,MAAM,CAACG,OAAP,CAAeG,EAA9B,EAAkC;AAC9B,mBAAOM,IAAP;AACH;;AACD,iDACOA,IADP;AAEIF,YAAAA,SAAS,EAAEV,MAAM,CAACG,OAAP,CAAeW;AAF9B;AAIH,SARM;AAFX;;AAYJ,SAAKrB,OAAL;AACI,aAAO;AACHI,QAAAA,KAAK,EAAED;AADJ,OAAP;;AAGJ;AACI,aAAOG,KAAP;AA3DR;AA6DH,CA9DD;;AA+DA,eAAeD,WAAf","sourcesContent":["import { ADD_TASK, DELETE_TASK, DID_TASK, LOG_OUT, REMOVE_TASK, UPDATE_TASK } from \"./taskTypes\";\nconst initialState = {\n    tasks: []\n}\nconst taskReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_TASK:\n        return {\n            ...state,\n            tasks: [...state.tasks, {\n                    task: action.payload, done: false, finished: false, id: Math.random().toString(), focusTime: 0\n                }\n            ]\n        }  \n        case DELETE_TASK:\n            return {\n                ...state,\n                tasks: state.tasks.filter(item => item.id != action.payload)\n            }\n        case DID_TASK:\n            return {\n                ...state,\n                tasks: state.tasks.map((item) => {\n                    if (item.id != action.payload) {\n                        return item\n                    }\n                    return {\n                        ...item,\n                        done: true,\n                        finished: true\n                    }\n                })\n            }\n        case REMOVE_TASK:\n            return {\n                ...state,\n                tasks: state.tasks.map((item) => {\n                    if (item.id != action.payload) {\n                        return item;\n                    }\n                    return {\n                        ...item,\n                        done: true\n                    }\n                })\n            }\n        case UPDATE_TASK:\n            return {\n                ...state,\n                tasks: state.tasks.map((item) => {\n                    if (item.id != action.payload.id) {\n                        return item;\n                    }\n                    return {\n                        ...item,\n                        focusTime: action.payload.totalFocusTime\n                    }\n                })\n            }\n        case LOG_OUT:\n            return {\n                tasks: initialState\n            }\n        default:\n            return state;\n    }\n}\nexport default taskReducer;"]},"metadata":{},"sourceType":"module"}