{"ast":null,"code":"import ReactNativePropRegistry from \"./ReactNativePropRegistry\";\nimport invariant from 'fbjs/lib/invariant';\n\nfunction getStyle(style) {\n  if (typeof style === 'number') {\n    return ReactNativePropRegistry.getByID(style);\n  }\n\n  return style;\n}\n\nfunction flattenStyle(style) {\n  if (!style) {\n    return undefined;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    invariant(style !== true, 'style may be false but not true');\n  }\n\n  if (!Array.isArray(style)) {\n    return getStyle(style);\n  }\n\n  var result = {};\n\n  for (var i = 0, styleLength = style.length; i < styleLength; ++i) {\n    var computedStyle = flattenStyle(style[i]);\n\n    if (computedStyle) {\n      for (var key in computedStyle) {\n        var value = computedStyle[key];\n        result[key] = value;\n      }\n    }\n  }\n\n  return result;\n}\n\nexport default flattenStyle;","map":{"version":3,"sources":["/Users/kylecash/Documents/GitHub/BreakTime/node_modules/react-native-web/src/exports/StyleSheet/flattenStyle.js"],"names":["ReactNativePropRegistry","invariant","getStyle","style","getByID","flattenStyle","undefined","process","env","NODE_ENV","Array","isArray","result","i","styleLength","length","computedStyle","key","value"],"mappings":"AAUA,OAAOA,uBAAP;AACA,OAAOC,SAAP,MAAsB,oBAAtB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,WAAOH,uBAAuB,CAACI,OAAxB,CAAgCD,KAAhC,CAAP;AACD;;AACD,SAAOA,KAAP;AACD;;AAED,SAASE,YAAT,CAAsBF,KAAtB,EAA4C;AAC1C,MAAI,CAACA,KAAL,EAAY;AACV,WAAOG,SAAP;AACD;;AAED,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCR,IAAAA,SAAS,CAACE,KAAK,KAAK,IAAX,EAAiB,iCAAjB,CAAT;AACD;;AAED,MAAI,CAACO,KAAK,CAACC,OAAN,CAAcR,KAAd,CAAL,EAA2B;AACzB,WAAOD,QAAQ,CAACC,KAAD,CAAf;AACD;;AAED,MAAMS,MAAM,GAAG,EAAf;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,WAAW,GAAGX,KAAK,CAACY,MAApC,EAA4CF,CAAC,GAAGC,WAAhD,EAA6D,EAAED,CAA/D,EAAkE;AAChE,QAAMG,aAAa,GAAGX,YAAY,CAACF,KAAK,CAACU,CAAD,CAAN,CAAlC;;AACA,QAAIG,aAAJ,EAAmB;AACjB,WAAK,IAAMC,GAAX,IAAkBD,aAAlB,EAAiC;AAC/B,YAAME,KAAK,GAAGF,aAAa,CAACC,GAAD,CAA3B;AACAL,QAAAA,MAAM,CAACK,GAAD,CAAN,GAAcC,KAAd;AACD;AACF;AACF;;AACD,SAAON,MAAP;AACD;;AAED,eAAeP,YAAf","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport ReactNativePropRegistry from './ReactNativePropRegistry';\nimport invariant from 'fbjs/lib/invariant';\n\nfunction getStyle(style) {\n  if (typeof style === 'number') {\n    return ReactNativePropRegistry.getByID(style);\n  }\n  return style;\n}\n\nfunction flattenStyle(style: ?any): ?Object {\n  if (!style) {\n    return undefined;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    invariant(style !== true, 'style may be false but not true');\n  }\n\n  if (!Array.isArray(style)) {\n    return getStyle(style);\n  }\n\n  const result = {};\n  for (let i = 0, styleLength = style.length; i < styleLength; ++i) {\n    const computedStyle = flattenStyle(style[i]);\n    if (computedStyle) {\n      for (const key in computedStyle) {\n        const value = computedStyle[key];\n        result[key] = value;\n      }\n    }\n  }\n  return result;\n}\n\nexport default flattenStyle;\n"]},"metadata":{},"sourceType":"module"}