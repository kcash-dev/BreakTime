{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/kylecash/Documents/GitHub/BreakTime/src/screens/TasksDone.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { ButtonComp } from \"../components/Button\";\nimport { colors } from \"../utils/Colors\";\nimport { fontSizes } from \"../utils/Sizes\";\nimport { Feather } from '@expo/vector-icons';\nimport { deleteTask } from \"../store/taskAction\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { db, currentUserUID } from \"../api/Firebase\";\nimport { PieChart } from \"react-native-chart-kit\";\nvar screenWidth = Dimensions.get('window').width;\nexport var TasksDone = function TasksDone() {\n  var tasks = useSelector(function (state) {\n    return state.tasks;\n  });\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      tasksDone = _useState2[0],\n      setTasksDone = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      totalFocusTime = _useState4[0],\n      setTotalFocusTime = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      howFocused = _useState6[0],\n      setHowFocused = _useState6[1];\n\n  var dispatch = useDispatch();\n\n  var foreverDeleteTask = function foreverDeleteTask(id) {\n    return dispatch(deleteTask(id));\n  };\n\n  var chartConfig = {\n    backgroundGradientFrom: '#1E2923',\n    backgroundGradientTo: '#08130D',\n    color: function color() {\n      var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      return \"rgba(26, 255, 146, \" + opacity + \")\";\n    }\n  };\n  useEffect(function () {\n    function getUserTasks() {\n      var doc, taskList, focusTime, noFocus, somewhatFocus, veryFocus;\n      return _regeneratorRuntime.async(function getUserTasks$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(db.collection('users').doc(currentUserUID).get());\n\n            case 2:\n              doc = _context.sent;\n              taskList = doc.data().tasks;\n              focusTime = doc.data().totalFocusTime;\n              noFocus = doc.data().notFocused;\n              somewhatFocus = doc.data().somewhatFocused;\n              veryFocus = doc.data().veryFocused;\n\n              if (!doc.exists) {\n                Alert.alert('No data found!');\n              } else {\n                setTasksDone(taskList);\n                setTotalFocusTime(focusTime);\n                setHowFocused([{\n                  name: 'Not Focused',\n                  number: noFocus,\n                  color: 'rgba(131, 167, 234, 1)',\n                  legendFontColor: '#000',\n                  legendFontSize: 10\n                }, {\n                  name: 'Somewhat Focused',\n                  number: somewhatFocus,\n                  color: '#F00',\n                  legendFontColor: '#000',\n                  legendFontSize: 10\n                }, {\n                  name: 'Very Focused',\n                  number: veryFocus,\n                  color: 'rgb(0, 0, 255)',\n                  legendFontColor: '#000',\n                  legendFontSize: 10\n                }]);\n              }\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    getUserTasks();\n  }, []);\n\n  function timeConvert(n) {\n    var num = n;\n    var hours = num / 60;\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hour(s) and \" + rminutes + \" minute(s).\";\n  }\n\n  var totalTime = timeConvert(totalFocusTime);\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Tasks Finished\"), React.createElement(View, {\n    style: styles.listContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    data: tasksDone,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.itemContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }\n      }, React.createElement(TouchableOpacity, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 33\n        }\n      }, item.task)), React.createElement(Pressable, {\n        style: function style(_ref2) {\n          var pressed = _ref2.pressed;\n          return [{\n            opacity: pressed ? 0.5 : 1.0\n          }];\n        },\n        onPress: function onPress() {\n          return foreverDeleteTask(item.id);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }\n      }, React.createElement(Feather, {\n        name: \"x\",\n        size: fontSizes.xl,\n        color: colors.red,\n        style: styles.icon,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 33\n        }\n      })));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.infoContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, \"Total Focus Time: \", totalTime), React.createElement(PieChart, {\n    data: howFocused,\n    width: screenWidth,\n    height: 200,\n    chartConfig: chartConfig,\n    accessor: \"number\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, React.createElement(ButtonComp, {\n    name: \"Go Back\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  })));\n};\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: colors.primary,\n    flex: 1\n  },\n  icon: {\n    right: 10\n  },\n  itemContainer: {\n    borderWidth: 1,\n    backgroundColor: colors.white,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    alignItems: 'center',\n    marginVertical: 10\n  },\n  heading: {\n    fontSize: fontSizes.xl,\n    textAlign: 'center'\n  },\n  listContainer: {\n    height: '45%'\n  },\n  infoContainer: {\n    height: '45%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  buttonContainer: {\n    height: '10%',\n    marginBottom: 50\n  }\n});","map":{"version":3,"sources":["/Users/kylecash/Documents/GitHub/BreakTime/src/screens/TasksDone.js"],"names":["React","useEffect","useState","ButtonComp","colors","fontSizes","Feather","deleteTask","useSelector","useDispatch","db","currentUserUID","PieChart","screenWidth","Dimensions","get","width","TasksDone","tasks","state","tasksDone","setTasksDone","totalFocusTime","setTotalFocusTime","howFocused","setHowFocused","dispatch","foreverDeleteTask","id","chartConfig","backgroundGradientFrom","backgroundGradientTo","color","opacity","getUserTasks","collection","doc","taskList","data","focusTime","noFocus","notFocused","somewhatFocus","somewhatFocused","veryFocus","veryFocused","exists","Alert","alert","name","number","legendFontColor","legendFontSize","timeConvert","n","num","hours","rhours","Math","floor","minutes","rminutes","round","totalTime","styles","container","heading","listContainer","item","itemContainer","task","pressed","xl","red","icon","infoContainer","buttonContainer","StyleSheet","create","backgroundColor","primary","flex","right","borderWidth","white","flexDirection","justifyContent","alignItems","marginVertical","fontSize","textAlign","height","marginBottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { View, StyleSheet, FlatList, TouchableOpacity, Text, SafeAreaView, Pressable, Alert, Dimensions } from 'react-native';\nimport { ButtonComp } from '../components/Button';\nimport { colors } from '../utils/Colors';\nimport { fontSizes } from '../utils/Sizes';\n\nimport { Feather } from '@expo/vector-icons';\n\nimport { deleteTask } from '../store/taskAction';\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { db, currentUserUID } from '../api/Firebase';\n\nimport {\n    PieChart\n  } from \"react-native-chart-kit\";\n\nconst screenWidth = Dimensions.get('window').width\n\nexport const TasksDone = () => {\n    const tasks = useSelector(state => state.tasks)\n    const [ tasksDone, setTasksDone ] = useState([])\n    const [ totalFocusTime, setTotalFocusTime ] = useState(0)\n    const [ howFocused, setHowFocused ] = useState([])\n\n    const dispatch = useDispatch();\n    const foreverDeleteTask = (id) => dispatch(deleteTask(id));\n\n    const chartConfig = {\n        backgroundGradientFrom: '#1E2923',\n        backgroundGradientTo: '#08130D',\n        color: (opacity = 1) => `rgba(26, 255, 146, ${opacity})`\n    }\n\n    useEffect(() => {\n        async function getUserTasks() {\n            let doc = await db\n            .collection('users')\n            .doc(currentUserUID)\n            .get()\n\n            const taskList = doc.data().tasks\n            const focusTime = doc.data().totalFocusTime\n            const noFocus = doc.data().notFocused\n            const somewhatFocus = doc.data().somewhatFocused\n            const veryFocus = doc.data().veryFocused\n\n            if(!doc.exists) {\n                Alert.alert('No data found!')\n            } else {\n                setTasksDone(taskList)\n                setTotalFocusTime(focusTime)\n                setHowFocused([\n                    { name: 'Not Focused', number: noFocus, color: 'rgba(131, 167, 234, 1)', legendFontColor: '#000', legendFontSize: 10 }, \n                    { name: 'Somewhat Focused', number: somewhatFocus, color: '#F00', legendFontColor: '#000', legendFontSize: 10 }, \n                    { name: 'Very Focused', number: veryFocus, color: 'rgb(0, 0, 255)', legendFontColor: '#000', legendFontSize: 10 }\n                ])\n            }\n\n        }\n\n        getUserTasks();\n    }, [])\n\n    function timeConvert(n) {\n        var num = n;\n        var hours = (num / 60);\n        var rhours = Math.floor(hours);\n        var minutes = (hours - rhours) * 60;\n        var rminutes = Math.round(minutes);\n        return rhours + \" hour(s) and \" + rminutes + \" minute(s).\";\n    }\n\n    let totalTime = timeConvert(totalFocusTime)\n\n    return (\n        <SafeAreaView style={ styles.container }>\n            <Text style={ styles.heading }>Tasks Finished</Text>\n            <View style={ styles.listContainer }>\n                <FlatList\n                    data={ tasksDone }\n                    keyExtractor={ item => item.id }\n                    renderItem={({ item }) => (\n                        <View style={ styles.itemContainer }>\n                            <TouchableOpacity\n                            \n                            >\n                                <Text>{item.task}</Text>\n                            </TouchableOpacity>\n                            <Pressable\n                                style={({ pressed }) => [{\n                                    opacity: pressed ?\n                                        0.5\n                                        :\n                                        1.0\n                                }]}\n                                onPress={() => foreverDeleteTask(item.id)}\n                            >\n                                <Feather name=\"x\" size={fontSizes.xl} color={ colors.red } style={ styles.icon }/>\n                            </Pressable>\n                        </View>\n                    )}\n                />\n            </View>\n            <View style={ styles.infoContainer }>\n                <Text>Total Focus Time: { totalTime }</Text>\n                <PieChart\n                    data={ howFocused }\n                    width={ screenWidth }\n                    height={ 200 }\n                    chartConfig={ chartConfig }\n                    accessor=\"number\"\n                />\n            </View>\n            <View style={ styles.buttonContainer }>\n                <ButtonComp name=\"Go Back\" />\n            </View>\n        </SafeAreaView>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: colors.primary,\n        flex: 1\n    },\n    icon: {\n        right: 10\n    },\n    itemContainer: {\n        borderWidth: 1,\n        backgroundColor: colors.white,\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        width: '100%',\n        alignItems: 'center',\n        marginVertical: 10\n    },\n    heading: {\n        fontSize: fontSizes.xl,\n        textAlign: 'center'\n    },\n    listContainer: {\n        height: '45%'\n    },\n    infoContainer: {\n        height: '45%',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    buttonContainer: {\n        height: '10%',\n        marginBottom: 50\n    }\n})"]},"metadata":{},"sourceType":"module"}