{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/kylecash/Documents/GitHub/BreakTime/src/screens/HomeScreen.js\";\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { FocusItem } from \"../components/FocusItem\";\nimport { colors } from \"../utils/Colors\";\nimport { Timer } from \"../components/Timer\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addTask } from \"../store/taskAction\";\nexport var HomeScreen = function HomeScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      workTime = _useState2[0],\n      setWorkTime = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isFocusItem = _useState4[0],\n      setIsFocusItem = _useState4[1];\n\n  var dispatch = useDispatch();\n\n  var submitTask = function submitTask(text) {\n    return dispatch(addTask(text));\n  };\n\n  var tasks = useSelector(function (state) {\n    return state.tasks;\n  });\n  console.log(tasks);\n  var focusItem;\n\n  if (!tasks.length) {\n    focusItem = null;\n  } else {\n    if (tasks.filter(function (item) {\n      return item.done === false;\n    })) {\n      focusItem = tasks.filter(function (item) {\n        return item.done === false;\n      });\n    }\n  }\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, isFocusItem ? React.createElement(Timer, {\n    focusItem: focusItem,\n    workTime: workTime.work,\n    breakTime: workTime.break,\n    setFocusItem: submitTask,\n    setWorkTime: setWorkTime,\n    setIsFocusItem: setIsFocusItem,\n    isFocusItem: isFocusItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }) : React.createElement(FocusItem, {\n    setTask: submitTask,\n    setWorkTime: setWorkTime,\n    setIsFocusItem: setIsFocusItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.primary,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/kylecash/Documents/GitHub/BreakTime/src/screens/HomeScreen.js"],"names":["React","useState","FocusItem","colors","Timer","useDispatch","useSelector","addTask","HomeScreen","workTime","setWorkTime","isFocusItem","setIsFocusItem","dispatch","submitTask","text","tasks","state","console","log","focusItem","length","filter","item","done","styles","container","work","break","StyleSheet","create","flex","backgroundColor","primary","alignItems","justifyContent"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAGA,SAASC,SAAT;AACA,SAASC,MAAT;AACA,SAASC,KAAT;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAC9B,kBAAkCP,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAQQ,QAAR;AAAA,MAAkBC,WAAlB;;AACA,mBAAwCT,QAAQ,CAAC,KAAD,CAAhD;AAAA;AAAA,MAAQU,WAAR;AAAA,MAAqBC,cAArB;;AAEA,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AACA,MAAMS,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD;AAAA,WAAUF,QAAQ,CAACN,OAAO,CAACQ,IAAD,CAAR,CAAlB;AAAA,GAAnB;;AAEA,MAAMC,KAAK,GAAGV,WAAW,CAAC,UAAAW,KAAK;AAAA,WAAIA,KAAK,CAACD,KAAV;AAAA,GAAN,CAAzB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAEA,MAAII,SAAJ;;AAEA,MAAI,CAACJ,KAAK,CAACK,MAAX,EAAmB;AACjBD,IAAAA,SAAS,GAAG,IAAZ;AACD,GAFD,MAEO;AACL,QAAGJ,KAAK,CAACM,MAAN,CAAa,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACC,IAAL,KAAc,KAAlB;AAAA,KAAjB,CAAH,EAA8C;AAC5CJ,MAAAA,SAAS,GAAGJ,KAAK,CAACM,MAAN,CAAa,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,IAAL,KAAc,KAAlB;AAAA,OAAjB,CAAZ;AACD;AACF;;AAED,SACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAGC,MAAM,CAACC,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIf,WAAW,GACT,oBAAC,KAAD;AACE,IAAA,SAAS,EAAGS,SADd;AAEE,IAAA,QAAQ,EAAGX,QAAQ,CAACkB,IAFtB;AAGE,IAAA,SAAS,EAAGlB,QAAQ,CAACmB,KAHvB;AAIE,IAAA,YAAY,EAAGd,UAJjB;AAKE,IAAA,WAAW,EAAGJ,WALhB;AAME,IAAA,cAAc,EAAGE,cANnB;AAOE,IAAA,WAAW,EAAGD,WAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADS,GAWT,oBAAC,SAAD;AACE,IAAA,OAAO,EAAGG,UADZ;AAEE,IAAA,WAAW,EAAGJ,WAFhB;AAGE,IAAA,cAAc,EAAGE,cAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZN,CADF;AAqBD,CAzCM;AA2CP,IAAMa,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE7B,MAAM,CAAC8B,OAFf;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, View, SafeAreaView } from 'react-native';\n\nimport { FocusItem } from '../components/FocusItem'\nimport { colors } from '../utils/Colors';\nimport { Timer } from '../components/Timer';\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addTask } from '../store/taskAction';\n\nexport const HomeScreen = () => {\n  const [ workTime, setWorkTime ] = useState('');\n  const [ isFocusItem, setIsFocusItem ] = useState(false);\n\n  const dispatch = useDispatch();\n  const submitTask = (text) => dispatch(addTask(text));\n\n  const tasks = useSelector(state => state.tasks)\n  console.log(tasks)\n\n  let focusItem;\n\n  if (!tasks.length) {\n    focusItem = null;\n  } else {\n    if(tasks.filter(item => item.done === false)) {\n      focusItem = tasks.filter(item => item.done === false)\n    }\n  }\n\n  return (\n    <SafeAreaView style={ styles.container }>\n      { isFocusItem ?\n          <Timer\n            focusItem={ focusItem }\n            workTime={ workTime.work }\n            breakTime={ workTime.break }\n            setFocusItem={ submitTask }\n            setWorkTime={ setWorkTime }\n            setIsFocusItem={ setIsFocusItem }\n            isFocusItem={ isFocusItem }\n          />\n        :\n          <FocusItem \n            setTask={ submitTask }\n            setWorkTime={ setWorkTime }\n            setIsFocusItem={ setIsFocusItem }\n          />\n      }\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.primary,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});"]},"metadata":{},"sourceType":"module"}