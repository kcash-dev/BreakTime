{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport createCSSStyleSheet from \"./createCSSStyleSheet\";\nimport createCompileableStyle from \"./createCompileableStyle\";\nimport createOrderedCSSStyleSheet from \"./createOrderedCSSStyleSheet\";\nimport flattenArray from \"../../modules/flattenArray\";\nimport flattenStyle from \"./flattenStyle\";\nimport I18nManager from \"../I18nManager\";\nimport i18nStyle from \"./i18nStyle\";\nimport { atomic, classic, inline, stringifyValueWithProperty } from \"./compile\";\nimport initialRules from \"./initialRules\";\nimport modality from \"./modality\";\nimport { STYLE_ELEMENT_ID, STYLE_GROUPS } from \"./constants\";\nexport default function createStyleResolver() {\n  var inserted, sheet, cache;\n  var resolved = {\n    css: {},\n    ltr: {},\n    rtl: {},\n    rtlNoSwap: {}\n  };\n\n  var init = function init() {\n    inserted = {\n      css: {},\n      ltr: {},\n      rtl: {},\n      rtlNoSwap: {}\n    };\n    sheet = createOrderedCSSStyleSheet(createCSSStyleSheet(STYLE_ELEMENT_ID));\n    cache = {};\n    modality(function (rule) {\n      return sheet.insert(rule, STYLE_GROUPS.modality);\n    });\n    initialRules.forEach(function (rule) {\n      sheet.insert(rule, STYLE_GROUPS.reset);\n    });\n  };\n\n  init();\n\n  function addToCache(className, prop, value) {\n    if (!cache[prop]) {\n      cache[prop] = {};\n    }\n\n    cache[prop][value] = className;\n  }\n\n  function getClassName(prop, value) {\n    var val = stringifyValueWithProperty(value, prop);\n    return cache[prop] && cache[prop].hasOwnProperty(val) && cache[prop][val];\n  }\n\n  function _injectRegisteredStyle(id) {\n    var doLeftAndRightSwapInRTL = I18nManager.doLeftAndRightSwapInRTL,\n        isRTL = I18nManager.isRTL;\n    var dir = isRTL ? doLeftAndRightSwapInRTL ? 'rtl' : 'rtlNoSwap' : 'ltr';\n\n    if (!inserted[dir][id]) {\n      var style = createCompileableStyle(i18nStyle(flattenStyle(id)));\n      var results = atomic(style);\n      Object.keys(results).forEach(function (key) {\n        var _results$key = results[key],\n            identifier = _results$key.identifier,\n            property = _results$key.property,\n            rules = _results$key.rules,\n            value = _results$key.value;\n        addToCache(identifier, property, value);\n        rules.forEach(function (rule) {\n          var group = STYLE_GROUPS.custom[property] || STYLE_GROUPS.atomic;\n          sheet.insert(rule, group);\n        });\n      });\n      inserted[dir][id] = true;\n    }\n  }\n\n  function resolve(style, classList) {\n    var nextClassList = [];\n    var props = {};\n\n    if (!style && !classList) {\n      return props;\n    }\n\n    if (Array.isArray(classList)) {\n      flattenArray(classList).forEach(function (identifier) {\n        if (identifier) {\n          if (inserted.css[identifier] == null && resolved.css[identifier] != null) {\n            var item = resolved.css[identifier];\n            item.rules.forEach(function (rule) {\n              sheet.insert(rule, item.group);\n            });\n            inserted.css[identifier] = true;\n          }\n\n          nextClassList.push(identifier);\n        }\n      });\n    }\n\n    if (typeof style === 'number') {\n      _injectRegisteredStyle(style);\n\n      var key = createCacheKey(style);\n      props = _resolveStyle(style, key);\n    } else if (!Array.isArray(style)) {\n      props = _resolveStyle(style);\n    } else {\n      var flatArray = flattenArray(style);\n      var isArrayOfNumbers = true;\n      var cacheKey = '';\n\n      for (var i = 0; i < flatArray.length; i++) {\n        var id = flatArray[i];\n\n        if (typeof id !== 'number') {\n          isArrayOfNumbers = false;\n        } else {\n          if (isArrayOfNumbers) {\n            cacheKey += id + '-';\n          }\n\n          _injectRegisteredStyle(id);\n        }\n      }\n\n      var _key = isArrayOfNumbers ? createCacheKey(cacheKey) : null;\n\n      props = _resolveStyle(flatArray, _key);\n    }\n\n    nextClassList.push.apply(nextClassList, _toConsumableArray(props.classList));\n    var finalProps = {\n      className: classListToString(nextClassList),\n      classList: nextClassList\n    };\n\n    if (props.style) {\n      finalProps.style = props.style;\n    }\n\n    return finalProps;\n  }\n\n  function _resolveStyle(style, key) {\n    var doLeftAndRightSwapInRTL = I18nManager.doLeftAndRightSwapInRTL,\n        isRTL = I18nManager.isRTL;\n    var dir = isRTL ? doLeftAndRightSwapInRTL ? 'rtl' : 'rtlNoSwap' : 'ltr';\n\n    if (key != null && resolved[dir][key] != null) {\n      return resolved[dir][key];\n    }\n\n    var flatStyle = flattenStyle(style);\n    var localizedStyle = createCompileableStyle(i18nStyle(flatStyle));\n    var props = Object.keys(localizedStyle).sort().reduce(function (props, styleProp) {\n      var value = localizedStyle[styleProp];\n\n      if (value != null) {\n        var className = getClassName(styleProp, value);\n\n        if (className) {\n          props.classList.push(className);\n        } else {\n          if (styleProp === 'animationKeyframes' || styleProp === 'placeholderTextColor' || styleProp === 'pointerEvents' || styleProp === 'scrollbarWidth') {\n            var a = atomic(_defineProperty({}, styleProp, value));\n            Object.keys(a).forEach(function (key) {\n              var _a$key = a[key],\n                  identifier = _a$key.identifier,\n                  rules = _a$key.rules;\n              props.classList.push(identifier);\n              rules.forEach(function (rule) {\n                sheet.insert(rule, STYLE_GROUPS.atomic);\n              });\n            });\n          } else {\n            if (!props.style) {\n              props.style = {};\n            }\n\n            props.style[styleProp] = value;\n          }\n        }\n      }\n\n      return props;\n    }, {\n      classList: []\n    });\n\n    if (props.style) {\n      props.style = inline(props.style);\n    }\n\n    if (key != null) {\n      resolved[dir][key] = props;\n    }\n\n    return props;\n  }\n\n  return {\n    getStyleSheet: function getStyleSheet() {\n      var textContent = sheet.getTextContent();\n\n      if (!canUseDOM) {\n        init();\n      }\n\n      return {\n        id: STYLE_ELEMENT_ID,\n        textContent: textContent\n      };\n    },\n    createCSS: function createCSS(rules, group) {\n      var result = {};\n      Object.keys(rules).forEach(function (name) {\n        var style = rules[name];\n        var compiled = classic(style, name);\n        Object.keys(compiled).forEach(function (key) {\n          var _compiled$key = compiled[key],\n              identifier = _compiled$key.identifier,\n              rules = _compiled$key.rules;\n          resolved.css[identifier] = {\n            group: group || STYLE_GROUPS.classic,\n            rules: rules\n          };\n          result[name] = identifier;\n        });\n      });\n      return result;\n    },\n    resolve: resolve,\n    sheet: sheet\n  };\n}\n\nvar createCacheKey = function createCacheKey(id) {\n  var prefix = 'rn';\n  return prefix + \"-\" + id;\n};\n\nvar classListToString = function classListToString(list) {\n  return list.join(' ').trim();\n};","map":{"version":3,"sources":["/Users/kylecash/Documents/GitHub/BreakTime/node_modules/react-native-web/src/exports/StyleSheet/createStyleResolver.js"],"names":["canUseDOM","createCSSStyleSheet","createCompileableStyle","createOrderedCSSStyleSheet","flattenArray","flattenStyle","I18nManager","i18nStyle","atomic","classic","inline","stringifyValueWithProperty","initialRules","modality","STYLE_ELEMENT_ID","STYLE_GROUPS","createStyleResolver","inserted","sheet","cache","resolved","css","ltr","rtl","rtlNoSwap","init","rule","insert","forEach","reset","addToCache","className","prop","value","getClassName","val","hasOwnProperty","_injectRegisteredStyle","id","doLeftAndRightSwapInRTL","isRTL","dir","style","results","Object","keys","key","identifier","property","rules","group","custom","resolve","classList","nextClassList","props","Array","isArray","item","push","createCacheKey","_resolveStyle","flatArray","isArrayOfNumbers","cacheKey","i","length","finalProps","classListToString","flatStyle","localizedStyle","sort","reduce","styleProp","a","getStyleSheet","textContent","getTextContent","createCSS","result","name","compiled","prefix","list","join","trim"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @noflow\n */\n\n/**\n * WARNING: changes to this file in particular can cause significant changes to\n * the results of render performance benchmarks.\n */\n\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport createCSSStyleSheet from './createCSSStyleSheet';\nimport createCompileableStyle from './createCompileableStyle';\nimport createOrderedCSSStyleSheet from './createOrderedCSSStyleSheet';\nimport flattenArray from '../../modules/flattenArray';\nimport flattenStyle from './flattenStyle';\nimport I18nManager from '../I18nManager';\nimport i18nStyle from './i18nStyle';\nimport { atomic, classic, inline, stringifyValueWithProperty } from './compile';\nimport initialRules from './initialRules';\nimport modality from './modality';\nimport { STYLE_ELEMENT_ID, STYLE_GROUPS } from './constants';\n\nexport default function createStyleResolver() {\n  let inserted, sheet, cache;\n  const resolved = { css: {}, ltr: {}, rtl: {}, rtlNoSwap: {} };\n\n  const init = () => {\n    inserted = { css: {}, ltr: {}, rtl: {}, rtlNoSwap: {} };\n    sheet = createOrderedCSSStyleSheet(createCSSStyleSheet(STYLE_ELEMENT_ID));\n    cache = {};\n    modality(rule => sheet.insert(rule, STYLE_GROUPS.modality));\n    initialRules.forEach(rule => {\n      sheet.insert(rule, STYLE_GROUPS.reset);\n    });\n  };\n\n  init();\n\n  function addToCache(className, prop, value) {\n    if (!cache[prop]) {\n      cache[prop] = {};\n    }\n    cache[prop][value] = className;\n  }\n\n  function getClassName(prop, value) {\n    const val = stringifyValueWithProperty(value, prop);\n    return cache[prop] && cache[prop].hasOwnProperty(val) && cache[prop][val];\n  }\n\n  function _injectRegisteredStyle(id) {\n    const { doLeftAndRightSwapInRTL, isRTL } = I18nManager;\n    const dir = isRTL ? (doLeftAndRightSwapInRTL ? 'rtl' : 'rtlNoSwap') : 'ltr';\n    if (!inserted[dir][id]) {\n      const style = createCompileableStyle(i18nStyle(flattenStyle(id)));\n      const results = atomic(style);\n      Object.keys(results).forEach(key => {\n        const { identifier, property, rules, value } = results[key];\n        addToCache(identifier, property, value);\n        rules.forEach(rule => {\n          const group = STYLE_GROUPS.custom[property] || STYLE_GROUPS.atomic;\n          sheet.insert(rule, group);\n        });\n      });\n      inserted[dir][id] = true;\n    }\n  }\n\n  /**\n   * Resolves a React Native style object to DOM attributes\n   */\n  function resolve(style, classList) {\n    const nextClassList = [];\n    let props = {};\n\n    if (!style && !classList) {\n      return props;\n    }\n\n    if (Array.isArray(classList)) {\n      flattenArray(classList).forEach(identifier => {\n        if (identifier) {\n          if (inserted.css[identifier] == null && resolved.css[identifier] != null) {\n            const item = resolved.css[identifier];\n            item.rules.forEach(rule => {\n              sheet.insert(rule, item.group);\n            });\n            inserted.css[identifier] = true;\n          }\n\n          nextClassList.push(identifier);\n        }\n      });\n    }\n\n    if (typeof style === 'number') {\n      // fast and cachable\n      _injectRegisteredStyle(style);\n      const key = createCacheKey(style);\n      props = _resolveStyle(style, key);\n    } else if (!Array.isArray(style)) {\n      // resolve a plain RN style object\n      props = _resolveStyle(style);\n    } else {\n      // flatten the style array\n      // cache resolved props when all styles are registered\n      // otherwise fallback to resolving\n      const flatArray = flattenArray(style);\n      let isArrayOfNumbers = true;\n      let cacheKey = '';\n      for (let i = 0; i < flatArray.length; i++) {\n        const id = flatArray[i];\n        if (typeof id !== 'number') {\n          isArrayOfNumbers = false;\n        } else {\n          if (isArrayOfNumbers) {\n            cacheKey += id + '-';\n          }\n          _injectRegisteredStyle(id);\n        }\n      }\n      const key = isArrayOfNumbers ? createCacheKey(cacheKey) : null;\n      props = _resolveStyle(flatArray, key);\n    }\n\n    nextClassList.push(...props.classList);\n\n    const finalProps = {\n      className: classListToString(nextClassList),\n      classList: nextClassList\n    };\n    if (props.style) {\n      finalProps.style = props.style;\n    }\n\n    return finalProps;\n  }\n\n  /**\n   * Resolves a React Native style object\n   */\n  function _resolveStyle(style, key) {\n    const { doLeftAndRightSwapInRTL, isRTL } = I18nManager;\n    const dir = isRTL ? (doLeftAndRightSwapInRTL ? 'rtl' : 'rtlNoSwap') : 'ltr';\n\n    // faster: memoized\n    if (key != null && resolved[dir][key] != null) {\n      return resolved[dir][key];\n    }\n\n    const flatStyle = flattenStyle(style);\n    const localizedStyle = createCompileableStyle(i18nStyle(flatStyle));\n\n    // slower: convert style object to props and cache\n    const props = Object.keys(localizedStyle)\n      .sort()\n      .reduce(\n        (props, styleProp) => {\n          const value = localizedStyle[styleProp];\n          if (value != null) {\n            const className = getClassName(styleProp, value);\n            if (className) {\n              props.classList.push(className);\n            } else {\n              // Certain properties and values are not transformed by 'createReactDOMStyle' as they\n              // require more complex transforms into multiple CSS rules. Here we assume that StyleManager\n              // can bind these styles to a className, and prevent them becoming invalid inline-styles.\n              if (\n                styleProp === 'animationKeyframes' ||\n                styleProp === 'placeholderTextColor' ||\n                styleProp === 'pointerEvents' ||\n                styleProp === 'scrollbarWidth'\n              ) {\n                const a = atomic({ [styleProp]: value });\n                Object.keys(a).forEach(key => {\n                  const { identifier, rules } = a[key];\n                  props.classList.push(identifier);\n                  rules.forEach(rule => {\n                    sheet.insert(rule, STYLE_GROUPS.atomic);\n                  });\n                });\n              } else {\n                if (!props.style) {\n                  props.style = {};\n                }\n                // 4x slower render\n                props.style[styleProp] = value;\n              }\n            }\n          }\n          return props;\n        },\n        { classList: [] }\n      );\n\n    if (props.style) {\n      props.style = inline(props.style);\n    }\n\n    if (key != null) {\n      resolved[dir][key] = props;\n    }\n\n    return props;\n  }\n\n  return {\n    getStyleSheet() {\n      const textContent = sheet.getTextContent();\n      // Reset state on the server so critical css is always the result\n      if (!canUseDOM) {\n        init();\n      }\n\n      return {\n        id: STYLE_ELEMENT_ID,\n        textContent\n      };\n    },\n    createCSS(rules, group) {\n      const result = {};\n      Object.keys(rules).forEach(name => {\n        const style = rules[name];\n        const compiled = classic(style, name);\n\n        Object.keys(compiled).forEach(key => {\n          const { identifier, rules } = compiled[key];\n          resolved.css[identifier] = { group: group || STYLE_GROUPS.classic, rules };\n          result[name] = identifier;\n        });\n      });\n      return result;\n    },\n    resolve,\n    sheet\n  };\n}\n\n/**\n * Misc helpers\n */\nconst createCacheKey = id => {\n  const prefix = 'rn';\n  return `${prefix}-${id}`;\n};\n\nconst classListToString = list => list.join(' ').trim();\n"]},"metadata":{},"sourceType":"module"}