{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/kylecash/Documents/GitHub/BreakTime/src/screens/LoginScreen.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { auth, handleSignup, handleLogin } from \"../api/Firebase\";\nimport { ButtonComp } from \"../components/Button\";\nimport { colors } from \"../utils/Colors\";\nimport { fontSizes, spacing } from \"../utils/Sizes\";\nimport { SimpleLineIcons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nexport var LoginScreen = function LoginScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      firstName = _useState6[0],\n      setFirstName = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      lastName = _useState8[0],\n      setLastName = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isRegistered = _useState10[0],\n      setIsRegistered = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isLoggedIn = _useState12[0],\n      setIsLoggedIn = _useState12[1];\n\n  var navigation = useNavigation();\n  useEffect(function () {\n    var unsubscribe = auth.onAuthStateChanged(function (user) {\n      if (user) {\n        setIsLoggedIn(true);\n        navigation.navigate('ProfileScreen');\n      }\n    });\n    return unsubscribe;\n  }, []);\n\n  var login = function login() {\n    handleLogin(email, password);\n  };\n\n  var signup = function signup() {\n    handleSignup(email, password, firstName, lastName);\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: \"padding\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, isRegistered ? React.createElement(View, {\n    style: styles.inputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"User Login\"), React.createElement(View, {\n    style: styles.parent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Email\",\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    style: styles.input,\n    autoCapitalize: \"none\",\n    ref: function ref(input) {\n      textInput = input;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }), React.createElement(Pressable, {\n    style: function style(_ref) {\n      var pressed = _ref.pressed;\n      return {\n        opacity: pressed ? 0.5 : 1\n      };\n    },\n    onPress: function onPress() {\n      return setEmail('');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, React.createElement(SimpleLineIcons, {\n    style: styles.icon,\n    name: \"close\",\n    size: 24,\n    color: \"black\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }))), React.createElement(View, {\n    style: styles.parent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Password\",\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    style: styles.input,\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }), React.createElement(Pressable, {\n    style: function style(_ref2) {\n      var pressed = _ref2.pressed;\n      return {\n        opacity: pressed ? 0.5 : 1\n      };\n    },\n    onPress: function onPress() {\n      return setPassword('');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, React.createElement(SimpleLineIcons, {\n    style: styles.icon,\n    name: \"close\",\n    size: 24,\n    color: \"black\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }))), React.createElement(ButtonComp, {\n    name: \"Login\",\n    callback: login,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }), React.createElement(Pressable, {\n    style: function style(_ref3) {\n      var pressed = _ref3.pressed;\n      return {\n        opacity: pressed ? 0.5 : 1\n      };\n    },\n    onPress: function onPress() {\n      return setIsRegistered(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.registeredText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, \"Not registered yet? Click here to register.\"))) : React.createElement(View, {\n    style: styles.inputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 16\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 20\n    }\n  }, \"User Registration\"), React.createElement(View, {\n    style: styles.parent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Email\",\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    style: styles.input,\n    autoCapitalize: \"none\",\n    ref: function ref(input) {\n      textInput = input;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }), React.createElement(Pressable, {\n    style: function style(_ref4) {\n      var pressed = _ref4.pressed;\n      return {\n        opacity: pressed ? 0.5 : 1\n      };\n    },\n    onPress: function onPress() {\n      return setEmail('');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }, React.createElement(SimpleLineIcons, {\n    style: styles.icon,\n    name: \"close\",\n    size: 24,\n    color: \"black\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 29\n    }\n  }))), React.createElement(View, {\n    style: styles.parent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Password\",\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    style: styles.input,\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }\n  }), React.createElement(Pressable, {\n    style: function style(_ref5) {\n      var pressed = _ref5.pressed;\n      return {\n        opacity: pressed ? 0.5 : 1\n      };\n    },\n    onPress: function onPress() {\n      return setPassword('');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }, React.createElement(SimpleLineIcons, {\n    style: styles.icon,\n    name: \"close\",\n    size: 24,\n    color: \"black\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 29\n    }\n  }))), React.createElement(View, {\n    style: styles.parent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"First name\",\n    value: firstName,\n    onChangeText: function onChangeText(text) {\n      return setFirstName(text);\n    },\n    style: styles.input,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }), React.createElement(Pressable, {\n    style: function style(_ref6) {\n      var pressed = _ref6.pressed;\n      return {\n        opacity: pressed ? 0.5 : 1\n      };\n    },\n    onPress: function onPress() {\n      return setFirstName('');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 25\n    }\n  }, React.createElement(SimpleLineIcons, {\n    style: styles.icon,\n    name: \"close\",\n    size: 24,\n    color: \"black\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 29\n    }\n  }))), React.createElement(View, {\n    style: styles.parent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Last Name\",\n    value: lastName,\n    onChangeText: function onChangeText(text) {\n      return setLastName(text);\n    },\n    style: styles.input,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 25\n    }\n  }), React.createElement(Pressable, {\n    style: function style(_ref7) {\n      var pressed = _ref7.pressed;\n      return {\n        opacity: pressed ? 0.5 : 1\n      };\n    },\n    onPress: function onPress() {\n      return setLastName('');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 25\n    }\n  }, React.createElement(SimpleLineIcons, {\n    style: styles.icon,\n    name: \"close\",\n    size: 24,\n    color: \"black\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 29\n    }\n  }))), React.createElement(ButtonComp, {\n    name: \"Register\",\n    callback: signup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 21\n    }\n  }), React.createElement(Pressable, {\n    style: function style(_ref8) {\n      var pressed = _ref8.pressed;\n      return {\n        opacity: pressed ? 0.5 : 1\n      };\n    },\n    onPress: function onPress() {\n      return setIsRegistered(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.registeredText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 25\n    }\n  }, \"Already registered? Click here to log in.\"))));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: colors.primary\n  },\n  registeredText: {\n    textAlign: 'center',\n    marginTop: 20\n  },\n  inputContainer: {\n    width: '80%',\n    shadowColor: colors.black,\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    shadowOpacity: 0.34,\n    shadowRadius: 6.27,\n    elevation: 10\n  },\n  input: {\n    padding: spacing.md,\n    fontSize: fontSizes.md,\n    width: '90%'\n  },\n  parent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: colors.white,\n    borderRadius: 8,\n    justifyContent: 'space-between',\n    marginVertical: spacing.md,\n    width: '100%'\n  },\n  icon: {\n    right: 5,\n    opacity: 0.5\n  },\n  header: {\n    fontSize: fontSizes.xxl,\n    textAlign: 'center',\n    bottom: 20\n  }\n});","map":{"version":3,"sources":["/Users/kylecash/Documents/GitHub/BreakTime/src/screens/LoginScreen.js"],"names":["React","useEffect","useState","auth","handleSignup","handleLogin","ButtonComp","colors","fontSizes","spacing","SimpleLineIcons","useNavigation","LoginScreen","email","setEmail","password","setPassword","firstName","setFirstName","lastName","setLastName","isRegistered","setIsRegistered","isLoggedIn","setIsLoggedIn","navigation","unsubscribe","onAuthStateChanged","user","navigate","login","signup","styles","container","inputContainer","header","parent","text","input","textInput","pressed","opacity","icon","registeredText","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","primary","textAlign","marginTop","width","shadowColor","black","shadowOffset","height","shadowOpacity","shadowRadius","elevation","padding","md","fontSize","flexDirection","white","borderRadius","marginVertical","right","xxl","bottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { KeyboardAvoidingView, View, StyleSheet, Text, TextInput, Pressable, Alert } from 'react-native'\nimport { auth, handleSignup, handleLogin } from '../api/Firebase'\nimport { ButtonComp } from '../components/Button';\nimport { colors } from '../utils/Colors';\nimport { fontSizes, spacing } from '../utils/Sizes';\nimport { SimpleLineIcons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\n\nexport const LoginScreen = () => {\n    const [ email, setEmail ] = useState('')\n    const [ password, setPassword ] = useState('')\n    const [ firstName, setFirstName ] = useState('')\n    const [ lastName, setLastName ] = useState('')\n    const [ isRegistered, setIsRegistered ] = useState(true);\n    const [ isLoggedIn, setIsLoggedIn ] = useState(false)\n\n    const navigation = useNavigation();\n\n    useEffect(() => {\n        const unsubscribe = auth\n        .onAuthStateChanged(user => {\n            if (user) {\n                setIsLoggedIn(true)\n                navigation.navigate('ProfileScreen')\n            }\n        })\n\n        return unsubscribe;\n    }, [])\n\n    const login = () => {\n        handleLogin(email, password)\n    }\n\n    const signup = () => {\n        handleSignup(email, password, firstName, lastName)\n    }\n\n    return (\n        <KeyboardAvoidingView\n            style={ styles.container }\n            behavior=\"padding\"\n        >\n           {\n               isRegistered ? \n               <View style={ styles.inputContainer }>\n                <Text style={ styles.header }>User Login</Text>\n                <View style={ styles.parent }>\n                    <TextInput\n                        placeholder=\"Email\"\n                        value={ email }\n                        onChangeText={ text => setEmail(text) }\n                        style={ styles.input }\n                        autoCapitalize=\"none\"\n                        ref={input => { textInput = input }} \n                    />\n                    <Pressable\n                        style={({ pressed }) => ({\n                            opacity: pressed ?\n                                0.5\n                                :\n                                1\n                        })}\n                        onPress={() => setEmail('')}\n                    >\n                        <SimpleLineIcons style={ styles.icon } name=\"close\" size={24} color=\"black\" />\n                    </Pressable>\n                </View>\n                <View style={ styles.parent }>\n                    <TextInput\n                        placeholder=\"Password\"\n                        value={ password }\n                        onChangeText={ text => setPassword(text) }\n                        style={ styles.input }\n                        secureTextEntry\n                    />\n                    <Pressable\n                        style={({ pressed }) => ({\n                            opacity: pressed ?\n                                0.5\n                                :\n                                1\n                        })}\n                        onPress={() => setPassword('')}\n                    >\n                        <SimpleLineIcons style={ styles.icon } name=\"close\" size={24} color=\"black\" />\n                    </Pressable>\n                </View>\n                <ButtonComp name=\"Login\" callback={ login }/>\n                <Pressable\n                    style={({ pressed }) => ({\n                        opacity: pressed ?\n                            0.5\n                            :\n                            1\n                    })}\n                    onPress={() => setIsRegistered(false)}\n                >\n                    <Text style={ styles.registeredText }>Not registered yet? Click here to register.</Text>\n                </Pressable>\n               </View>\n               :\n               <View style={ styles.inputContainer }>\n                   <Text style={ styles.header }>User Registration</Text>\n                    <View style={ styles.parent }>\n                        <TextInput\n                            placeholder=\"Email\"\n                            value={ email }\n                            onChangeText={ text => setEmail(text) }\n                            style={ styles.input }\n                            autoCapitalize=\"none\"\n                            ref={input => { textInput = input }} \n                        />\n                        <Pressable\n                            style={({ pressed }) => ({\n                                opacity: pressed ?\n                                    0.5\n                                    :\n                                    1\n                            })}\n                            onPress={() => setEmail('')}\n                        >\n                            <SimpleLineIcons style={ styles.icon } name=\"close\" size={24} color=\"black\" />\n                        </Pressable>\n                    </View>\n                    <View style={ styles.parent }>\n                        <TextInput\n                            placeholder=\"Password\"\n                            value={ password }\n                            onChangeText={ text => setPassword(text) }\n                            style={ styles.input }\n                            secureTextEntry\n                        />\n                        <Pressable\n                            style={({ pressed }) => ({\n                                opacity: pressed ?\n                                    0.5\n                                    :\n                                    1\n                            })}\n                            onPress={() => setPassword('')}\n                        >\n                            <SimpleLineIcons style={ styles.icon } name=\"close\" size={24} color=\"black\" />\n                        </Pressable>\n                    </View>\n                    <View style={ styles.parent }>\n                        <TextInput\n                            placeholder=\"First name\"\n                            value={ firstName }\n                            onChangeText={ text => setFirstName(text) }\n                            style={ styles.input }\n                        />\n                        <Pressable\n                            style={({ pressed }) => ({\n                                opacity: pressed ?\n                                    0.5\n                                    :\n                                    1\n                            })}\n                            onPress={() => setFirstName('')}\n                        >\n                            <SimpleLineIcons style={ styles.icon } name=\"close\" size={24} color=\"black\" />\n                        </Pressable>\n                    </View>\n                    <View style={ styles.parent }>\n                        <TextInput\n                            placeholder=\"Last Name\"\n                            value={ lastName }\n                            onChangeText={ text => setLastName(text) }\n                            style={ styles.input }\n                        />\n                        <Pressable\n                            style={({ pressed }) => ({\n                                opacity: pressed ?\n                                    0.5\n                                    :\n                                    1\n                            })}\n                            onPress={() => setLastName('')}\n                        >\n                            <SimpleLineIcons style={ styles.icon } name=\"close\" size={24} color=\"black\" />\n                        </Pressable>\n                    </View>\n                    <ButtonComp name=\"Register\" callback={ signup }/>\n                    <Pressable\n                        style={({ pressed }) => ({\n                            opacity: pressed ?\n                                0.5\n                                :\n                                1\n                        })}\n                        onPress={() => setIsRegistered(true)}\n                    >\n                        <Text style={ styles.registeredText }>Already registered? Click here to log in.</Text>\n                    </Pressable>\n               </View>\n           }\n        </KeyboardAvoidingView>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: colors.primary\n    },\n    registeredText: {\n        textAlign: 'center',\n        marginTop: 20\n    },\n    inputContainer: {\n        width: '80%',\n        shadowColor: colors.black,\n        shadowOffset: {\n            width: 0,\n            height: 5,\n        },\n        shadowOpacity: 0.34,\n        shadowRadius: 6.27,\n\n        elevation: 10,\n    },\n    input: {\n        padding: spacing.md,\n        fontSize: fontSizes.md,\n        width: '90%'\n    },\n    parent: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        backgroundColor: colors.white,\n        borderRadius: 8,\n        justifyContent: 'space-between',\n        marginVertical: spacing.md,\n        width: '100%'\n    },\n    icon: {\n        right: 5,\n        opacity: 0.5\n    },\n    header: {\n        fontSize: fontSizes.xxl,\n        textAlign: 'center',\n        bottom: 20\n    }\n})\n"]},"metadata":{},"sourceType":"module"}