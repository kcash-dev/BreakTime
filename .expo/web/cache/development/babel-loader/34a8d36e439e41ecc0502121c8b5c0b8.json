{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = createTheming;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _deepmerge = _interopRequireDefault(require(\"deepmerge\"));\n\nvar _createThemeProvider = _interopRequireDefault(require(\"./createThemeProvider\"));\n\nvar _createWithTheme = _interopRequireDefault(require(\"./createWithTheme\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction createTheming(defaultTheme) {\n  var ThemeContext = React.createContext(defaultTheme);\n  var ThemeProvider = (0, _createThemeProvider.default)(defaultTheme, ThemeContext);\n  var withTheme = (0, _createWithTheme.default)(ThemeProvider, ThemeContext);\n\n  var useTheme = function useTheme(overrides) {\n    var theme = React.useContext(ThemeContext);\n    var result = React.useMemo(function () {\n      return theme && overrides ? (0, _deepmerge.default)(theme, overrides) : theme || overrides;\n    }, [theme, overrides]);\n    return result;\n  };\n\n  return {\n    ThemeContext: ThemeContext,\n    ThemeProvider: ThemeProvider,\n    withTheme: withTheme,\n    useTheme: useTheme\n  };\n}","map":{"version":3,"sources":["../src/createTheming.js"],"names":["ThemeContext","React","ThemeProvider","withTheme","useTheme","theme","result"],"mappings":";;;;;AAEA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,UAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,WAAA,CAAA,CAAA;;AACA,IAAA,oBAAA,GAAA,sBAAA,CAAA,OAAA,yBAAA,CAAA;;AACA,IAAA,gBAAA,GAAA,sBAAA,CAAA,OAAA,qBAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWe,SAAA,aAAA,CAAA,YAAA,EAEG;AAChB,MAAMA,YAA8B,GAAGC,KAAK,CAALA,aAAAA,CAAvC,YAAuCA,CAAvC;AAEA,MAAMC,aAAmC,GAAG,CAAA,GAAA,oBAAA,CAAA,OAAA,EAAA,YAAA,EAA5C,YAA4C,CAA5C;AAKA,MAAMC,SAA2B,GAAG,CAAA,GAAA,gBAAA,CAAA,OAAA,EAAA,aAAA,EAApC,YAAoC,CAApC;;AAKA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAA,SAAA,EAAkC;AACjD,QAAMC,KAAK,GAAGJ,KAAK,CAALA,UAAAA,CAAd,YAAcA,CAAd;AACA,QAAMK,MAAM,GAAG,KAAK,CAAL,OAAA,CACb,YAAA;AAAA,aACED,KAAK,IAALA,SAAAA,GAAqB,CAAA,GAAA,UAAA,CAAA,OAAA,EAAA,KAAA,EAArBA,SAAqB,CAArBA,GAAmDA,KAAK,IAD1D,SAAA;AADa,KAAA,EAGb,CAAA,KAAA,EAHF,SAGE,CAHa,CAAf;AAMA,WAAA,MAAA;AARF,GAAA;;AAWA,SAAO;AACLL,IAAAA,YAAY,EADP,YAAA;AAELE,IAAAA,aAAa,EAFR,aAAA;AAGLC,IAAAA,SAAS,EAHJ,SAAA;AAILC,IAAAA,QAAQ,EAARA;AAJK,GAAP;AAMD","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport deepmerge from 'deepmerge';\nimport createThemeProvider from './createThemeProvider';\nimport createWithTheme from './createWithTheme';\nimport type { WithThemeType } from './createWithTheme';\nimport type { ThemeProviderType } from './createThemeProvider';\nimport type { $DeepShape } from './types';\n\nexport type ThemingType<T> = {\n  ThemeProvider: ThemeProviderType<T>,\n  withTheme: WithThemeType<T>,\n  useTheme(overrides?: $DeepShape<T>): T,\n};\n\nexport default function createTheming<T: Object>(\n  defaultTheme: T\n): ThemingType<T> {\n  const ThemeContext: React.Context<T> = React.createContext(defaultTheme);\n\n  const ThemeProvider: ThemeProviderType<T> = createThemeProvider(\n    defaultTheme,\n    ThemeContext\n  );\n\n  const withTheme: WithThemeType<T> = createWithTheme(\n    ThemeProvider,\n    ThemeContext\n  );\n\n  const useTheme = (overrides?: $DeepShape<T>): T => {\n    const theme = React.useContext(ThemeContext);\n    const result = React.useMemo(\n      () =>\n        theme && overrides ? deepmerge(theme, overrides) : theme || overrides,\n      [theme, overrides]\n    );\n\n    return result;\n  };\n\n  return {\n    ThemeContext,\n    ThemeProvider,\n    withTheme,\n    useTheme,\n  };\n}\n"]},"metadata":{},"sourceType":"script"}