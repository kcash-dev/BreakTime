{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"animationKeyframes\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport createReactDOMStyle from \"./createReactDOMStyle\";\nimport hash from \"../../vendor/hash\";\nimport hyphenateStyleName from 'hyphenate-style-name';\nimport normalizeValueWithProperty from \"./normalizeValueWithProperty\";\nimport prefixStyles, { prefixInlineStyles } from \"../../modules/prefixStyles\";\nvar cache = {\n  get: function get(property, value) {\n    if (cache[property] != null && cache[property].hasOwnProperty(value) && cache[property][value] != null) {\n      return cache[property][value];\n    }\n  },\n  set: function set(property, value, object) {\n    if (cache[property] == null) {\n      cache[property] = {};\n    }\n\n    return cache[property][value] = object;\n  }\n};\nexport function atomic(style) {\n  return Object.keys(style).sort().reduce(function (acc, property) {\n    var value = style[property];\n\n    if (value != null) {\n      var valueString = stringifyValueWithProperty(value, property);\n      var cachedResult = cache.get(property, valueString);\n\n      if (cachedResult != null) {\n        var identifier = cachedResult.identifier;\n        acc[identifier] = cachedResult;\n      } else {\n        var _identifier = createIdentifier('r', property, value);\n\n        var rules = createAtomicRules(_identifier, property, value);\n\n        var _cachedResult = cache.set(property, valueString, {\n          property: property,\n          value: stringifyValueWithProperty(value, property),\n          identifier: _identifier,\n          rules: rules\n        });\n\n        acc[_identifier] = _cachedResult;\n      }\n    }\n\n    return acc;\n  }, {});\n}\nexport function classic(style, name) {\n  var identifier = createIdentifier('css', name, style);\n\n  var animationKeyframes = style.animationKeyframes,\n      rest = _objectWithoutProperties(style, _excluded);\n\n  var rules = [];\n  var selector = \".\" + identifier;\n  var animationName;\n\n  if (animationKeyframes != null) {\n    var _processKeyframesValu = processKeyframesValue(animationKeyframes),\n        animationNames = _processKeyframesValu.animationNames,\n        keyframesRules = _processKeyframesValu.rules;\n\n    animationName = animationNames.join(',');\n    rules.push.apply(rules, _toConsumableArray(keyframesRules));\n  }\n\n  var block = createDeclarationBlock(_objectSpread(_objectSpread({}, rest), {}, {\n    animationName: animationName\n  }));\n  rules.push(\"\" + selector + block);\n  return _defineProperty({}, identifier, {\n    identifier: identifier,\n    rules: rules\n  });\n}\nexport function inline(style) {\n  return prefixInlineStyles(createReactDOMStyle(style));\n}\nexport function stringifyValueWithProperty(value, property) {\n  var normalizedValue = normalizeValueWithProperty(value, property);\n  return typeof normalizedValue !== 'string' ? JSON.stringify(normalizedValue || '') : normalizedValue;\n}\n\nfunction createAtomicRules(identifier, property, value) {\n  var rules = [];\n  var selector = \".\" + identifier;\n\n  switch (property) {\n    case 'animationKeyframes':\n      {\n        var _processKeyframesValu2 = processKeyframesValue(value),\n            animationNames = _processKeyframesValu2.animationNames,\n            keyframesRules = _processKeyframesValu2.rules;\n\n        var block = createDeclarationBlock({\n          animationName: animationNames.join(',')\n        });\n        rules.push.apply(rules, [\"\" + selector + block].concat(_toConsumableArray(keyframesRules)));\n        break;\n      }\n\n    case 'placeholderTextColor':\n      {\n        var _block = createDeclarationBlock({\n          color: value,\n          opacity: 1\n        });\n\n        rules.push(selector + \"::-webkit-input-placeholder\" + _block, selector + \"::-moz-placeholder\" + _block, selector + \":-ms-input-placeholder\" + _block, selector + \"::placeholder\" + _block);\n        break;\n      }\n\n    case 'pointerEvents':\n      {\n        var finalValue = value;\n\n        if (value === 'auto' || value === 'box-only') {\n          finalValue = 'auto!important';\n\n          if (value === 'box-only') {\n            var _block3 = createDeclarationBlock(_defineProperty({}, property, 'none'));\n\n            rules.push(selector + \">*\" + _block3);\n          }\n        } else if (value === 'none' || value === 'box-none') {\n          finalValue = 'none!important';\n\n          if (value === 'box-none') {\n            var _block4 = createDeclarationBlock(_defineProperty({}, property, 'auto'));\n\n            rules.push(selector + \">*\" + _block4);\n          }\n        }\n\n        var _block2 = createDeclarationBlock(_defineProperty({}, property, finalValue));\n\n        rules.push(\"\" + selector + _block2);\n        break;\n      }\n\n    case 'scrollbarWidth':\n      {\n        if (value === 'none') {\n          rules.push(selector + \"::-webkit-scrollbar{display:none}\");\n        }\n\n        var _block5 = createDeclarationBlock(_defineProperty({}, property, value));\n\n        rules.push(\"\" + selector + _block5);\n        break;\n      }\n\n    default:\n      {\n        var _block6 = createDeclarationBlock(_defineProperty({}, property, value));\n\n        rules.push(\"\" + selector + _block6);\n        break;\n      }\n  }\n\n  return rules;\n}\n\nfunction createDeclarationBlock(style) {\n  var domStyle = prefixStyles(createReactDOMStyle(style));\n  var declarationsString = Object.keys(domStyle).map(function (property) {\n    var value = domStyle[property];\n    var prop = hyphenateStyleName(property);\n\n    if (Array.isArray(value)) {\n      return value.map(function (v) {\n        return prop + \":\" + v;\n      }).join(';');\n    } else {\n      return prop + \":\" + value;\n    }\n  }).sort().join(';');\n  return \"{\" + declarationsString + \";}\";\n}\n\nfunction createIdentifier(prefix, name, value) {\n  var hashedString = hash(name + stringifyValueWithProperty(value, name));\n  return process.env.NODE_ENV !== 'production' ? prefix + \"-\" + name + \"-\" + hashedString : prefix + \"-\" + hashedString;\n}\n\nfunction createKeyframes(keyframes) {\n  var prefixes = ['-webkit-', ''];\n  var identifier = createIdentifier('r', 'animation', keyframes);\n  var steps = '{' + Object.keys(keyframes).map(function (stepName) {\n    var rule = keyframes[stepName];\n    var block = createDeclarationBlock(rule);\n    return \"\" + stepName + block;\n  }).join('') + '}';\n  var rules = prefixes.map(function (prefix) {\n    return \"@\" + prefix + \"keyframes \" + identifier + steps;\n  });\n  return {\n    identifier: identifier,\n    rules: rules\n  };\n}\n\nfunction processKeyframesValue(keyframesValue) {\n  if (typeof keyframesValue === 'number') {\n    throw new Error(\"Invalid CSS keyframes type: \" + typeof keyframesValue);\n  }\n\n  var animationNames = [];\n  var rules = [];\n  var value = Array.isArray(keyframesValue) ? keyframesValue : [keyframesValue];\n  value.forEach(function (keyframes) {\n    if (typeof keyframes === 'string') {\n      animationNames.push(keyframes);\n    } else {\n      var _createKeyframes = createKeyframes(keyframes),\n          identifier = _createKeyframes.identifier,\n          keyframesRules = _createKeyframes.rules;\n\n      animationNames.push(identifier);\n      rules.push.apply(rules, _toConsumableArray(keyframesRules));\n    }\n  });\n  return {\n    animationNames: animationNames,\n    rules: rules\n  };\n}","map":{"version":3,"sources":["/Users/kylecash/Documents/GitHub/BreakTime/node_modules/react-native-web/src/exports/StyleSheet/compile.js"],"names":["createReactDOMStyle","hash","hyphenateStyleName","normalizeValueWithProperty","prefixStyles","prefixInlineStyles","cache","get","property","value","hasOwnProperty","set","object","atomic","style","Object","keys","sort","reduce","acc","valueString","stringifyValueWithProperty","cachedResult","identifier","createIdentifier","rules","createAtomicRules","classic","name","animationKeyframes","rest","selector","animationName","processKeyframesValue","animationNames","keyframesRules","join","push","block","createDeclarationBlock","inline","normalizedValue","JSON","stringify","color","opacity","finalValue","domStyle","declarationsString","map","prop","Array","isArray","v","prefix","hashedString","process","env","NODE_ENV","createKeyframes","keyframes","prefixes","steps","stepName","rule","keyframesValue","Error","forEach"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n */\n\nimport createReactDOMStyle from './createReactDOMStyle';\nimport hash from '../../vendor/hash';\nimport hyphenateStyleName from 'hyphenate-style-name';\nimport normalizeValueWithProperty from './normalizeValueWithProperty';\nimport prefixStyles, { prefixInlineStyles } from '../../modules/prefixStyles';\n\ntype Value = Object | Array<any> | string | number;\ntype Style = { [key: string]: Value };\ntype Rule = string;\ntype Rules = Array<Rule>;\ntype RulesData = {|\n  property?: string,\n  value?: string,\n  identifier: string,\n  rules: Rules\n|};\ntype CompilerOutput = { [key: string]: RulesData };\n\nconst cache = {\n  get(property, value) {\n    if (\n      cache[property] != null &&\n      cache[property].hasOwnProperty(value) &&\n      cache[property][value] != null\n    ) {\n      return cache[property][value];\n    }\n  },\n  set(property, value, object) {\n    if (cache[property] == null) {\n      cache[property] = {};\n    }\n    return (cache[property][value] = object);\n  }\n};\n\n/**\n * Compile style to atomic CSS rules.\n */\nexport function atomic(style: Style): CompilerOutput {\n  return Object.keys(style)\n    .sort()\n    .reduce((acc, property) => {\n      const value = style[property];\n      if (value != null) {\n        const valueString = stringifyValueWithProperty(value, property);\n        const cachedResult = cache.get(property, valueString);\n        if (cachedResult != null) {\n          const { identifier } = cachedResult;\n          acc[identifier] = cachedResult;\n        } else {\n          const identifier = createIdentifier('r', property, value);\n          const rules = createAtomicRules(identifier, property, value);\n          const cachedResult = cache.set(property, valueString, {\n            property,\n            value: stringifyValueWithProperty(value, property),\n            identifier,\n            rules\n          });\n          acc[identifier] = cachedResult;\n        }\n      }\n      return acc;\n    }, {});\n}\n\n/**\n * Compile simple style object to classic CSS rules.\n * No support for 'placeholderTextColor', 'scrollbarWidth', or 'pointerEvents'.\n */\nexport function classic(style: Style, name: string): CompilerOutput {\n  const identifier = createIdentifier('css', name, style);\n  const { animationKeyframes, ...rest } = style;\n\n  const rules = [];\n  const selector = `.${identifier}`;\n  let animationName;\n  if (animationKeyframes != null) {\n    const { animationNames, rules: keyframesRules } = processKeyframesValue(animationKeyframes);\n    animationName = animationNames.join(',');\n    rules.push(...keyframesRules);\n  }\n  const block = createDeclarationBlock({ ...rest, animationName });\n  rules.push(`${selector}${block}`);\n\n  return { [identifier]: { identifier, rules } };\n}\n\n/**\n * Compile simple style object to inline DOM styles.\n * No support for 'animationKeyframes', 'placeholderTextColor', 'scrollbarWidth', or 'pointerEvents'.\n */\nexport function inline(style: Style) {\n  return prefixInlineStyles(createReactDOMStyle(style));\n}\n\n/**\n * Create a value string that normalizes different input values with a common\n * output.\n */\nexport function stringifyValueWithProperty(value: Value, property: ?string) {\n  // e.g., 0 => '0px', 'black' => 'rgba(0,0,0,1)'\n  const normalizedValue = normalizeValueWithProperty(value, property);\n  return typeof normalizedValue !== 'string'\n    ? JSON.stringify(normalizedValue || '')\n    : normalizedValue;\n}\n\n/**\n * Create the Atomic CSS rules needed for a given StyleSheet rule.\n * Translates StyleSheet declarations to CSS.\n */\nfunction createAtomicRules(identifier: string, property, value): Rules {\n  const rules = [];\n  const selector = `.${identifier}`;\n\n  // Handle non-standard properties and object values that require multiple\n  // CSS rules to be created.\n  switch (property) {\n    case 'animationKeyframes': {\n      const { animationNames, rules: keyframesRules } = processKeyframesValue(value);\n      const block = createDeclarationBlock({ animationName: animationNames.join(',') });\n      rules.push(`${selector}${block}`, ...keyframesRules);\n      break;\n    }\n\n    // Equivalent to using '::placeholder'\n    case 'placeholderTextColor': {\n      const block = createDeclarationBlock({ color: value, opacity: 1 });\n      rules.push(\n        `${selector}::-webkit-input-placeholder${block}`,\n        `${selector}::-moz-placeholder${block}`,\n        `${selector}:-ms-input-placeholder${block}`,\n        `${selector}::placeholder${block}`\n      );\n      break;\n    }\n\n    // Polyfill for additional 'pointer-events' values\n    // See d13f78622b233a0afc0c7a200c0a0792c8ca9e58\n    case 'pointerEvents': {\n      let finalValue = value;\n      if (value === 'auto' || value === 'box-only') {\n        finalValue = 'auto!important';\n        if (value === 'box-only') {\n          const block = createDeclarationBlock({ [property]: 'none' });\n          rules.push(`${selector}>*${block}`);\n        }\n      } else if (value === 'none' || value === 'box-none') {\n        finalValue = 'none!important';\n        if (value === 'box-none') {\n          const block = createDeclarationBlock({ [property]: 'auto' });\n          rules.push(`${selector}>*${block}`);\n        }\n      }\n      const block = createDeclarationBlock({ [property]: finalValue });\n      rules.push(`${selector}${block}`);\n      break;\n    }\n\n    // Polyfill for draft spec\n    // https://drafts.csswg.org/css-scrollbars-1/\n    case 'scrollbarWidth': {\n      if (value === 'none') {\n        rules.push(`${selector}::-webkit-scrollbar{display:none}`);\n      }\n      const block = createDeclarationBlock({ [property]: value });\n      rules.push(`${selector}${block}`);\n      break;\n    }\n\n    default: {\n      const block = createDeclarationBlock({ [property]: value });\n      rules.push(`${selector}${block}`);\n      break;\n    }\n  }\n\n  return rules;\n}\n\n/**\n * Creates a CSS declaration block from a StyleSheet object.\n */\nfunction createDeclarationBlock(style: Style) {\n  const domStyle = prefixStyles(createReactDOMStyle(style));\n  const declarationsString = Object.keys(domStyle)\n    .map(property => {\n      const value = domStyle[property];\n      const prop = hyphenateStyleName(property);\n      // The prefixer may return an array of values:\n      // { display: [ '-webkit-flex', 'flex' ] }\n      // to represent \"fallback\" declarations\n      // { display: -webkit-flex; display: flex; }\n      if (Array.isArray(value)) {\n        return value.map(v => `${prop}:${v}`).join(';');\n      } else {\n        return `${prop}:${value}`;\n      }\n    })\n    // Once properties are hyphenated, this will put the vendor\n    // prefixed and short-form properties first in the list.\n    .sort()\n    .join(';');\n\n  return `{${declarationsString};}`;\n}\n\n/**\n * An identifier is associated with a unique set of styles.\n */\nfunction createIdentifier(prefix, name, value) {\n  const hashedString = hash(name + stringifyValueWithProperty(value, name));\n  return process.env.NODE_ENV !== 'production'\n    ? `${prefix}-${name}-${hashedString}`\n    : `${prefix}-${hashedString}`;\n}\n\n/**\n * Create individual CSS keyframes rules.\n */\nfunction createKeyframes(keyframes) {\n  const prefixes = ['-webkit-', ''];\n  const identifier = createIdentifier('r', 'animation', keyframes);\n\n  const steps =\n    '{' +\n    Object.keys(keyframes)\n      .map(stepName => {\n        const rule = keyframes[stepName];\n        const block = createDeclarationBlock(rule);\n        return `${stepName}${block}`;\n      })\n      .join('') +\n    '}';\n\n  const rules = prefixes.map(prefix => {\n    return `@${prefix}keyframes ${identifier}${steps}`;\n  });\n  return { identifier, rules };\n}\n\n/**\n * Create CSS keyframes rules and names from a StyleSheet keyframes object.\n */\nfunction processKeyframesValue(keyframesValue) {\n  if (typeof keyframesValue === 'number') {\n    throw new Error(`Invalid CSS keyframes type: ${typeof keyframesValue}`);\n  }\n\n  const animationNames = [];\n  const rules = [];\n  const value = Array.isArray(keyframesValue) ? keyframesValue : [keyframesValue];\n\n  value.forEach(keyframes => {\n    if (typeof keyframes === 'string') {\n      // Support external animation libraries (identifiers only)\n      animationNames.push(keyframes);\n    } else {\n      // Create rules for each of the keyframes\n      const { identifier, rules: keyframesRules } = createKeyframes(keyframes);\n      animationNames.push(identifier);\n      rules.push(...keyframesRules);\n    }\n  });\n\n  return { animationNames, rules };\n}\n"]},"metadata":{},"sourceType":"module"}