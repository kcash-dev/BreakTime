{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { UnavailabilityError } from '@unimodules/core';\nimport NotificationScheduler from \"./NotificationScheduler\";\nimport { parseTrigger } from \"./scheduleNotificationAsync\";\nexport default function getNextTriggerDateAsync(trigger) {\n  return _regeneratorRuntime.async(function getNextTriggerDateAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (NotificationScheduler.getNextTriggerDateAsync) {\n            _context.next = 2;\n            break;\n          }\n\n          throw new UnavailabilityError('ExpoNotifications', 'getNextTriggerDateAsync');\n\n        case 2:\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(NotificationScheduler.getNextTriggerDateAsync(parseTrigger(trigger)));\n\n        case 4:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["../src/getNextTriggerDateAsync.ts"],"names":[],"mappings":";AAAA,SAAS,mBAAT,QAAoC,kBAApC;AAEA,OAAO,qBAAP;AAEA,SAAS,YAAT;AAEA,eAAe,SAAe,uBAAf,CACb,OADa;AAAA;AAAA;AAAA;AAAA;AAAA,cAGR,qBAAqB,CAAC,uBAHd;AAAA;AAAA;AAAA;;AAAA,gBAIL,IAAI,mBAAJ,CAAwB,mBAAxB,EAA6C,yBAA7C,CAJK;;AAAA;AAAA;AAAA,2CAOA,qBAAqB,CAAC,uBAAtB,CAA8C,YAAY,CAAC,OAAD,CAA1D,CAPA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { UnavailabilityError } from '@unimodules/core';\n\nimport NotificationScheduler from './NotificationScheduler';\nimport { SchedulableNotificationTriggerInput } from './Notifications.types';\nimport { parseTrigger } from './scheduleNotificationAsync';\n\nexport default async function getNextTriggerDateAsync(\n  trigger: SchedulableNotificationTriggerInput\n): Promise<number | null> {\n  if (!NotificationScheduler.getNextTriggerDateAsync) {\n    throw new UnavailabilityError('ExpoNotifications', 'getNextTriggerDateAsync');\n  }\n\n  return await NotificationScheduler.getNextTriggerDateAsync(parseTrigger(trigger));\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}