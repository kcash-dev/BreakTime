{"ast":null,"code":"import * as React from 'react';\nexport default function mergeRefs() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return function forwardRef(node) {\n    args.forEach(function (ref) {\n      if (ref == null) {\n        return;\n      }\n\n      if (typeof ref === 'function') {\n        ref(node);\n        return;\n      }\n\n      if (typeof ref === 'object') {\n        ref.current = node;\n        return;\n      }\n\n      console.error(\"mergeRefs cannot handle Refs of type boolean, number or string, received ref \" + String(ref));\n    });\n  };\n}","map":{"version":3,"sources":["/Users/kylecash/Documents/GitHub/BreakTime/node_modules/react-native-web/src/modules/mergeRefs/index.js"],"names":["React","mergeRefs","args","forwardRef","node","forEach","ref","current","console","error","String"],"mappings":"AASA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,eAAe,SAASC,SAAT,GAAmE;AAAA,oCAA7CC,IAA6C;AAA7CA,IAAAA,IAA6C;AAAA;;AAChF,SAAO,SAASC,UAAT,CAAoBC,IAApB,EAA8C;AACnDF,IAAAA,IAAI,CAACG,OAAL,CAAa,UAACC,GAAD,EAAgC;AAC3C,UAAIA,GAAG,IAAI,IAAX,EAAiB;AACf;AACD;;AACD,UAAI,OAAOA,GAAP,KAAe,UAAnB,EAA+B;AAC7BA,QAAAA,GAAG,CAACF,IAAD,CAAH;AACA;AACD;;AACD,UAAI,OAAOE,GAAP,KAAe,QAAnB,EAA6B;AAC3BA,QAAAA,GAAG,CAACC,OAAJ,GAAcH,IAAd;AACA;AACD;;AACDI,MAAAA,OAAO,CAACC,KAAR,mFACkFC,MAAM,CACpFJ,GADoF,CADxF;AAKD,KAjBD;AAkBD,GAnBD;AAoBD","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n */\n\nimport * as React from 'react';\n\nexport default function mergeRefs(...args: $ReadOnlyArray<React.ElementRef<any>>) {\n  return function forwardRef(node: HTMLElement | null) {\n    args.forEach((ref: React.ElementRef<any>) => {\n      if (ref == null) {\n        return;\n      }\n      if (typeof ref === 'function') {\n        ref(node);\n        return;\n      }\n      if (typeof ref === 'object') {\n        ref.current = node;\n        return;\n      }\n      console.error(\n        `mergeRefs cannot handle Refs of type boolean, number or string, received ref ${String(\n          ref\n        )}`\n      );\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}